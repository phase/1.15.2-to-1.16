--- com/mojang/util/QueueLogAppender.java
+++ com/mojang/util/QueueLogAppender.java
@@ -9,15 +9,17 @@
 import java.util.concurrent.locks.ReentrantReadWriteLock;
 import org.apache.logging.log4j.core.Filter;
 import org.apache.logging.log4j.core.Layout;
 import org.apache.logging.log4j.core.LogEvent;
 import org.apache.logging.log4j.core.appender.AbstractAppender;
+import org.apache.logging.log4j.core.config.Configuration;
 import org.apache.logging.log4j.core.config.plugins.Plugin;
 import org.apache.logging.log4j.core.config.plugins.PluginAttribute;
 import org.apache.logging.log4j.core.config.plugins.PluginElement;
 import org.apache.logging.log4j.core.config.plugins.PluginFactory;
 import org.apache.logging.log4j.core.layout.PatternLayout;
+import org.apache.logging.log4j.core.pattern.RegexReplacement;
 
 @Plugin(
    name = "Queue",
    category = "Core",
    elementType = "appender",
@@ -60,11 +62,11 @@
             QUEUES.put(var4, var6);
          }
 
          QUEUE_LOCK.writeLock().unlock();
          if (var2 == null) {
-            var2 = PatternLayout.newBuilder().build();
+            var2 = PatternLayout.createLayout((String)null, (Configuration)null, (RegexReplacement)null, (String)null, (String)null);
          }
 
          return new QueueLogAppender(var0, var3, (Layout)var2, var5, (BlockingQueue)var6);
       }
    }
