--- com/mojang/authlib/yggdrasil/YggdrasilGameProfileRepository.java
+++ com/mojang/authlib/yggdrasil/YggdrasilGameProfileRepository.java
@@ -2,10 +2,11 @@
 
 import com.google.common.base.Strings;
 import com.google.common.collect.Iterables;
 import com.google.common.collect.Sets;
 import com.mojang.authlib.Agent;
+import com.mojang.authlib.Environment;
 import com.mojang.authlib.GameProfile;
 import com.mojang.authlib.GameProfileRepository;
 import com.mojang.authlib.HttpAuthenticationService;
 import com.mojang.authlib.ProfileLookupCallback;
 import com.mojang.authlib.exceptions.AuthenticationException;
@@ -17,20 +18,20 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
 public class YggdrasilGameProfileRepository implements GameProfileRepository {
    private static final Logger LOGGER = LogManager.getLogger();
-   private static final String BASE_URL = "https://api.mojang.com/";
-   private static final String SEARCH_PAGE_URL = "https://api.mojang.com/profiles/";
+   private final String searchPageUrl;
    private static final int ENTRIES_PER_PAGE = 2;
    private static final int MAX_FAIL_COUNT = 3;
    private static final int DELAY_BETWEEN_PAGES = 100;
    private static final int DELAY_BETWEEN_FAILURES = 750;
    private final YggdrasilAuthenticationService authenticationService;
 
-   public YggdrasilGameProfileRepository(YggdrasilAuthenticationService var1) {
+   public YggdrasilGameProfileRepository(YggdrasilAuthenticationService var1, Environment var2) {
       this.authenticationService = var1;
+      this.searchPageUrl = var2.getAccountsHost() + "/profiles/";
    }
 
    public void findProfilesByNames(String[] var1, Agent var2, ProfileLookupCallback var3) {
       HashSet var4 = Sets.newHashSet();
       String[] var5 = var1;
@@ -52,29 +53,29 @@
 
          while(true) {
             boolean var9 = false;
 
             try {
-               ProfileSearchResultsResponse var23 = (ProfileSearchResultsResponse)this.authenticationService.makeRequest(HttpAuthenticationService.constantURL("https://api.mojang.com/profiles/" + var2.getName().toLowerCase()), var21, ProfileSearchResultsResponse.class);
+               ProfileSearchResultsResponse var23 = (ProfileSearchResultsResponse)this.authenticationService.makeRequest(HttpAuthenticationService.constantURL(this.searchPageUrl + var2.getName().toLowerCase()), var21, ProfileSearchResultsResponse.class);
                var22 = 0;
-               LOGGER.debug((String)"Page {} returned {} results, parsing", (int)0, (Object)var23.getProfiles().length);
+               LOGGER.debug("Page {} returned {} results, parsing", 0, var23.getProfiles().length);
                HashSet var24 = Sets.newHashSet((Iterable)var21);
                GameProfile[] var25 = var23.getProfiles();
                int var13 = var25.length;
 
                for(int var14 = 0; var14 < var13; ++var14) {
                   GameProfile var15 = var25[var14];
-                  LOGGER.debug((String)"Successfully looked up profile {}", (Object)var15);
+                  LOGGER.debug("Successfully looked up profile {}", var15);
                   var24.remove(var15.getName().toLowerCase());
                   var3.onProfileLookupSucceeded(var15);
                }
 
                Iterator var26 = var24.iterator();
 
                while(var26.hasNext()) {
                   String var27 = (String)var26.next();
-                  LOGGER.debug((String)"Couldn't find profile {}", (Object)var27);
+                  LOGGER.debug("Couldn't find profile {}", var27);
                   var3.onProfileLookupFailed(new GameProfile((UUID)null, var27), new ProfileNotFoundException("Server did not find the requested profile"));
                }
 
                try {
                   Thread.sleep(100L);
@@ -86,11 +87,11 @@
                if (var22 == 3) {
                   Iterator var11 = var21.iterator();
 
                   while(var11.hasNext()) {
                      String var12 = (String)var11.next();
-                     LOGGER.debug((String)"Couldn't find profile {} because of a server error", (Object)var12);
+                     LOGGER.debug("Couldn't find profile {} because of a server error", var12);
                      var3.onProfileLookupFailed(new GameProfile((UUID)null, var12), var10);
                   }
                } else {
                   try {
                      Thread.sleep(750L);
