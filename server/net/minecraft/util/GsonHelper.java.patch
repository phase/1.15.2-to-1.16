--- net/minecraft/util/GsonHelper.java
+++ net/minecraft/util/GsonHelper.java
@@ -12,11 +12,10 @@
 import com.google.gson.reflect.TypeToken;
 import com.google.gson.stream.JsonReader;
 import java.io.IOException;
 import java.io.Reader;
 import java.io.StringReader;
-import java.lang.reflect.Type;
 import javax.annotation.Nullable;
 import net.minecraft.core.Registry;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.world.item.Item;
 import org.apache.commons.lang3.StringUtils;
@@ -276,15 +275,15 @@
          throw new JsonParseException(var5);
       }
    }
 
    @Nullable
-   public static <T> T fromJson(Gson var0, Reader var1, Type var2, boolean var3) {
+   public static <T> T fromJson(Gson var0, Reader var1, TypeToken<T> var2, boolean var3) {
       try {
          JsonReader var4 = new JsonReader(var1);
          var4.setLenient(var3);
-         return var0.getAdapter(TypeToken.get(var2)).read(var4);
+         return var0.getAdapter(var2).read(var4);
       } catch (IOException var5) {
          throw new JsonParseException(var5);
       }
    }
 
@@ -292,11 +291,11 @@
    public static <T> T fromJson(Gson var0, String var1, Class<T> var2, boolean var3) {
       return fromJson(var0, (Reader)(new StringReader(var1)), (Class)var2, var3);
    }
 
    @Nullable
-   public static <T> T fromJson(Gson var0, Reader var1, Type var2) {
+   public static <T> T fromJson(Gson var0, Reader var1, TypeToken<T> var2) {
       return fromJson(var0, var1, var2, false);
    }
 
    @Nullable
    public static <T> T fromJson(Gson var0, Reader var1, Class<T> var2) {
