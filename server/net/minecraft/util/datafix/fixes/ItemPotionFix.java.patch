--- net/minecraft/util/datafix/fixes/ItemPotionFix.java
+++ net/minecraft/util/datafix/fixes/ItemPotionFix.java
@@ -1,19 +1,20 @@
 package net.minecraft.util.datafix.fixes;
 
 import com.mojang.datafixers.DSL;
 import com.mojang.datafixers.DataFix;
 import com.mojang.datafixers.DataFixUtils;
-import com.mojang.datafixers.Dynamic;
 import com.mojang.datafixers.OpticFinder;
 import com.mojang.datafixers.TypeRewriteRule;
 import com.mojang.datafixers.Typed;
 import com.mojang.datafixers.schemas.Schema;
 import com.mojang.datafixers.types.Type;
 import com.mojang.datafixers.util.Pair;
+import com.mojang.serialization.Dynamic;
 import java.util.Objects;
 import java.util.Optional;
+import net.minecraft.util.datafix.schemas.NamespacedSchema;
 
 public class ItemPotionFix extends DataFix {
    private static final String[] POTIONS = (String[])DataFixUtils.make(new String[128], (var0) -> {
       var0[0] = "minecraft:water";
       var0[1] = "minecraft:regeneration";
@@ -149,22 +150,22 @@
       super(var1, var2);
    }
 
    public TypeRewriteRule makeRule() {
       Type var1 = this.getInputSchema().getType(References.ITEM_STACK);
-      OpticFinder var2 = DSL.fieldFinder("id", DSL.named(References.ITEM_NAME.typeName(), DSL.namespacedString()));
+      OpticFinder var2 = DSL.fieldFinder("id", DSL.named(References.ITEM_NAME.typeName(), NamespacedSchema.namespacedString()));
       OpticFinder var3 = var1.findField("tag");
       return this.fixTypeEverywhereTyped("ItemPotionFix", var1, (var2x) -> {
          Optional var3x = var2x.getOptional(var2);
          if (var3x.isPresent() && Objects.equals(((Pair)var3x.get()).getSecond(), "minecraft:potion")) {
             Dynamic var4 = (Dynamic)var2x.get(DSL.remainderFinder());
             Optional var5 = var2x.getOptionalTyped(var3);
             short var6 = var4.get("Damage").asShort((short)0);
             if (var5.isPresent()) {
                Typed var7 = var2x;
                Dynamic var8 = (Dynamic)((Typed)var5.get()).get(DSL.remainderFinder());
-               Optional var9 = var8.get("Potion").asString();
+               Optional var9 = var8.get("Potion").asString().result();
                if (!var9.isPresent()) {
                   String var10 = POTIONS[var6 & 127];
                   Typed var11 = ((Typed)var5.get()).set(DSL.remainderFinder(), (Object)var8.set("Potion", var8.createString(var10 == null ? "minecraft:water" : var10)));
                   var7 = var2x.set(var3, var11);
                   if ((var6 & 16384) == 16384) {
