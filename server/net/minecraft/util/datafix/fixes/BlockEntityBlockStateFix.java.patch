--- net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix.java
+++ net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix.java
@@ -1,14 +1,14 @@
 package net.minecraft.util.datafix.fixes;
 
 import com.mojang.datafixers.DSL;
-import com.mojang.datafixers.Dynamic;
 import com.mojang.datafixers.OpticFinder;
 import com.mojang.datafixers.Typed;
 import com.mojang.datafixers.schemas.Schema;
 import com.mojang.datafixers.types.Type;
-import java.util.Optional;
+import com.mojang.datafixers.util.Pair;
+import com.mojang.serialization.Dynamic;
 
 public class BlockEntityBlockStateFix extends NamedEntityFix {
    public BlockEntityBlockStateFix(Schema var1, boolean var2) {
       super(var1, var2, "BlockEntityBlockStateFix", References.BLOCK_ENTITY, "minecraft:piston");
    }
@@ -24,10 +24,10 @@
       var5 = var5.remove("blockData");
       Dynamic var8 = BlockStateData.getTag(var6 << 4 | var7);
       Typed var9 = (Typed)var2.pointTyped(var1.getOps()).orElseThrow(() -> {
          return new IllegalStateException("Could not create new piston block entity.");
       });
-      return var9.set(DSL.remainderFinder(), (Object)var5).set(var4, (Typed)((Optional)var3.readTyped(var8).getSecond()).orElseThrow(() -> {
+      return var9.set(DSL.remainderFinder(), (Object)var5).set(var4, (Typed)((Pair)var3.readTyped(var8).result().orElseThrow(() -> {
          return new IllegalStateException("Could not parse newly created block state tag.");
-      }));
+      })).getFirst());
    }
 }
