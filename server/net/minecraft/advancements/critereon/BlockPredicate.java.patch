--- net/minecraft/advancements/critereon/BlockPredicate.java
+++ net/minecraft/advancements/critereon/BlockPredicate.java
@@ -8,11 +8,11 @@
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Registry;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.level.ServerLevel;
-import net.minecraft.tags.BlockTags;
+import net.minecraft.tags.SerializationTags;
 import net.minecraft.tags.Tag;
 import net.minecraft.util.GsonHelper;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.entity.BlockEntity;
 import net.minecraft.world.level.block.state.BlockState;
@@ -71,11 +71,11 @@
          }
 
          Tag var7 = null;
          if (var1.has("tag")) {
             ResourceLocation var5 = new ResourceLocation(GsonHelper.getAsString(var1, "tag"));
-            var7 = BlockTags.getAllTags().getTag(var5);
+            var7 = SerializationTags.getInstance().getBlocks().getTag(var5);
             if (var7 == null) {
                throw new JsonSyntaxException("Unknown block tag '" + var5 + "'");
             }
          }
 
@@ -94,11 +94,11 @@
          if (this.block != null) {
             var1.addProperty("block", Registry.BLOCK.getKey(this.block).toString());
          }
 
          if (this.tag != null) {
-            var1.addProperty("tag", this.tag.getId().toString());
+            var1.addProperty("tag", SerializationTags.getInstance().getBlocks().getIdOrThrow(this.tag).toString());
          }
 
          var1.add("nbt", this.nbt.serializeToJson());
          var1.add("state", this.properties.serializeToJson());
          return var1;
@@ -124,15 +124,25 @@
 
       public static BlockPredicate.Builder block() {
          return new BlockPredicate.Builder();
       }
 
+      public BlockPredicate.Builder of(Block var1) {
+         this.block = var1;
+         return this;
+      }
+
       public BlockPredicate.Builder of(Tag<Block> var1) {
          this.blocks = var1;
          return this;
       }
 
+      public BlockPredicate.Builder setProperties(StatePropertiesPredicate var1) {
+         this.properties = var1;
+         return this;
+      }
+
       public BlockPredicate build() {
          return new BlockPredicate(this.blocks, this.block, this.properties, this.nbt);
       }
    }
 }
