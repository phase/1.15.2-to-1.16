--- net/minecraft/world/entity/decoration/LeashFenceKnotEntity.java
+++ net/minecraft/world/entity/decoration/LeashFenceKnotEntity.java
@@ -8,12 +8,14 @@
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.network.protocol.game.ClientboundAddEntityPacket;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.tags.BlockTags;
+import net.minecraft.tags.Tag;
 import net.minecraft.util.Mth;
 import net.minecraft.world.InteractionHand;
+import net.minecraft.world.InteractionResult;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.Pose;
@@ -67,13 +69,13 @@
    }
 
    public void readAdditionalSaveData(CompoundTag var1) {
    }
 
-   public boolean interact(Player var1, InteractionHand var2) {
+   public InteractionResult interact(Player var1, InteractionHand var2) {
       if (this.level.isClientSide) {
-         return true;
+         return InteractionResult.SUCCESS;
       } else {
          boolean var3 = false;
          double var4 = 7.0D;
          List var6 = this.level.getEntitiesOfClass(Mob.class, new AABB(this.getX() - 7.0D, this.getY() - 7.0D, this.getZ() - 7.0D, this.getX() + 7.0D, this.getY() + 7.0D, this.getZ() + 7.0D));
          Iterator var7 = var6.iterator();
@@ -99,16 +101,16 @@
                   }
                }
             }
          }
 
-         return true;
+         return InteractionResult.CONSUME;
       }
    }
 
    public boolean survives() {
-      return this.level.getBlockState(this.pos).getBlock().is(BlockTags.FENCES);
+      return this.level.getBlockState(this.pos).getBlock().is((Tag)BlockTags.FENCES);
    }
 
    public static LeashFenceKnotEntity getOrCreateKnot(Level var0, BlockPos var1) {
       int var2 = var1.getX();
       int var3 = var1.getY();
