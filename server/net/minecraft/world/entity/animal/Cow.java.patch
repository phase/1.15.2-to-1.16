--- net/minecraft/world/entity/animal/Cow.java
+++ net/minecraft/world/entity/animal/Cow.java
@@ -2,26 +2,30 @@
 
 import net.minecraft.core.BlockPos;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.world.InteractionHand;
+import net.minecraft.world.InteractionResult;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.AgableMob;
 import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.EntityType;
+import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.Pose;
+import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
+import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.entity.ai.goal.BreedGoal;
 import net.minecraft.world.entity.ai.goal.FloatGoal;
 import net.minecraft.world.entity.ai.goal.FollowParentGoal;
 import net.minecraft.world.entity.ai.goal.LookAtPlayerGoal;
 import net.minecraft.world.entity.ai.goal.PanicGoal;
 import net.minecraft.world.entity.ai.goal.RandomLookAroundGoal;
 import net.minecraft.world.entity.ai.goal.TemptGoal;
 import net.minecraft.world.entity.ai.goal.WaterAvoidingRandomStrollGoal;
-import net.minecraft.world.entity.monster.SharedMonsterAttributes;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
+import net.minecraft.world.item.ItemUtils;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.item.crafting.Ingredient;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.state.BlockState;
 
@@ -39,14 +43,12 @@
       this.goalSelector.addGoal(5, new WaterAvoidingRandomStrollGoal(this, 1.0D));
       this.goalSelector.addGoal(6, new LookAtPlayerGoal(this, Player.class, 6.0F));
       this.goalSelector.addGoal(7, new RandomLookAroundGoal(this));
    }
 
-   protected void registerAttributes() {
-      super.registerAttributes();
-      this.getAttribute(SharedMonsterAttributes.MAX_HEALTH).setBaseValue(10.0D);
-      this.getAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).setBaseValue(0.20000000298023224D);
+   public static AttributeSupplier.Builder createAttributes() {
+      return Mob.createMobAttributes().add(Attributes.MAX_HEALTH, 10.0D).add(Attributes.MOVEMENT_SPEED, 0.20000000298023224D);
    }
 
    protected SoundEvent getAmbientSound() {
       return SoundEvents.COW_AMBIENT;
    }
@@ -65,22 +67,17 @@
 
    protected float getSoundVolume() {
       return 0.4F;
    }
 
-   public boolean mobInteract(Player var1, InteractionHand var2) {
+   public InteractionResult mobInteract(Player var1, InteractionHand var2) {
       ItemStack var3 = var1.getItemInHand(var2);
-      if (var3.getItem() == Items.BUCKET && !var1.abilities.instabuild && !this.isBaby()) {
+      if (var3.getItem() == Items.BUCKET && !this.isBaby()) {
          var1.playSound(SoundEvents.COW_MILK, 1.0F, 1.0F);
-         var3.shrink(1);
-         if (var3.isEmpty()) {
-            var1.setItemInHand(var2, new ItemStack(Items.MILK_BUCKET));
-         } else if (!var1.inventory.add(new ItemStack(Items.MILK_BUCKET))) {
-            var1.drop(new ItemStack(Items.MILK_BUCKET), false);
-         }
-
-         return true;
+         ItemStack var4 = ItemUtils.createBucketResult(var3, var1, Items.MILK_BUCKET.getDefaultInstance());
+         var1.setItemInHand(var2, var4);
+         return InteractionResult.sidedSuccess(this.level.isClientSide);
       } else {
          return super.mobInteract(var1, var2);
       }
    }
 
