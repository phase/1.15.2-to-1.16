--- net/minecraft/world/entity/animal/Sheep.java
+++ net/minecraft/world/entity/animal/Sheep.java
@@ -14,30 +14,35 @@
 import net.minecraft.network.syncher.EntityDataSerializers;
 import net.minecraft.network.syncher.SynchedEntityData;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
+import net.minecraft.sounds.SoundSource;
 import net.minecraft.world.DifficultyInstance;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.AgableMob;
+import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.EntityType;
+import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.Pose;
+import net.minecraft.world.entity.Shearable;
 import net.minecraft.world.entity.SpawnGroupData;
+import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
+import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.entity.ai.goal.BreedGoal;
 import net.minecraft.world.entity.ai.goal.EatBlockGoal;
 import net.minecraft.world.entity.ai.goal.FloatGoal;
 import net.minecraft.world.entity.ai.goal.FollowParentGoal;
 import net.minecraft.world.entity.ai.goal.LookAtPlayerGoal;
 import net.minecraft.world.entity.ai.goal.PanicGoal;
 import net.minecraft.world.entity.ai.goal.RandomLookAroundGoal;
 import net.minecraft.world.entity.ai.goal.TemptGoal;
 import net.minecraft.world.entity.ai.goal.WaterAvoidingRandomStrollGoal;
 import net.minecraft.world.entity.item.ItemEntity;
-import net.minecraft.world.entity.monster.SharedMonsterAttributes;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.inventory.AbstractContainerMenu;
 import net.minecraft.world.inventory.CraftingContainer;
 import net.minecraft.world.inventory.MenuType;
 import net.minecraft.world.item.DyeColor;
@@ -51,11 +56,11 @@
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.storage.loot.BuiltInLootTables;
 
-public class Sheep extends Animal {
+public class Sheep extends Animal implements Shearable {
    private static final EntityDataAccessor<Byte> DATA_WOOL_ID;
    private static final Map<DyeColor, ItemLike> ITEM_BY_DYE;
    private static final Map<DyeColor, float[]> COLORARRAY_BY_COLOR;
    private int eatAnimationTick;
    private EatBlockGoal eatBlockGoal;
@@ -98,14 +103,12 @@
       }
 
       super.aiStep();
    }
 
-   protected void registerAttributes() {
-      super.registerAttributes();
-      this.getAttribute(SharedMonsterAttributes.MAX_HEALTH).setBaseValue(8.0D);
-      this.getAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).setBaseValue(0.23000000417232513D);
+   public static AttributeSupplier.Builder createAttributes() {
+      return Mob.createMobAttributes().add(Attributes.MAX_HEALTH, 8.0D).add(Attributes.MOVEMENT_SPEED, 0.23000000417232513D);
    }
 
    protected void defineSynchedData() {
       super.defineSynchedData();
       this.entityData.define(DATA_WOOL_ID, (byte)0);
@@ -152,41 +155,42 @@
          }
       }
    }
 
    public boolean mobInteract(Player var1, InteractionHand var2) {
-      ItemStack var3 = var1.getItemInHand(var2);
-      if (var3.getItem() == Items.SHEARS && !this.isSheared() && !this.isBaby()) {
-         this.shear();
-         if (!this.level.isClientSide) {
+      if (!this.level.isClientSide) {
+         ItemStack var3 = var1.getItemInHand(var2);
+         if (var3.getItem() == Items.SHEARS && this.readyForShearing()) {
+            this.shear(SoundSource.PLAYERS);
             var3.hurtAndBreak(1, var1, (var1x) -> {
                var1x.broadcastBreakEvent(var2);
             });
+            return true;
          }
-
-         return true;
-      } else {
-         return super.mobInteract(var1, var2);
       }
+
+      return super.mobInteract(var1, var2);
    }
 
-   public void shear() {
-      if (!this.level.isClientSide) {
-         this.setSheared(true);
-         int var1 = 1 + this.random.nextInt(3);
+   public void shear(SoundSource var1) {
+      this.level.playSound((Player)null, (Entity)this, SoundEvents.SHEEP_SHEAR, var1, 1.0F, 1.0F);
+      this.setSheared(true);
+      int var2 = 1 + this.random.nextInt(3);
 
-         for(int var2 = 0; var2 < var1; ++var2) {
-            ItemEntity var3 = this.spawnAtLocation((ItemLike)ITEM_BY_DYE.get(this.getColor()), 1);
-            if (var3 != null) {
-               var3.setDeltaMovement(var3.getDeltaMovement().add((double)((this.random.nextFloat() - this.random.nextFloat()) * 0.1F), (double)(this.random.nextFloat() * 0.05F), (double)((this.random.nextFloat() - this.random.nextFloat()) * 0.1F)));
-            }
+      for(int var3 = 0; var3 < var2; ++var3) {
+         ItemEntity var4 = this.spawnAtLocation((ItemLike)ITEM_BY_DYE.get(this.getColor()), 1);
+         if (var4 != null) {
+            var4.setDeltaMovement(var4.getDeltaMovement().add((double)((this.random.nextFloat() - this.random.nextFloat()) * 0.1F), (double)(this.random.nextFloat() * 0.05F), (double)((this.random.nextFloat() - this.random.nextFloat()) * 0.1F)));
          }
       }
 
-      this.playSound(SoundEvents.SHEEP_SHEAR, 1.0F, 1.0F);
    }
 
+   public boolean readyForShearing() {
+      return this.isAlive() && !this.isSheared() && !this.isBaby();
+   }
+
    public void addAdditionalSaveData(CompoundTag var1) {
       super.addAdditionalSaveData(var1);
       var1.putBoolean("Sheared", this.isSheared());
       var1.putByte("Color", (byte)this.getColor().getId());
    }
