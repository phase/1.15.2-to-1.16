--- net/minecraft/world/entity/projectile/LlamaSpit.java
+++ net/minecraft/world/entity/projectile/LlamaSpit.java
@@ -1,78 +1,48 @@
 package net.minecraft.world.entity.projectile;
 
-import java.util.Iterator;
-import java.util.List;
-import java.util.UUID;
-import net.minecraft.nbt.CompoundTag;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.network.protocol.game.ClientboundAddEntityPacket;
 import net.minecraft.util.Mth;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
+import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.animal.horse.Llama;
 import net.minecraft.world.level.ClipContext;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.material.Material;
+import net.minecraft.world.phys.BlockHitResult;
 import net.minecraft.world.phys.EntityHitResult;
 import net.minecraft.world.phys.HitResult;
 import net.minecraft.world.phys.Vec3;
 
-public class LlamaSpit extends Entity implements Projectile {
-   public Llama owner;
-   private CompoundTag ownerTag;
-
+public class LlamaSpit extends Projectile {
    public LlamaSpit(EntityType<? extends LlamaSpit> var1, Level var2) {
       super(var1, var2);
    }
 
    public LlamaSpit(Level var1, Llama var2) {
       this(EntityType.LLAMA_SPIT, var1);
-      this.owner = var2;
+      super.setOwner(var2);
       this.setPos(var2.getX() - (double)(var2.getBbWidth() + 1.0F) * 0.5D * (double)Mth.sin(var2.yBodyRot * 0.017453292F), var2.getEyeY() - 0.10000000149011612D, var2.getZ() + (double)(var2.getBbWidth() + 1.0F) * 0.5D * (double)Mth.cos(var2.yBodyRot * 0.017453292F));
    }
 
    public void tick() {
       super.tick();
-      if (this.ownerTag != null) {
-         this.restoreOwnerFromSave();
-      }
-
       Vec3 var1 = this.getDeltaMovement();
-      HitResult var2 = ProjectileUtil.getHitResult(this, this.getBoundingBox().expandTowards(var1).inflate(1.0D), (var1x) -> {
-         return !var1x.isSpectator() && var1x != this.owner;
-      }, ClipContext.Block.OUTLINE, true);
+      HitResult var2 = ProjectileUtil.getHitResult(this, this::canHitEntity, ClipContext.Block.OUTLINE);
       if (var2 != null) {
          this.onHit(var2);
       }
 
       double var3 = this.getX() + var1.x;
       double var5 = this.getY() + var1.y;
       double var7 = this.getZ() + var1.z;
-      float var9 = Mth.sqrt(getHorizontalDistanceSqr(var1));
-      this.yRot = (float)(Mth.atan2(var1.x, var1.z) * 57.2957763671875D);
-
-      for(this.xRot = (float)(Mth.atan2(var1.y, (double)var9) * 57.2957763671875D); this.xRot - this.xRotO < -180.0F; this.xRotO -= 360.0F) {
-      }
-
-      while(this.xRot - this.xRotO >= 180.0F) {
-         this.xRotO += 360.0F;
-      }
-
-      while(this.yRot - this.yRotO < -180.0F) {
-         this.yRotO -= 360.0F;
-      }
-
-      while(this.yRot - this.yRotO >= 180.0F) {
-         this.yRotO += 360.0F;
-      }
-
-      this.xRot = Mth.lerp(0.2F, this.xRotO, this.xRot);
-      this.yRot = Mth.lerp(0.2F, this.yRotO, this.yRot);
-      float var10 = 0.99F;
-      float var11 = 0.06F;
+      this.updateRotation();
+      float var9 = 0.99F;
+      float var10 = 0.06F;
       if (!this.level.containsMaterial(this.getBoundingBox(), Material.AIR)) {
          this.remove();
       } else if (this.isInWaterOrBubble()) {
          this.remove();
       } else {
@@ -83,67 +53,29 @@
 
          this.setPos(var3, var5, var7);
       }
    }
 
-   public void shoot(double var1, double var3, double var5, float var7, float var8) {
-      Vec3 var9 = (new Vec3(var1, var3, var5)).normalize().add(this.random.nextGaussian() * 0.007499999832361937D * (double)var8, this.random.nextGaussian() * 0.007499999832361937D * (double)var8, this.random.nextGaussian() * 0.007499999832361937D * (double)var8).scale((double)var7);
-      this.setDeltaMovement(var9);
-      float var10 = Mth.sqrt(getHorizontalDistanceSqr(var9));
-      this.yRot = (float)(Mth.atan2(var9.x, var5) * 57.2957763671875D);
-      this.xRot = (float)(Mth.atan2(var9.y, (double)var10) * 57.2957763671875D);
-      this.yRotO = this.yRot;
-      this.xRotO = this.xRot;
+   protected void onHitEntity(EntityHitResult var1) {
+      super.onHitEntity(var1);
+      Entity var2 = this.getOwner();
+      if (var2 instanceof LivingEntity) {
+         var1.getEntity().hurt(DamageSource.indirectMobAttack(this, (LivingEntity)var2).setProjectile(), 1.0F);
+      }
+
    }
 
-   public void onHit(HitResult var1) {
-      HitResult.Type var2 = var1.getType();
-      if (var2 == HitResult.Type.ENTITY && this.owner != null) {
-         ((EntityHitResult)var1).getEntity().hurt(DamageSource.indirectMobAttack(this, this.owner).setProjectile(), 1.0F);
-      } else if (var2 == HitResult.Type.BLOCK && !this.level.isClientSide) {
+   protected void onHitBlock(BlockHitResult var1) {
+      super.onHitBlock(var1);
+      if (!this.level.isClientSide) {
          this.remove();
       }
 
    }
 
    protected void defineSynchedData() {
    }
 
-   protected void readAdditionalSaveData(CompoundTag var1) {
-      if (var1.contains("Owner", 10)) {
-         this.ownerTag = var1.getCompound("Owner");
-      }
-
-   }
-
-   protected void addAdditionalSaveData(CompoundTag var1) {
-      if (this.owner != null) {
-         CompoundTag var2 = new CompoundTag();
-         UUID var3 = this.owner.getUUID();
-         var2.putUUID("OwnerUUID", var3);
-         var1.put("Owner", var2);
-      }
-
-   }
-
-   private void restoreOwnerFromSave() {
-      if (this.ownerTag != null && this.ownerTag.hasUUID("OwnerUUID")) {
-         UUID var1 = this.ownerTag.getUUID("OwnerUUID");
-         List var2 = this.level.getEntitiesOfClass(Llama.class, this.getBoundingBox().inflate(15.0D));
-         Iterator var3 = var2.iterator();
-
-         while(var3.hasNext()) {
-            Llama var4 = (Llama)var3.next();
-            if (var4.getUUID().equals(var1)) {
-               this.owner = var4;
-               break;
-            }
-         }
-      }
-
-      this.ownerTag = null;
-   }
-
    public Packet<?> getAddEntityPacket() {
       return new ClientboundAddEntityPacket(this);
    }
 }
