--- net/minecraft/world/entity/projectile/DragonFireball.java
+++ net/minecraft/world/entity/projectile/DragonFireball.java
@@ -1,16 +1,16 @@
 package net.minecraft.world.entity.projectile;
 
 import java.util.Iterator;
 import java.util.List;
-import net.minecraft.core.BlockPos;
 import net.minecraft.core.particles.ParticleOptions;
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.effect.MobEffectInstance;
 import net.minecraft.world.effect.MobEffects;
 import net.minecraft.world.entity.AreaEffectCloud;
+import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.phys.EntityHitResult;
 import net.minecraft.world.phys.HitResult;
@@ -24,35 +24,39 @@
       super(EntityType.DRAGON_FIREBALL, var2, var3, var5, var7, var1);
    }
 
    protected void onHit(HitResult var1) {
       super.onHit(var1);
-      if (var1.getType() != HitResult.Type.ENTITY || !((EntityHitResult)var1).getEntity().is(this.owner)) {
+      Entity var2 = this.getOwner();
+      if (var1.getType() != HitResult.Type.ENTITY || !((EntityHitResult)var1).getEntity().is(var2)) {
          if (!this.level.isClientSide) {
-            List var2 = this.level.getEntitiesOfClass(LivingEntity.class, this.getBoundingBox().inflate(4.0D, 2.0D, 4.0D));
-            AreaEffectCloud var3 = new AreaEffectCloud(this.level, this.getX(), this.getY(), this.getZ());
-            var3.setOwner(this.owner);
-            var3.setParticle(ParticleTypes.DRAGON_BREATH);
-            var3.setRadius(3.0F);
-            var3.setDuration(600);
-            var3.setRadiusPerTick((7.0F - var3.getRadius()) / (float)var3.getDuration());
-            var3.addEffect(new MobEffectInstance(MobEffects.HARM, 1, 1));
-            if (!var2.isEmpty()) {
-               Iterator var4 = var2.iterator();
+            List var3 = this.level.getEntitiesOfClass(LivingEntity.class, this.getBoundingBox().inflate(4.0D, 2.0D, 4.0D));
+            AreaEffectCloud var4 = new AreaEffectCloud(this.level, this.getX(), this.getY(), this.getZ());
+            if (var2 instanceof LivingEntity) {
+               var4.setOwner((LivingEntity)var2);
+            }
 
-               while(var4.hasNext()) {
-                  LivingEntity var5 = (LivingEntity)var4.next();
-                  double var6 = this.distanceToSqr(var5);
-                  if (var6 < 16.0D) {
-                     var3.setPos(var5.getX(), var5.getY(), var5.getZ());
+            var4.setParticle(ParticleTypes.DRAGON_BREATH);
+            var4.setRadius(3.0F);
+            var4.setDuration(600);
+            var4.setRadiusPerTick((7.0F - var4.getRadius()) / (float)var4.getDuration());
+            var4.addEffect(new MobEffectInstance(MobEffects.HARM, 1, 1));
+            if (!var3.isEmpty()) {
+               Iterator var5 = var3.iterator();
+
+               while(var5.hasNext()) {
+                  LivingEntity var6 = (LivingEntity)var5.next();
+                  double var7 = this.distanceToSqr(var6);
+                  if (var7 < 16.0D) {
+                     var4.setPos(var6.getX(), var6.getY(), var6.getZ());
                      break;
                   }
                }
             }
 
-            this.level.levelEvent(2006, new BlockPos(this), 0);
-            this.level.addFreshEntity(var3);
+            this.level.levelEvent(2006, this.blockPosition(), this.isSilent() ? -1 : 1);
+            this.level.addFreshEntity(var4);
             this.remove();
          }
 
       }
    }
