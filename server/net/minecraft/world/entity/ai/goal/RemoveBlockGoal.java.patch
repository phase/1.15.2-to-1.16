--- net/minecraft/world/entity/ai/goal/RemoveBlockGoal.java
+++ net/minecraft/world/entity/ai/goal/RemoveBlockGoal.java
@@ -67,11 +67,11 @@
    }
 
    public void tick() {
       super.tick();
       Level var1 = this.removerMob.level;
-      BlockPos var2 = new BlockPos(this.removerMob);
+      BlockPos var2 = this.removerMob.blockPosition();
       BlockPos var3 = this.getPosWithBlock(var2, var1);
       Random var4 = this.removerMob.getRandom();
       if (this.isReachedTarget() && var3 != null) {
          Vec3 var5;
          double var6;
@@ -111,20 +111,20 @@
 
    }
 
    @Nullable
    private BlockPos getPosWithBlock(BlockPos var1, BlockGetter var2) {
-      if (var2.getBlockState(var1).getBlock() == this.blockToRemove) {
+      if (var2.getBlockState(var1).is(this.blockToRemove)) {
          return var1;
       } else {
          BlockPos[] var3 = new BlockPos[]{var1.below(), var1.west(), var1.east(), var1.north(), var1.south(), var1.below().below()};
          BlockPos[] var4 = var3;
          int var5 = var3.length;
 
          for(int var6 = 0; var6 < var5; ++var6) {
             BlockPos var7 = var4[var6];
-            if (var2.getBlockState(var7).getBlock() == this.blockToRemove) {
+            if (var2.getBlockState(var7).is(this.blockToRemove)) {
                return var7;
             }
          }
 
          return null;
@@ -134,9 +134,9 @@
    protected boolean isValidTarget(LevelReader var1, BlockPos var2) {
       ChunkAccess var3 = var1.getChunk(var2.getX() >> 4, var2.getZ() >> 4, ChunkStatus.FULL, false);
       if (var3 == null) {
          return false;
       } else {
-         return var3.getBlockState(var2).getBlock() == this.blockToRemove && var3.getBlockState(var2.above()).isAir() && var3.getBlockState(var2.above(2)).isAir();
+         return var3.getBlockState(var2).is(this.blockToRemove) && var3.getBlockState(var2.above()).isAir() && var3.getBlockState(var2.above(2)).isAir();
       }
    }
 }
