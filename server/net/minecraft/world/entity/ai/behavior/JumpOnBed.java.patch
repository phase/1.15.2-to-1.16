--- net/minecraft/world/entity/ai/behavior/JumpOnBed.java
+++ net/minecraft/world/entity/ai/behavior/JumpOnBed.java
@@ -10,20 +10,20 @@
 import net.minecraft.world.entity.ai.memory.MemoryModuleType;
 import net.minecraft.world.entity.ai.memory.MemoryStatus;
 import net.minecraft.world.entity.ai.memory.WalkTarget;
 
 public class JumpOnBed extends Behavior<Mob> {
-   private final float speed;
+   private final float speedModifier;
    @Nullable
    private BlockPos targetBed;
    private int remainingTimeToReachBed;
    private int remainingJumps;
    private int remainingCooldownUntilNextJump;
 
    public JumpOnBed(float var1) {
       super(ImmutableMap.of(MemoryModuleType.NEAREST_BED, MemoryStatus.VALUE_PRESENT, MemoryModuleType.WALK_TARGET, MemoryStatus.VALUE_ABSENT));
-      this.speed = var1;
+      this.speedModifier = var1;
    }
 
    protected boolean checkExtraStartConditions(ServerLevel var1, Mob var2) {
       return var2.isBaby() && this.nearBed(var1, var2);
    }
@@ -69,25 +69,25 @@
 
       }
    }
 
    private void startWalkingTowardsBed(Mob var1, BlockPos var2) {
-      var1.getBrain().setMemory(MemoryModuleType.WALK_TARGET, (Object)(new WalkTarget(var2, this.speed, 0)));
+      var1.getBrain().setMemory(MemoryModuleType.WALK_TARGET, (Object)(new WalkTarget(var2, this.speedModifier, 0)));
    }
 
    private boolean nearBed(ServerLevel var1, Mob var2) {
       return this.onOrOverBed(var1, var2) || this.getNearestBed(var2).isPresent();
    }
 
    private boolean onOrOverBed(ServerLevel var1, Mob var2) {
-      BlockPos var3 = new BlockPos(var2);
+      BlockPos var3 = var2.blockPosition();
       BlockPos var4 = var3.below();
       return this.isBed(var1, var3) || this.isBed(var1, var4);
    }
 
    private boolean onBedSurface(ServerLevel var1, Mob var2) {
-      return this.isBed(var1, new BlockPos(var2));
+      return this.isBed(var1, var2.blockPosition());
    }
 
    private boolean isBed(ServerLevel var1, BlockPos var2) {
       return var1.getBlockState(var2).is(BlockTags.BEDS);
    }
