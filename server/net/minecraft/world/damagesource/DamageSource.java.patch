--- net/minecraft/world/damagesource/DamageSource.java
+++ net/minecraft/world/damagesource/DamageSource.java
@@ -5,11 +5,13 @@
 import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.entity.projectile.AbstractArrow;
-import net.minecraft.world.entity.projectile.AbstractHurtingProjectile;
+import net.minecraft.world.entity.projectile.Fireball;
+import net.minecraft.world.entity.projectile.FireworkRocketEntity;
+import net.minecraft.world.entity.projectile.WitherSkull;
 import net.minecraft.world.level.Explosion;
 import net.minecraft.world.phys.Vec3;
 
 public class DamageSource {
    public static final DamageSource IN_FIRE = (new DamageSource("inFire")).setIsFire();
@@ -29,11 +31,10 @@
    public static final DamageSource MAGIC = (new DamageSource("magic")).bypassArmor().setMagic();
    public static final DamageSource WITHER = (new DamageSource("wither")).bypassArmor();
    public static final DamageSource ANVIL = new DamageSource("anvil");
    public static final DamageSource FALLING_BLOCK = new DamageSource("fallingBlock");
    public static final DamageSource DRAGON_BREATH = (new DamageSource("dragonBreath")).bypassArmor();
-   public static final DamageSource FIREWORKS = (new DamageSource("fireworks")).setExplosion();
    public static final DamageSource DRY_OUT = new DamageSource("dryout");
    public static final DamageSource SWEET_BERRY_BUSH = new DamageSource("sweetBerryBush");
    private boolean bypassArmor;
    private boolean bypassInvul;
    private boolean bypassMagic;
@@ -67,14 +68,22 @@
 
    public static DamageSource trident(Entity var0, @Nullable Entity var1) {
       return (new IndirectEntityDamageSource("trident", var0, var1)).setProjectile();
    }
 
-   public static DamageSource fireball(AbstractHurtingProjectile var0, @Nullable Entity var1) {
+   public static DamageSource fireworks(FireworkRocketEntity var0, @Nullable Entity var1) {
+      return (new IndirectEntityDamageSource("fireworks", var0, var1)).setExplosion();
+   }
+
+   public static DamageSource fireball(Fireball var0, @Nullable Entity var1) {
       return var1 == null ? (new IndirectEntityDamageSource("onFire", var0, var0)).setIsFire().setProjectile() : (new IndirectEntityDamageSource("fireball", var0, var1)).setIsFire().setProjectile();
    }
 
+   public static DamageSource witherSkull(WitherSkull var0, Entity var1) {
+      return (new IndirectEntityDamageSource("witherSkull", var0, var1)).setProjectile();
+   }
+
    public static DamageSource thrown(Entity var0, @Nullable Entity var1) {
       return (new IndirectEntityDamageSource("thrown", var0, var1)).setProjectile();
    }
 
    public static DamageSource indirectMagic(Entity var0, @Nullable Entity var1) {
@@ -84,21 +93,25 @@
    public static DamageSource thorns(Entity var0) {
       return (new EntityDamageSource("thorns", var0)).setThorns().setMagic();
    }
 
    public static DamageSource explosion(@Nullable Explosion var0) {
-      return var0 != null && var0.getSourceMob() != null ? (new EntityDamageSource("explosion.player", var0.getSourceMob())).setScalesWithDifficulty().setExplosion() : (new DamageSource("explosion")).setScalesWithDifficulty().setExplosion();
+      return explosion(var0 != null ? var0.getSourceMob() : null);
    }
 
    public static DamageSource explosion(@Nullable LivingEntity var0) {
       return var0 != null ? (new EntityDamageSource("explosion.player", var0)).setScalesWithDifficulty().setExplosion() : (new DamageSource("explosion")).setScalesWithDifficulty().setExplosion();
    }
 
-   public static DamageSource netherBedExplosion() {
-      return new NetherBedDamage();
+   public static DamageSource badRespawnPointExplosion() {
+      return new BadRespawnPointDamage();
    }
 
+   public String toString() {
+      return "DamageSource (" + this.msgId + ")";
+   }
+
    public boolean isProjectile() {
       return this.isProjectile;
    }
 
    public DamageSource setProjectile() {
