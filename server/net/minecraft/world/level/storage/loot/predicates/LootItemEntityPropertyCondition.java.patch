--- net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition.java
+++ net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition.java
@@ -4,12 +4,10 @@
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonSerializationContext;
 import java.util.Set;
 import net.minecraft.advancements.critereon.EntityPredicate;
-import net.minecraft.core.BlockPos;
-import net.minecraft.resources.ResourceLocation;
 import net.minecraft.util.GsonHelper;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.level.storage.loot.LootContext;
 import net.minecraft.world.level.storage.loot.parameters.LootContextParam;
 import net.minecraft.world.level.storage.loot.parameters.LootContextParams;
@@ -22,18 +20,22 @@
    private LootItemEntityPropertyCondition(EntityPredicate var1, LootContext.EntityTarget var2) {
       this.predicate = var1;
       this.entityTarget = var2;
    }
 
+   public LootItemConditionType getType() {
+      return LootItemConditions.ENTITY_PROPERTIES;
+   }
+
    public Set<LootContextParam<?>> getReferencedContextParams() {
       return ImmutableSet.of(LootContextParams.BLOCK_POS, this.entityTarget.getParam());
    }
 
    public boolean test(LootContext var1) {
       Entity var2 = (Entity)var1.getParamOrNull(this.entityTarget.getParam());
-      BlockPos var3 = (BlockPos)var1.getParamOrNull(LootContextParams.BLOCK_POS);
-      return this.predicate.matches(var1.getLevel(), var3 != null ? new Vec3(var3) : null, var2);
+      Vec3 var3 = (Vec3)var1.getParamOrNull(LootContextParams.ORIGIN);
+      return this.predicate.matches(var1.getLevel(), var3, var2);
    }
 
    public static LootItemCondition.Builder entityPresent(LootContext.EntityTarget var0) {
       return hasProperties(var0, EntityPredicate.Builder.entity());
    }
@@ -42,13 +44,18 @@
       return () -> {
          return new LootItemEntityPropertyCondition(var1.build(), var0);
       };
    }
 
-   public static class Serializer extends LootItemCondition.Serializer<LootItemEntityPropertyCondition> {
-      protected Serializer() {
-         super(new ResourceLocation("entity_properties"), LootItemEntityPropertyCondition.class);
+   public static LootItemCondition.Builder hasProperties(LootContext.EntityTarget var0, EntityPredicate var1) {
+      return () -> {
+         return new LootItemEntityPropertyCondition(var1, var0);
+      };
+   }
+
+   public static class Serializer implements net.minecraft.world.level.storage.loot.Serializer<LootItemEntityPropertyCondition> {
+      public Serializer() {
       }
 
       public void serialize(JsonObject var1, LootItemEntityPropertyCondition var2, JsonSerializationContext var3) {
          var1.add("predicate", var2.predicate.serializeToJson());
          var1.add("entity", var3.serialize(var2.entityTarget));
