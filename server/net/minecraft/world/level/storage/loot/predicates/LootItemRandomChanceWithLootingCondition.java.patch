--- net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition.java
+++ net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition.java
@@ -3,11 +3,10 @@
 import com.google.common.collect.ImmutableSet;
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonSerializationContext;
 import java.util.Set;
-import net.minecraft.resources.ResourceLocation;
 import net.minecraft.util.GsonHelper;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.item.enchantment.EnchantmentHelper;
 import net.minecraft.world.level.storage.loot.LootContext;
@@ -21,10 +20,14 @@
    private LootItemRandomChanceWithLootingCondition(float var1, float var2) {
       this.percent = var1;
       this.lootingMultiplier = var2;
    }
 
+   public LootItemConditionType getType() {
+      return LootItemConditions.RANDOM_CHANCE_WITH_LOOTING;
+   }
+
    public Set<LootContextParam<?>> getReferencedContextParams() {
       return ImmutableSet.of(LootContextParams.KILLER_ENTITY);
    }
 
    public boolean test(LootContext var1) {
@@ -41,13 +44,12 @@
       return () -> {
          return new LootItemRandomChanceWithLootingCondition(var0, var1);
       };
    }
 
-   public static class Serializer extends LootItemCondition.Serializer<LootItemRandomChanceWithLootingCondition> {
-      protected Serializer() {
-         super(new ResourceLocation("random_chance_with_looting"), LootItemRandomChanceWithLootingCondition.class);
+   public static class Serializer implements net.minecraft.world.level.storage.loot.Serializer<LootItemRandomChanceWithLootingCondition> {
+      public Serializer() {
       }
 
       public void serialize(JsonObject var1, LootItemRandomChanceWithLootingCondition var2, JsonSerializationContext var3) {
          var1.addProperty("chance", (Number)var2.percent);
          var1.addProperty("looting_multiplier", (Number)var2.lootingMultiplier);
