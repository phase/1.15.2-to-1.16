--- net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition.java
+++ net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition.java
@@ -10,11 +10,10 @@
 import java.util.Iterator;
 import java.util.LinkedHashMap;
 import java.util.Map;
 import java.util.Set;
 import java.util.Map.Entry;
-import net.minecraft.resources.ResourceLocation;
 import net.minecraft.util.GsonHelper;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.level.storage.loot.LootContext;
 import net.minecraft.world.level.storage.loot.RandomValueBounds;
 import net.minecraft.world.level.storage.loot.parameters.LootContextParam;
@@ -28,10 +27,14 @@
    private EntityHasScoreCondition(Map<String, RandomValueBounds> var1, LootContext.EntityTarget var2) {
       this.scores = ImmutableMap.copyOf(var1);
       this.entityTarget = var2;
    }
 
+   public LootItemConditionType getType() {
+      return LootItemConditions.ENTITY_SCORES;
+   }
+
    public Set<LootContextParam<?>> getReferencedContextParams() {
       return ImmutableSet.of(this.entityTarget.getParam());
    }
 
    public boolean test(LootContext var1) {
@@ -63,13 +66,12 @@
          String var6 = var1.getScoreboardName();
          return !var2.hasPlayerScore(var6, var5) ? false : var4.matchesValue(var2.getOrCreatePlayerScore(var6, var5).getScore());
       }
    }
 
-   public static class Serializer extends LootItemCondition.Serializer<EntityHasScoreCondition> {
-      protected Serializer() {
-         super(new ResourceLocation("entity_scores"), EntityHasScoreCondition.class);
+   public static class Serializer implements net.minecraft.world.level.storage.loot.Serializer<EntityHasScoreCondition> {
+      public Serializer() {
       }
 
       public void serialize(JsonObject var1, EntityHasScoreCondition var2, JsonSerializationContext var3) {
          JsonObject var4 = new JsonObject();
          Iterator var5 = var2.scores.entrySet().iterator();
