--- net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction.java
+++ net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction.java
@@ -3,11 +3,10 @@
 import com.google.common.collect.ImmutableSet;
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonSerializationContext;
 import java.util.Set;
-import net.minecraft.resources.ResourceLocation;
 import net.minecraft.util.GsonHelper;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.enchantment.EnchantmentHelper;
@@ -25,10 +24,14 @@
       super(var1);
       this.value = var2;
       this.limit = var3;
    }
 
+   public LootItemFunctionType getType() {
+      return LootItemFunctions.LOOTING_ENCHANT;
+   }
+
    public Set<LootContextParam<?>> getReferencedContextParams() {
       return ImmutableSet.of(LootContextParams.KILLER_ENTITY);
    }
 
    private boolean hasLimit() {
@@ -56,12 +59,11 @@
    public static LootingEnchantFunction.Builder lootingMultiplier(RandomValueBounds var0) {
       return new LootingEnchantFunction.Builder(var0);
    }
 
    public static class Serializer extends LootItemConditionalFunction.Serializer<LootingEnchantFunction> {
-      protected Serializer() {
-         super(new ResourceLocation("looting_enchant"), LootingEnchantFunction.class);
+      public Serializer() {
       }
 
       public void serialize(JsonObject var1, LootingEnchantFunction var2, JsonSerializationContext var3) {
          super.serialize(var1, (LootItemConditionalFunction)var2, var3);
          var1.add("count", var3.serialize(var2.value));
