--- net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction.java
+++ net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction.java
@@ -5,11 +5,10 @@
 import com.google.gson.JsonObject;
 import com.google.gson.JsonSerializationContext;
 import java.util.List;
 import java.util.function.Function;
 import java.util.function.Predicate;
-import net.minecraft.resources.ResourceLocation;
 import net.minecraft.util.GsonHelper;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.storage.loot.LootContext;
 import net.minecraft.world.level.storage.loot.ValidationContext;
 import net.minecraft.world.level.storage.loot.predicates.ConditionUserBuilder;
@@ -43,13 +42,12 @@
 
    protected static LootItemConditionalFunction.Builder<?> simpleBuilder(Function<LootItemCondition[], LootItemFunction> var0) {
       return new LootItemConditionalFunction.DummyBuilder(var0);
    }
 
-   public abstract static class Serializer<T extends LootItemConditionalFunction> extends LootItemFunction.Serializer<T> {
-      public Serializer(ResourceLocation var1, Class<T> var2) {
-         super(var1, var2);
+   public abstract static class Serializer<T extends LootItemConditionalFunction> implements net.minecraft.world.level.storage.loot.Serializer<T> {
+      public Serializer() {
       }
 
       public void serialize(JsonObject var1, T var2, JsonSerializationContext var3) {
          if (!ArrayUtils.isEmpty((Object[])var2.predicates)) {
             var1.add("conditions", var3.serialize(var2.predicates));
