--- net/minecraft/world/level/block/BambooSaplingBlock.java
+++ net/minecraft/world/level/block/BambooSaplingBlock.java
@@ -9,33 +9,34 @@
 import net.minecraft.world.item.SwordItem;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.LevelReader;
+import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.properties.BambooLeaves;
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.VoxelShape;
 
 public class BambooSaplingBlock extends Block implements BonemealableBlock {
    protected static final VoxelShape SAPLING_SHAPE = Block.box(4.0D, 0.0D, 4.0D, 12.0D, 12.0D, 12.0D);
 
-   public BambooSaplingBlock(Block.Properties var1) {
+   public BambooSaplingBlock(BlockBehaviour.Properties var1) {
       super(var1);
    }
 
-   public Block.OffsetType getOffsetType() {
-      return Block.OffsetType.XZ;
+   public BlockBehaviour.OffsetType getOffsetType() {
+      return BlockBehaviour.OffsetType.XZ;
    }
 
    public VoxelShape getShape(BlockState var1, BlockGetter var2, BlockPos var3, CollisionContext var4) {
       Vec3 var5 = var1.getOffset(var2, var3);
       return SAPLING_SHAPE.move(var5.x, var5.y, var5.z);
    }
 
-   public void tick(BlockState var1, ServerLevel var2, BlockPos var3, Random var4) {
+   public void randomTick(BlockState var1, ServerLevel var2, BlockPos var3, Random var4) {
       if (var4.nextInt(3) == 0 && var2.isEmptyBlock(var3.above()) && var2.getRawBrightness(var3.above(), 0) >= 9) {
          this.growBamboo(var2, var3);
       }
 
    }
@@ -46,11 +47,11 @@
 
    public BlockState updateShape(BlockState var1, Direction var2, BlockState var3, LevelAccessor var4, BlockPos var5, BlockPos var6) {
       if (!var1.canSurvive(var4, var5)) {
          return Blocks.AIR.defaultBlockState();
       } else {
-         if (var2 == Direction.UP && var3.getBlock() == Blocks.BAMBOO) {
+         if (var2 == Direction.UP && var3.is(Blocks.BAMBOO)) {
             var4.setBlock(var5, Blocks.BAMBOO.defaultBlockState(), 2);
          }
 
          return super.updateShape(var1, var2, var3, var4, var5, var6);
       }
