--- net/minecraft/world/level/block/ShulkerBoxBlock.java
+++ net/minecraft/world/level/block/ShulkerBoxBlock.java
@@ -8,28 +8,30 @@
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.stats.Stats;
 import net.minecraft.world.Container;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
+import net.minecraft.world.ShulkerSharedHelper;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.item.ItemEntity;
+import net.minecraft.world.entity.monster.piglin.PiglinAi;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.inventory.AbstractContainerMenu;
 import net.minecraft.world.item.BlockPlaceContext;
 import net.minecraft.world.item.DyeColor;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.entity.BlockEntity;
 import net.minecraft.world.level.block.entity.ShulkerBoxBlockEntity;
+import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.StateDefinition;
 import net.minecraft.world.level.block.state.properties.EnumProperty;
 import net.minecraft.world.level.material.PushReaction;
 import net.minecraft.world.level.storage.loot.LootContext;
 import net.minecraft.world.level.storage.loot.parameters.LootContextParams;
-import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.BlockHitResult;
 import net.minecraft.world.phys.shapes.CollisionContext;
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
 
@@ -37,52 +39,48 @@
    public static final EnumProperty<Direction> FACING;
    public static final ResourceLocation CONTENTS;
    @Nullable
    private final DyeColor color;
 
-   public ShulkerBoxBlock(@Nullable DyeColor var1, Block.Properties var2) {
+   public ShulkerBoxBlock(@Nullable DyeColor var1, BlockBehaviour.Properties var2) {
       super(var2);
       this.color = var1;
       this.registerDefaultState((BlockState)((BlockState)this.stateDefinition.any()).setValue(FACING, Direction.UP));
    }
 
    public BlockEntity newBlockEntity(BlockGetter var1) {
       return new ShulkerBoxBlockEntity(this.color);
    }
 
-   public boolean isSuffocating(BlockState var1, BlockGetter var2, BlockPos var3) {
-      return true;
-   }
-
    public RenderShape getRenderShape(BlockState var1) {
       return RenderShape.ENTITYBLOCK_ANIMATED;
    }
 
    public InteractionResult use(BlockState var1, Level var2, BlockPos var3, Player var4, InteractionHand var5, BlockHitResult var6) {
       if (var2.isClientSide) {
          return InteractionResult.SUCCESS;
       } else if (var4.isSpectator()) {
-         return InteractionResult.SUCCESS;
+         return InteractionResult.CONSUME;
       } else {
          BlockEntity var7 = var2.getBlockEntity(var3);
          if (var7 instanceof ShulkerBoxBlockEntity) {
-            Direction var8 = (Direction)var1.getValue(FACING);
-            ShulkerBoxBlockEntity var10 = (ShulkerBoxBlockEntity)var7;
+            ShulkerBoxBlockEntity var8 = (ShulkerBoxBlockEntity)var7;
             boolean var9;
-            if (var10.getAnimationStatus() == ShulkerBoxBlockEntity.AnimationStatus.CLOSED) {
-               AABB var11 = Shapes.block().bounds().expandTowards((double)(0.5F * (float)var8.getStepX()), (double)(0.5F * (float)var8.getStepY()), (double)(0.5F * (float)var8.getStepZ())).contract((double)var8.getStepX(), (double)var8.getStepY(), (double)var8.getStepZ());
-               var9 = var2.noCollision(var11.move(var3.relative(var8)));
+            if (var8.getAnimationStatus() == ShulkerBoxBlockEntity.AnimationStatus.CLOSED) {
+               Direction var10 = (Direction)var1.getValue(FACING);
+               var9 = var2.noCollision(ShulkerSharedHelper.openBoundingBox(var3, var10));
             } else {
                var9 = true;
             }
 
             if (var9) {
-               var4.openMenu(var10);
+               var4.openMenu(var8);
                var4.awardStat(Stats.OPEN_SHULKER_BOX);
+               PiglinAi.angerNearbyPiglins(var4, true);
             }
 
-            return InteractionResult.SUCCESS;
+            return InteractionResult.CONSUME;
          } else {
             return InteractionResult.PASS;
          }
       }
    }
@@ -108,11 +106,11 @@
 
             if (var6.hasCustomName()) {
                var7.setHoverName(var6.getCustomName());
             }
 
-            ItemEntity var9 = new ItemEntity(var1, (double)var2.getX(), (double)var2.getY(), (double)var2.getZ(), var7);
+            ItemEntity var9 = new ItemEntity(var1, (double)var2.getX() + 0.5D, (double)var2.getY() + 0.5D, (double)var2.getZ() + 0.5D, var7);
             var9.setDefaultPickUpDelay();
             var1.addFreshEntity(var9);
          } else {
             var6.unpackLootTable(var4);
          }
@@ -145,11 +143,11 @@
       }
 
    }
 
    public void onRemove(BlockState var1, Level var2, BlockPos var3, BlockState var4, boolean var5) {
-      if (var1.getBlock() != var4.getBlock()) {
+      if (!var1.is(var4.getBlock())) {
          BlockEntity var6 = var2.getBlockEntity(var3);
          if (var6 instanceof ShulkerBoxBlockEntity) {
             var2.updateNeighbourForOutputSignal(var3, var1.getBlock());
          }
 
