--- net/minecraft/world/level/block/BellBlock.java
+++ net/minecraft/world/level/block/BellBlock.java
@@ -8,18 +8,19 @@
 import net.minecraft.stats.Stats;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.player.Player;
-import net.minecraft.world.entity.projectile.AbstractArrow;
+import net.minecraft.world.entity.projectile.Projectile;
 import net.minecraft.world.item.BlockPlaceContext;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.LevelReader;
 import net.minecraft.world.level.block.entity.BellBlockEntity;
 import net.minecraft.world.level.block.entity.BlockEntity;
+import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.StateDefinition;
 import net.minecraft.world.level.block.state.properties.BellAttachType;
 import net.minecraft.world.level.block.state.properties.BlockStateProperties;
 import net.minecraft.world.level.block.state.properties.BooleanProperty;
@@ -32,11 +33,11 @@
 import net.minecraft.world.phys.shapes.Shapes;
 import net.minecraft.world.phys.shapes.VoxelShape;
 
 public class BellBlock extends BaseEntityBlock {
    public static final DirectionProperty FACING;
-   private static final EnumProperty<BellAttachType> ATTACHMENT;
+   public static final EnumProperty<BellAttachType> ATTACHMENT;
    public static final BooleanProperty POWERED;
    private static final VoxelShape NORTH_SOUTH_FLOOR_SHAPE;
    private static final VoxelShape EAST_WEST_FLOOR_SHAPE;
    private static final VoxelShape BELL_TOP_SHAPE;
    private static final VoxelShape BELL_BOTTOM_SHAPE;
@@ -47,11 +48,11 @@
    private static final VoxelShape TO_EAST;
    private static final VoxelShape TO_NORTH;
    private static final VoxelShape TO_SOUTH;
    private static final VoxelShape CEILING_SHAPE;
 
-   public BellBlock(Block.Properties var1) {
+   public BellBlock(BlockBehaviour.Properties var1) {
       super(var1);
       this.registerDefaultState((BlockState)((BlockState)((BlockState)((BlockState)this.stateDefinition.any()).setValue(FACING, Direction.NORTH)).setValue(ATTACHMENT, BellAttachType.FLOOR)).setValue(POWERED, false));
    }
 
    public void neighborChanged(BlockState var1, Level var2, BlockPos var3, Block var4, BlockPos var5, boolean var6) {
@@ -64,21 +65,18 @@
          var2.setBlock(var3, (BlockState)var1.setValue(POWERED, var7), 3);
       }
 
    }
 
-   public void onProjectileHit(Level var1, BlockState var2, BlockHitResult var3, Entity var4) {
-      if (var4 instanceof AbstractArrow) {
-         Entity var5 = ((AbstractArrow)var4).getOwner();
-         Player var6 = var5 instanceof Player ? (Player)var5 : null;
-         this.onHit(var1, var2, var3, var6, true);
-      }
-
+   public void onProjectileHit(Level var1, BlockState var2, BlockHitResult var3, Projectile var4) {
+      Entity var5 = var4.getOwner();
+      Player var6 = var5 instanceof Player ? (Player)var5 : null;
+      this.onHit(var1, var2, var3, var6, true);
    }
 
    public InteractionResult use(BlockState var1, Level var2, BlockPos var3, Player var4, InteractionHand var5, BlockHitResult var6) {
-      return this.onHit(var2, var1, var6, var4, true) ? InteractionResult.SUCCESS : InteractionResult.PASS;
+      return this.onHit(var2, var1, var6, var4, true) ? InteractionResult.sidedSuccess(var2.isClientSide) : InteractionResult.PASS;
    }
 
    public boolean onHit(Level var1, BlockState var2, BlockHitResult var3, @Nullable Player var4, boolean var5) {
       Direction var6 = var3.getDirection();
       BlockPos var7 = var3.getBlockPos();
@@ -208,11 +206,12 @@
          return super.updateShape(var1, var2, var3, var4, var5, var6);
       }
    }
 
    public boolean canSurvive(BlockState var1, LevelReader var2, BlockPos var3) {
-      return FaceAttachedHorizontalDirectionalBlock.canAttach(var2, var3, getConnectedDirection(var1).getOpposite());
+      Direction var4 = getConnectedDirection(var1).getOpposite();
+      return var4 == Direction.UP ? Block.canSupportCenter(var2, var3.above(), Direction.DOWN) : FaceAttachedHorizontalDirectionalBlock.canAttach(var2, var3, var4);
    }
 
    private static Direction getConnectedDirection(BlockState var0) {
       switch((BellAttachType)var0.getValue(ATTACHMENT)) {
       case FLOOR:
