--- net/minecraft/world/level/block/state/properties/BlockStateProperties.java
+++ net/minecraft/world/level/block/state/properties/BlockStateProperties.java
@@ -1,9 +1,10 @@
 package net.minecraft.world.level.block.state.properties;
 
 import java.util.function.Predicate;
 import net.minecraft.core.Direction;
+import net.minecraft.core.FrontAndTop;
 
 public class BlockStateProperties {
    public static final BooleanProperty ATTACHED = BooleanProperty.create("attached");
    public static final BooleanProperty BOTTOM = BooleanProperty.create("bottom");
    public static final BooleanProperty CONDITIONAL = BooleanProperty.create("conditional");
@@ -31,10 +32,11 @@
    public static final BooleanProperty SIGNAL_FIRE = BooleanProperty.create("signal_fire");
    public static final BooleanProperty SNOWY = BooleanProperty.create("snowy");
    public static final BooleanProperty TRIGGERED = BooleanProperty.create("triggered");
    public static final BooleanProperty UNSTABLE = BooleanProperty.create("unstable");
    public static final BooleanProperty WATERLOGGED = BooleanProperty.create("waterlogged");
+   public static final BooleanProperty VINE_END = BooleanProperty.create("vine_end");
    public static final EnumProperty<Direction.Axis> HORIZONTAL_AXIS;
    public static final EnumProperty<Direction.Axis> AXIS;
    public static final BooleanProperty UP;
    public static final BooleanProperty DOWN;
    public static final BooleanProperty NORTH;
@@ -42,12 +44,17 @@
    public static final BooleanProperty SOUTH;
    public static final BooleanProperty WEST;
    public static final DirectionProperty FACING;
    public static final DirectionProperty FACING_HOPPER;
    public static final DirectionProperty HORIZONTAL_FACING;
+   public static final EnumProperty<FrontAndTop> ORIENTATION;
    public static final EnumProperty<AttachFace> ATTACH_FACE;
    public static final EnumProperty<BellAttachType> BELL_ATTACHMENT;
+   public static final EnumProperty<WallSide> EAST_WALL;
+   public static final EnumProperty<WallSide> NORTH_WALL;
+   public static final EnumProperty<WallSide> SOUTH_WALL;
+   public static final EnumProperty<WallSide> WEST_WALL;
    public static final EnumProperty<RedstoneSide> EAST_REDSTONE;
    public static final EnumProperty<RedstoneSide> NORTH_REDSTONE;
    public static final EnumProperty<RedstoneSide> SOUTH_REDSTONE;
    public static final EnumProperty<RedstoneSide> WEST_REDSTONE;
    public static final EnumProperty<DoubleBlockHalf> DOUBLE_BLOCK_HALF;
@@ -76,10 +83,11 @@
    public static final IntegerProperty NOTE;
    public static final IntegerProperty PICKLES;
    public static final IntegerProperty POWER;
    public static final IntegerProperty STAGE;
    public static final IntegerProperty STABILITY_DISTANCE;
+   public static final IntegerProperty RESPAWN_ANCHOR_CHARGES;
    public static final IntegerProperty ROTATION_16;
    public static final EnumProperty<BedPart> BED_PART;
    public static final EnumProperty<ChestType> CHEST_TYPE;
    public static final EnumProperty<ComparatorMode> MODE_COMPARATOR;
    public static final EnumProperty<DoorHingeSide> DOOR_HINGE;
@@ -102,12 +110,17 @@
       FACING = DirectionProperty.create("facing", Direction.NORTH, Direction.EAST, Direction.SOUTH, Direction.WEST, Direction.UP, Direction.DOWN);
       FACING_HOPPER = DirectionProperty.create("facing", (var0) -> {
          return var0 != Direction.UP;
       });
       HORIZONTAL_FACING = DirectionProperty.create("facing", (Predicate)Direction.Plane.HORIZONTAL);
+      ORIENTATION = EnumProperty.create("orientation", FrontAndTop.class);
       ATTACH_FACE = EnumProperty.create("face", AttachFace.class);
       BELL_ATTACHMENT = EnumProperty.create("attachment", BellAttachType.class);
+      EAST_WALL = EnumProperty.create("east", WallSide.class);
+      NORTH_WALL = EnumProperty.create("north", WallSide.class);
+      SOUTH_WALL = EnumProperty.create("south", WallSide.class);
+      WEST_WALL = EnumProperty.create("west", WallSide.class);
       EAST_REDSTONE = EnumProperty.create("east", RedstoneSide.class);
       NORTH_REDSTONE = EnumProperty.create("north", RedstoneSide.class);
       SOUTH_REDSTONE = EnumProperty.create("south", RedstoneSide.class);
       WEST_REDSTONE = EnumProperty.create("west", RedstoneSide.class);
       DOUBLE_BLOCK_HALF = EnumProperty.create("half", DoubleBlockHalf.class);
@@ -138,10 +151,11 @@
       NOTE = IntegerProperty.create("note", 0, 24);
       PICKLES = IntegerProperty.create("pickles", 1, 4);
       POWER = IntegerProperty.create("power", 0, 15);
       STAGE = IntegerProperty.create("stage", 0, 1);
       STABILITY_DISTANCE = IntegerProperty.create("distance", 0, 7);
+      RESPAWN_ANCHOR_CHARGES = IntegerProperty.create("charges", 0, 4);
       ROTATION_16 = IntegerProperty.create("rotation", 0, 15);
       BED_PART = EnumProperty.create("part", BedPart.class);
       CHEST_TYPE = EnumProperty.create("type", ChestType.class);
       MODE_COMPARATOR = EnumProperty.create("mode", ComparatorMode.class);
       DOOR_HINGE = EnumProperty.create("hinge", DoorHingeSide.class);
