--- net/minecraft/world/level/block/LadderBlock.java
+++ net/minecraft/world/level/block/LadderBlock.java
@@ -1,15 +1,16 @@
 package net.minecraft.world.level.block;
 
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
-import net.minecraft.world.item.BlockPlaceContext;
+import net.minecraft.world.item.context.BlockPlaceContext;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.LevelReader;
+import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.StateDefinition;
 import net.minecraft.world.level.block.state.properties.BlockStateProperties;
 import net.minecraft.world.level.block.state.properties.BooleanProperty;
 import net.minecraft.world.level.block.state.properties.DirectionProperty;
@@ -24,11 +25,11 @@
    protected static final VoxelShape EAST_AABB;
    protected static final VoxelShape WEST_AABB;
    protected static final VoxelShape SOUTH_AABB;
    protected static final VoxelShape NORTH_AABB;
 
-   protected LadderBlock(Block.Properties var1) {
+   protected LadderBlock(BlockBehaviour.Properties var1) {
       super(var1);
       this.registerDefaultState((BlockState)((BlockState)((BlockState)this.stateDefinition.any()).setValue(FACING, Direction.NORTH)).setValue(WATERLOGGED, false));
    }
 
    public VoxelShape getShape(BlockState var1, BlockGetter var2, BlockPos var3, CollisionContext var4) {
@@ -45,11 +46,11 @@
       }
    }
 
    private boolean canAttachTo(BlockGetter var1, BlockPos var2, Direction var3) {
       BlockState var4 = var1.getBlockState(var2);
-      return !var4.isSignalSource() && var4.isFaceSturdy(var1, var2, var3);
+      return var4.isFaceSturdy(var1, var2, var3);
    }
 
    public boolean canSurvive(BlockState var1, LevelReader var2, BlockPos var3) {
       Direction var4 = (Direction)var1.getValue(FACING);
       return this.canAttachTo(var2, var3.relative(var4.getOpposite()), var4);
@@ -70,11 +71,11 @@
    @Nullable
    public BlockState getStateForPlacement(BlockPlaceContext var1) {
       BlockState var2;
       if (!var1.replacingClickedOnBlock()) {
          var2 = var1.getLevel().getBlockState(var1.getClickedPos().relative(var1.getClickedFace().getOpposite()));
-         if (var2.getBlock() == this && var2.getValue(FACING) == var1.getClickedFace()) {
+         if (var2.is(this) && var2.getValue(FACING) == var1.getClickedFace()) {
             return null;
          }
       }
 
       var2 = this.defaultBlockState();
