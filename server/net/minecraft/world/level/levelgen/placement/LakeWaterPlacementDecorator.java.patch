--- net/minecraft/world/level/levelgen/placement/LakeWaterPlacementDecorator.java
+++ net/minecraft/world/level/levelgen/placement/LakeWaterPlacementDecorator.java
@@ -1,27 +1,23 @@
 package net.minecraft.world.level.levelgen.placement;
 
-import com.mojang.datafixers.Dynamic;
+import com.mojang.serialization.Codec;
 import java.util.Random;
-import java.util.function.Function;
 import java.util.stream.Stream;
 import net.minecraft.core.BlockPos;
-import net.minecraft.world.level.LevelAccessor;
-import net.minecraft.world.level.chunk.ChunkGenerator;
-import net.minecraft.world.level.levelgen.ChunkGeneratorSettings;
 
 public class LakeWaterPlacementDecorator extends FeatureDecorator<ChanceDecoratorConfiguration> {
-   public LakeWaterPlacementDecorator(Function<Dynamic<?>, ? extends ChanceDecoratorConfiguration> var1) {
+   public LakeWaterPlacementDecorator(Codec<ChanceDecoratorConfiguration> var1) {
       super(var1);
    }
 
-   public Stream<BlockPos> getPositions(LevelAccessor var1, ChunkGenerator<? extends ChunkGeneratorSettings> var2, Random var3, ChanceDecoratorConfiguration var4, BlockPos var5) {
-      if (var3.nextInt(var4.chance) == 0) {
-         int var6 = var3.nextInt(16) + var5.getX();
-         int var7 = var3.nextInt(16) + var5.getZ();
-         int var8 = var3.nextInt(var2.getGenDepth());
-         return Stream.of(new BlockPos(var6, var8, var7));
+   public Stream<BlockPos> getPositions(DecorationContext var1, Random var2, ChanceDecoratorConfiguration var3, BlockPos var4) {
+      if (var2.nextInt(var3.chance) == 0) {
+         int var5 = var2.nextInt(16) + var4.getX();
+         int var6 = var2.nextInt(16) + var4.getZ();
+         int var7 = var2.nextInt(var1.getGenDepth());
+         return Stream.of(new BlockPos(var5, var7, var6));
       } else {
          return Stream.empty();
       }
    }
 }
