--- net/minecraft/world/level/levelgen/feature/KelpFeature.java
+++ net/minecraft/world/level/levelgen/feature/KelpFeature.java
@@ -1,53 +1,52 @@
 package net.minecraft.world.level.levelgen.feature;
 
-import com.mojang.datafixers.Dynamic;
+import com.mojang.serialization.Codec;
 import java.util.Random;
-import java.util.function.Function;
 import net.minecraft.core.BlockPos;
-import net.minecraft.world.level.LevelAccessor;
+import net.minecraft.world.level.StructureFeatureManager;
+import net.minecraft.world.level.WorldGenLevel;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.KelpBlock;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.chunk.ChunkGenerator;
-import net.minecraft.world.level.levelgen.ChunkGeneratorSettings;
 import net.minecraft.world.level.levelgen.Heightmap;
 import net.minecraft.world.level.levelgen.feature.configurations.NoneFeatureConfiguration;
 
 public class KelpFeature extends Feature<NoneFeatureConfiguration> {
-   public KelpFeature(Function<Dynamic<?>, ? extends NoneFeatureConfiguration> var1) {
+   public KelpFeature(Codec<NoneFeatureConfiguration> var1) {
       super(var1);
    }
 
-   public boolean place(LevelAccessor var1, ChunkGenerator<? extends ChunkGeneratorSettings> var2, Random var3, BlockPos var4, NoneFeatureConfiguration var5) {
-      int var6 = 0;
-      int var7 = var1.getHeight(Heightmap.Types.OCEAN_FLOOR, var4.getX(), var4.getZ());
-      BlockPos var8 = new BlockPos(var4.getX(), var7, var4.getZ());
-      if (var1.getBlockState(var8).getBlock() == Blocks.WATER) {
-         BlockState var9 = Blocks.KELP.defaultBlockState();
-         BlockState var10 = Blocks.KELP_PLANT.defaultBlockState();
-         int var11 = 1 + var3.nextInt(10);
+   public boolean place(WorldGenLevel var1, StructureFeatureManager var2, ChunkGenerator var3, Random var4, BlockPos var5, NoneFeatureConfiguration var6) {
+      int var7 = 0;
+      int var8 = var1.getHeight(Heightmap.Types.OCEAN_FLOOR, var5.getX(), var5.getZ());
+      BlockPos var9 = new BlockPos(var5.getX(), var8, var5.getZ());
+      if (var1.getBlockState(var9).is(Blocks.WATER)) {
+         BlockState var10 = Blocks.KELP.defaultBlockState();
+         BlockState var11 = Blocks.KELP_PLANT.defaultBlockState();
+         int var12 = 1 + var4.nextInt(10);
 
-         for(int var12 = 0; var12 <= var11; ++var12) {
-            if (var1.getBlockState(var8).getBlock() == Blocks.WATER && var1.getBlockState(var8.above()).getBlock() == Blocks.WATER && var10.canSurvive(var1, var8)) {
-               if (var12 == var11) {
-                  var1.setBlock(var8, (BlockState)var9.setValue(KelpBlock.AGE, var3.nextInt(4) + 20), 2);
-                  ++var6;
+         for(int var13 = 0; var13 <= var12; ++var13) {
+            if (var1.getBlockState(var9).is(Blocks.WATER) && var1.getBlockState(var9.above()).is(Blocks.WATER) && var11.canSurvive(var1, var9)) {
+               if (var13 == var12) {
+                  var1.setBlock(var9, (BlockState)var10.setValue(KelpBlock.AGE, var4.nextInt(4) + 20), 2);
+                  ++var7;
                } else {
-                  var1.setBlock(var8, var10, 2);
+                  var1.setBlock(var9, var11, 2);
                }
-            } else if (var12 > 0) {
-               BlockPos var13 = var8.below();
-               if (var9.canSurvive(var1, var13) && var1.getBlockState(var13.below()).getBlock() != Blocks.KELP) {
-                  var1.setBlock(var13, (BlockState)var9.setValue(KelpBlock.AGE, var3.nextInt(4) + 20), 2);
-                  ++var6;
+            } else if (var13 > 0) {
+               BlockPos var14 = var9.below();
+               if (var10.canSurvive(var1, var14) && !var1.getBlockState(var14.below()).is(Blocks.KELP)) {
+                  var1.setBlock(var14, (BlockState)var10.setValue(KelpBlock.AGE, var4.nextInt(4) + 20), 2);
+                  ++var7;
                }
                break;
             }
 
-            var8 = var8.above();
+            var9 = var9.above();
          }
       }
 
-      return var6 > 0;
+      return var7 > 0;
    }
 }
