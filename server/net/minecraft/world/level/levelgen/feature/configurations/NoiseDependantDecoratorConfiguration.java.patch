--- net/minecraft/world/level/levelgen/feature/configurations/NoiseDependantDecoratorConfiguration.java
+++ net/minecraft/world/level/levelgen/feature/configurations/NoiseDependantDecoratorConfiguration.java
@@ -1,28 +1,26 @@
 package net.minecraft.world.level.levelgen.feature.configurations;
 
-import com.google.common.collect.ImmutableMap;
-import com.mojang.datafixers.Dynamic;
-import com.mojang.datafixers.types.DynamicOps;
+import com.mojang.datafixers.util.Function3;
+import com.mojang.serialization.Codec;
+import com.mojang.serialization.codecs.RecordCodecBuilder;
 
 public class NoiseDependantDecoratorConfiguration implements DecoratorConfiguration {
+   public static final Codec<NoiseDependantDecoratorConfiguration> CODEC = RecordCodecBuilder.create((var0) -> {
+      return var0.group(Codec.DOUBLE.fieldOf("noise_level").forGetter((var0x) -> {
+         return var0x.noiseLevel;
+      }), Codec.INT.fieldOf("below_noise").forGetter((var0x) -> {
+         return var0x.belowNoise;
+      }), Codec.INT.fieldOf("above_noise").forGetter((var0x) -> {
+         return var0x.aboveNoise;
+      })).apply(var0, (Function3)(NoiseDependantDecoratorConfiguration::new));
+   });
    public final double noiseLevel;
    public final int belowNoise;
    public final int aboveNoise;
 
    public NoiseDependantDecoratorConfiguration(double var1, int var3, int var4) {
       this.noiseLevel = var1;
       this.belowNoise = var3;
       this.aboveNoise = var4;
    }
-
-   public <T> Dynamic<T> serialize(DynamicOps<T> var1) {
-      return new Dynamic(var1, var1.createMap(ImmutableMap.of(var1.createString("noise_level"), var1.createDouble(this.noiseLevel), var1.createString("below_noise"), var1.createInt(this.belowNoise), var1.createString("above_noise"), var1.createInt(this.aboveNoise))));
-   }
-
-   public static NoiseDependantDecoratorConfiguration deserialize(Dynamic<?> var0) {
-      double var1 = var0.get("noise_level").asDouble(0.0D);
-      int var3 = var0.get("below_noise").asInt(0);
-      int var4 = var0.get("above_noise").asInt(0);
-      return new NoiseDependantDecoratorConfiguration(var1, var3, var4);
-   }
 }
