--- net/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration.java
+++ net/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration.java
@@ -1,24 +1,19 @@
 package net.minecraft.world.level.levelgen.feature.configurations;
 
-import com.google.common.collect.ImmutableMap;
-import com.mojang.datafixers.Dynamic;
-import com.mojang.datafixers.types.DynamicOps;
-import net.minecraft.world.level.block.Blocks;
+import com.mojang.serialization.Codec;
 import net.minecraft.world.level.block.state.BlockState;
 
 public class BlockStateConfiguration implements FeatureConfiguration {
+   public static final Codec<BlockStateConfiguration> CODEC;
    public final BlockState state;
 
    public BlockStateConfiguration(BlockState var1) {
       this.state = var1;
    }
 
-   public <T> Dynamic<T> serialize(DynamicOps<T> var1) {
-      return new Dynamic(var1, var1.createMap(ImmutableMap.of(var1.createString("state"), BlockState.serialize(var1, this.state).getValue())));
+   static {
+      CODEC = BlockState.CODEC.fieldOf("state").xmap(BlockStateConfiguration::new, (var0) -> {
+         return var0.state;
+      }).codec();
    }
-
-   public static <T> BlockStateConfiguration deserialize(Dynamic<T> var0) {
-      BlockState var1 = (BlockState)var0.get("state").map(BlockState::deserialize).orElse(Blocks.AIR.defaultBlockState());
-      return new BlockStateConfiguration(var1);
-   }
 }
