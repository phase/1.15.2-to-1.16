--- net/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration.java
+++ net/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration.java
@@ -1,26 +1,21 @@
 package net.minecraft.world.level.levelgen.feature.configurations;
 
-import com.google.common.collect.ImmutableMap;
-import com.mojang.datafixers.Dynamic;
-import com.mojang.datafixers.types.DynamicOps;
+import com.mojang.serialization.Codec;
 import java.util.List;
+import java.util.function.Supplier;
 import net.minecraft.world.level.levelgen.feature.ConfiguredFeature;
 
 public class SimpleRandomFeatureConfiguration implements FeatureConfiguration {
-   public final List<ConfiguredFeature<?, ?>> features;
+   public static final Codec<SimpleRandomFeatureConfiguration> CODEC;
+   public final List<Supplier<ConfiguredFeature<?, ?>>> features;
 
-   public SimpleRandomFeatureConfiguration(List<ConfiguredFeature<?, ?>> var1) {
+   public SimpleRandomFeatureConfiguration(List<Supplier<ConfiguredFeature<?, ?>>> var1) {
       this.features = var1;
    }
 
-   public <T> Dynamic<T> serialize(DynamicOps<T> var1) {
-      return new Dynamic(var1, var1.createMap(ImmutableMap.of(var1.createString("features"), var1.createList(this.features.stream().map((var1x) -> {
-         return var1x.serialize(var1).getValue();
-      })))));
+   static {
+      CODEC = ConfiguredFeature.CODEC.listOf().fieldOf("features").xmap(SimpleRandomFeatureConfiguration::new, (var0) -> {
+         return var0.features;
+      }).codec();
    }
-
-   public static <T> SimpleRandomFeatureConfiguration deserialize(Dynamic<T> var0) {
-      List var1 = var0.get("features").asList(ConfiguredFeature::deserialize);
-      return new SimpleRandomFeatureConfiguration(var1);
-   }
 }
