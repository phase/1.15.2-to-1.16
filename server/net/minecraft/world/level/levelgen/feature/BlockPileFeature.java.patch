--- net/minecraft/world/level/levelgen/feature/BlockPileFeature.java
+++ net/minecraft/world/level/levelgen/feature/BlockPileFeature.java
@@ -1,26 +1,25 @@
 package net.minecraft.world.level.levelgen.feature;
 
-import com.mojang.datafixers.Dynamic;
+import com.mojang.serialization.Codec;
 import java.util.Iterator;
 import java.util.Random;
-import java.util.function.Function;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.world.level.LevelAccessor;
+import net.minecraft.world.level.WorldGenLevel;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.chunk.ChunkGenerator;
-import net.minecraft.world.level.levelgen.ChunkGeneratorSettings;
 import net.minecraft.world.level.levelgen.feature.configurations.BlockPileConfiguration;
 
 public class BlockPileFeature extends Feature<BlockPileConfiguration> {
-   public BlockPileFeature(Function<Dynamic<?>, ? extends BlockPileConfiguration> var1) {
+   public BlockPileFeature(Codec<BlockPileConfiguration> var1) {
       super(var1);
    }
 
-   public boolean place(LevelAccessor var1, ChunkGenerator<? extends ChunkGeneratorSettings> var2, Random var3, BlockPos var4, BlockPileConfiguration var5) {
+   public boolean place(WorldGenLevel var1, ChunkGenerator var2, Random var3, BlockPos var4, BlockPileConfiguration var5) {
       if (var4.getY() < 5) {
          return false;
       } else {
          int var6 = 2 + var3.nextInt(2);
          int var7 = 2 + var3.nextInt(2);
@@ -42,11 +41,11 @@
    }
 
    private boolean mayPlaceOn(LevelAccessor var1, BlockPos var2, Random var3) {
       BlockPos var4 = var2.below();
       BlockState var5 = var1.getBlockState(var4);
-      return var5.getBlock() == Blocks.GRASS_PATH ? var3.nextBoolean() : var5.isFaceSturdy(var1, var4, Direction.UP);
+      return var5.is(Blocks.GRASS_PATH) ? var3.nextBoolean() : var5.isFaceSturdy(var1, var4, Direction.UP);
    }
 
    private void tryPlaceBlock(LevelAccessor var1, BlockPos var2, Random var3, BlockPileConfiguration var4) {
       if (var1.isEmptyBlock(var2) && this.mayPlaceOn(var1, var2, var3)) {
          var1.setBlock(var2, var4.stateProvider.getState(var3, var2), 4);
