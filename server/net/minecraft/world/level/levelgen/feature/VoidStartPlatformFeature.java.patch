--- net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature.java
+++ net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature.java
@@ -1,31 +1,29 @@
 package net.minecraft.world.level.levelgen.feature;
 
-import com.mojang.datafixers.Dynamic;
+import com.mojang.serialization.Codec;
 import java.util.Random;
-import java.util.function.Function;
 import net.minecraft.core.BlockPos;
 import net.minecraft.world.level.ChunkPos;
-import net.minecraft.world.level.LevelAccessor;
+import net.minecraft.world.level.WorldGenLevel;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.chunk.ChunkGenerator;
-import net.minecraft.world.level.levelgen.ChunkGeneratorSettings;
 import net.minecraft.world.level.levelgen.feature.configurations.NoneFeatureConfiguration;
 
 public class VoidStartPlatformFeature extends Feature<NoneFeatureConfiguration> {
    private static final BlockPos PLATFORM_ORIGIN = new BlockPos(8, 3, 8);
    private static final ChunkPos PLATFORM_ORIGIN_CHUNK;
 
-   public VoidStartPlatformFeature(Function<Dynamic<?>, ? extends NoneFeatureConfiguration> var1) {
+   public VoidStartPlatformFeature(Codec<NoneFeatureConfiguration> var1) {
       super(var1);
    }
 
    private static int checkerboardDistance(int var0, int var1, int var2, int var3) {
       return Math.max(Math.abs(var0 - var2), Math.abs(var1 - var3));
    }
 
-   public boolean place(LevelAccessor var1, ChunkGenerator<? extends ChunkGeneratorSettings> var2, Random var3, BlockPos var4, NoneFeatureConfiguration var5) {
+   public boolean place(WorldGenLevel var1, ChunkGenerator var2, Random var3, BlockPos var4, NoneFeatureConfiguration var5) {
       ChunkPos var6 = new ChunkPos(var4);
       if (checkerboardDistance(var6.x, var6.z, PLATFORM_ORIGIN_CHUNK.x, PLATFORM_ORIGIN_CHUNK.z) > 1) {
          return true;
       } else {
          BlockPos.MutableBlockPos var7 = new BlockPos.MutableBlockPos();
