--- net/minecraft/world/level/material/Material.java
+++ net/minecraft/world/level/material/Material.java
@@ -23,10 +23,11 @@
    public static final Material ICE_SOLID;
    public static final Material SAND;
    public static final Material SPONGE;
    public static final Material SHULKER_SHELL;
    public static final Material WOOD;
+   public static final Material NETHER_WOOD;
    public static final Material BAMBOO_SAPLING;
    public static final Material BAMBOO;
    public static final Material WOOL;
    public static final Material EXPLOSIVE;
    public static final Material LEAVES;
@@ -45,26 +46,24 @@
    public static final Material CAKE;
    private final MaterialColor color;
    private final PushReaction pushReaction;
    private final boolean blocksMotion;
    private final boolean flammable;
-   private final boolean alwaysDestroyable;
    private final boolean liquid;
    private final boolean solidBlocking;
    private final boolean replaceable;
    private final boolean solid;
 
-   public Material(MaterialColor var1, boolean var2, boolean var3, boolean var4, boolean var5, boolean var6, boolean var7, boolean var8, PushReaction var9) {
+   public Material(MaterialColor var1, boolean var2, boolean var3, boolean var4, boolean var5, boolean var6, boolean var7, PushReaction var8) {
       this.color = var1;
       this.liquid = var2;
       this.solid = var3;
       this.blocksMotion = var4;
       this.solidBlocking = var5;
-      this.alwaysDestroyable = var6;
-      this.flammable = var7;
-      this.replaceable = var8;
-      this.pushReaction = var9;
+      this.flammable = var6;
+      this.replaceable = var7;
+      this.pushReaction = var8;
    }
 
    public boolean isLiquid() {
       return this.liquid;
    }
@@ -87,14 +86,10 @@
 
    public boolean isSolidBlocking() {
       return this.solidBlocking;
    }
 
-   public boolean isAlwaysDestroyable() {
-      return this.alwaysDestroyable;
-   }
-
    public PushReaction getPushReaction() {
       return this.pushReaction;
    }
 
    public MaterialColor getColor() {
@@ -111,36 +106,37 @@
       REPLACEABLE_PLANT = (new Material.Builder(MaterialColor.PLANT)).noCollider().notSolidBlocking().nonSolid().destroyOnPush().replaceable().flammable().build();
       REPLACEABLE_WATER_PLANT = (new Material.Builder(MaterialColor.WATER)).noCollider().notSolidBlocking().nonSolid().destroyOnPush().replaceable().build();
       WATER = (new Material.Builder(MaterialColor.WATER)).noCollider().notSolidBlocking().nonSolid().destroyOnPush().replaceable().liquid().build();
       BUBBLE_COLUMN = (new Material.Builder(MaterialColor.WATER)).noCollider().notSolidBlocking().nonSolid().destroyOnPush().replaceable().liquid().build();
       LAVA = (new Material.Builder(MaterialColor.FIRE)).noCollider().notSolidBlocking().nonSolid().destroyOnPush().replaceable().liquid().build();
-      TOP_SNOW = (new Material.Builder(MaterialColor.SNOW)).noCollider().notSolidBlocking().nonSolid().destroyOnPush().replaceable().notAlwaysDestroyable().build();
+      TOP_SNOW = (new Material.Builder(MaterialColor.SNOW)).noCollider().notSolidBlocking().nonSolid().destroyOnPush().replaceable().build();
       FIRE = (new Material.Builder(MaterialColor.NONE)).noCollider().notSolidBlocking().nonSolid().destroyOnPush().replaceable().build();
       DECORATION = (new Material.Builder(MaterialColor.NONE)).noCollider().notSolidBlocking().nonSolid().destroyOnPush().build();
-      WEB = (new Material.Builder(MaterialColor.WOOL)).noCollider().notSolidBlocking().destroyOnPush().notAlwaysDestroyable().build();
+      WEB = (new Material.Builder(MaterialColor.WOOL)).noCollider().notSolidBlocking().destroyOnPush().build();
       BUILDABLE_GLASS = (new Material.Builder(MaterialColor.NONE)).build();
       CLAY = (new Material.Builder(MaterialColor.CLAY)).build();
       DIRT = (new Material.Builder(MaterialColor.DIRT)).build();
       GRASS = (new Material.Builder(MaterialColor.GRASS)).build();
       ICE_SOLID = (new Material.Builder(MaterialColor.ICE)).build();
       SAND = (new Material.Builder(MaterialColor.SAND)).build();
       SPONGE = (new Material.Builder(MaterialColor.COLOR_YELLOW)).build();
       SHULKER_SHELL = (new Material.Builder(MaterialColor.COLOR_PURPLE)).build();
       WOOD = (new Material.Builder(MaterialColor.WOOD)).flammable().build();
+      NETHER_WOOD = (new Material.Builder(MaterialColor.WOOD)).build();
       BAMBOO_SAPLING = (new Material.Builder(MaterialColor.WOOD)).flammable().destroyOnPush().noCollider().build();
       BAMBOO = (new Material.Builder(MaterialColor.WOOD)).flammable().destroyOnPush().build();
       WOOL = (new Material.Builder(MaterialColor.WOOL)).flammable().build();
       EXPLOSIVE = (new Material.Builder(MaterialColor.FIRE)).flammable().notSolidBlocking().build();
       LEAVES = (new Material.Builder(MaterialColor.PLANT)).flammable().notSolidBlocking().destroyOnPush().build();
       GLASS = (new Material.Builder(MaterialColor.NONE)).notSolidBlocking().build();
       ICE = (new Material.Builder(MaterialColor.ICE)).notSolidBlocking().build();
       CACTUS = (new Material.Builder(MaterialColor.PLANT)).notSolidBlocking().destroyOnPush().build();
-      STONE = (new Material.Builder(MaterialColor.STONE)).notAlwaysDestroyable().build();
-      METAL = (new Material.Builder(MaterialColor.METAL)).notAlwaysDestroyable().build();
-      SNOW = (new Material.Builder(MaterialColor.SNOW)).notAlwaysDestroyable().build();
-      HEAVY_METAL = (new Material.Builder(MaterialColor.METAL)).notAlwaysDestroyable().notPushable().build();
-      BARRIER = (new Material.Builder(MaterialColor.NONE)).notAlwaysDestroyable().notPushable().build();
+      STONE = (new Material.Builder(MaterialColor.STONE)).build();
+      METAL = (new Material.Builder(MaterialColor.METAL)).build();
+      SNOW = (new Material.Builder(MaterialColor.SNOW)).build();
+      HEAVY_METAL = (new Material.Builder(MaterialColor.METAL)).notPushable().build();
+      BARRIER = (new Material.Builder(MaterialColor.NONE)).notPushable().build();
       PISTON = (new Material.Builder(MaterialColor.STONE)).notPushable().build();
       CORAL = (new Material.Builder(MaterialColor.PLANT)).destroyOnPush().build();
       VEGETABLE = (new Material.Builder(MaterialColor.PLANT)).destroyOnPush().build();
       EGG = (new Material.Builder(MaterialColor.PLANT)).destroyOnPush().build();
       CAKE = (new Material.Builder(MaterialColor.NONE)).destroyOnPush().build();
@@ -148,21 +144,19 @@
 
    public static class Builder {
       private PushReaction pushReaction;
       private boolean blocksMotion;
       private boolean flammable;
-      private boolean isAlwaysDestroyable;
       private boolean liquid;
       private boolean replaceable;
       private boolean solid;
       private final MaterialColor color;
       private boolean solidBlocking;
 
       public Builder(MaterialColor var1) {
          this.pushReaction = PushReaction.NORMAL;
          this.blocksMotion = true;
-         this.isAlwaysDestroyable = true;
          this.solid = true;
          this.solidBlocking = true;
          this.color = var1;
       }
 
@@ -184,15 +178,10 @@
       private Material.Builder notSolidBlocking() {
          this.solidBlocking = false;
          return this;
       }
 
-      protected Material.Builder notAlwaysDestroyable() {
-         this.isAlwaysDestroyable = false;
-         return this;
-      }
-
       protected Material.Builder flammable() {
          this.flammable = true;
          return this;
       }
 
@@ -210,9 +199,9 @@
          this.pushReaction = PushReaction.BLOCK;
          return this;
       }
 
       public Material build() {
-         return new Material(this.color, this.liquid, this.solid, this.blocksMotion, this.solidBlocking, this.isAlwaysDestroyable, this.flammable, this.replaceable, this.pushReaction);
+         return new Material(this.color, this.liquid, this.solid, this.blocksMotion, this.solidBlocking, this.flammable, this.replaceable, this.pushReaction);
       }
    }
 }
