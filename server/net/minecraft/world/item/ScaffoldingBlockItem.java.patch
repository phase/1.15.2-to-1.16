--- net/minecraft/world/item/ScaffoldingBlockItem.java
+++ net/minecraft/world/item/ScaffoldingBlockItem.java
@@ -1,9 +1,10 @@
 package net.minecraft.world.item;
 
 import javax.annotation.Nullable;
 import net.minecraft.ChatFormatting;
+import net.minecraft.Util;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.network.chat.ChatType;
 import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.network.protocol.game.ClientboundChatPacket;
@@ -23,36 +24,36 @@
    public BlockPlaceContext updatePlacementContext(BlockPlaceContext var1) {
       BlockPos var2 = var1.getClickedPos();
       Level var3 = var1.getLevel();
       BlockState var4 = var3.getBlockState(var2);
       Block var5 = this.getBlock();
-      if (var4.getBlock() != var5) {
+      if (!var4.is(var5)) {
          return ScaffoldingBlock.getDistance(var3, var2) == 7 ? null : var1;
       } else {
          Direction var6;
          if (var1.isSecondaryUseActive()) {
             var6 = var1.isInside() ? var1.getClickedFace().getOpposite() : var1.getClickedFace();
          } else {
             var6 = var1.getClickedFace() == Direction.UP ? var1.getHorizontalDirection() : Direction.UP;
          }
 
          int var7 = 0;
-         BlockPos.MutableBlockPos var8 = (new BlockPos.MutableBlockPos(var2)).move(var6);
+         BlockPos.MutableBlockPos var8 = var2.mutable().move(var6);
 
          while(var7 < 7) {
             if (!var3.isClientSide && !Level.isInWorldBounds(var8)) {
                Player var9 = var1.getPlayer();
                int var10 = var3.getMaxBuildHeight();
                if (var9 instanceof ServerPlayer && var8.getY() >= var10) {
-                  ClientboundChatPacket var11 = new ClientboundChatPacket((new TranslatableComponent("build.tooHigh", new Object[]{var10})).withStyle(ChatFormatting.RED), ChatType.GAME_INFO);
+                  ClientboundChatPacket var11 = new ClientboundChatPacket((new TranslatableComponent("build.tooHigh", new Object[]{var10})).withStyle(ChatFormatting.RED), ChatType.GAME_INFO, Util.NIL_UUID);
                   ((ServerPlayer)var9).connection.send(var11);
                }
                break;
             }
 
             var4 = var3.getBlockState(var8);
-            if (var4.getBlock() != this.getBlock()) {
+            if (!var4.is(this.getBlock())) {
                if (var4.canBeReplaced(var1)) {
                   return BlockPlaceContext.at(var1, var8, var6);
                }
                break;
             }
