--- net/minecraft/commands/arguments/ResourceLocationArgument.java
+++ net/minecraft/commands/arguments/ResourceLocationArgument.java
@@ -7,12 +7,14 @@
 import com.mojang.brigadier.exceptions.DynamicCommandExceptionType;
 import java.util.Arrays;
 import java.util.Collection;
 import net.minecraft.advancements.Advancement;
 import net.minecraft.commands.CommandSourceStack;
+import net.minecraft.core.Registry;
 import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.resources.ResourceLocation;
+import net.minecraft.world.entity.ai.attributes.Attribute;
 import net.minecraft.world.item.crafting.Recipe;
 import net.minecraft.world.item.crafting.RecipeManager;
 import net.minecraft.world.level.storage.loot.PredicateManager;
 import net.minecraft.world.level.storage.loot.predicates.LootItemCondition;
 
@@ -25,10 +27,13 @@
       return new TranslatableComponent("recipe.notFound", new Object[]{var0});
    });
    private static final DynamicCommandExceptionType ERROR_UNKNOWN_PREDICATE = new DynamicCommandExceptionType((var0) -> {
       return new TranslatableComponent("predicate.unknown", new Object[]{var0});
    });
+   private static final DynamicCommandExceptionType ERROR_UNKNOWN_ATTRIBUTE = new DynamicCommandExceptionType((var0) -> {
+      return new TranslatableComponent("attribute.unknown", new Object[]{var0});
+   });
 
    public ResourceLocationArgument() {
    }
 
    public static ResourceLocationArgument id() {
@@ -62,10 +67,17 @@
       } else {
          return var4;
       }
    }
 
+   public static Attribute getAttribute(CommandContext<CommandSourceStack> var0, String var1) throws CommandSyntaxException {
+      ResourceLocation var2 = (ResourceLocation)var0.getArgument(var1, ResourceLocation.class);
+      return (Attribute)Registry.ATTRIBUTES.getOptional(var2).orElseThrow(() -> {
+         return ERROR_UNKNOWN_ATTRIBUTE.create(var2);
+      });
+   }
+
    public static ResourceLocation getId(CommandContext<CommandSourceStack> var0, String var1) {
       return (ResourceLocation)var0.getArgument(var1, ResourceLocation.class);
    }
 
    public ResourceLocation parse(StringReader var1) throws CommandSyntaxException {
