--- net/minecraft/server/ServerAdvancementManager.java
+++ net/minecraft/server/ServerAdvancementManager.java
@@ -11,43 +11,41 @@
 import java.util.Iterator;
 import java.util.Map;
 import javax.annotation.Nullable;
 import net.minecraft.advancements.Advancement;
 import net.minecraft.advancements.AdvancementList;
-import net.minecraft.advancements.AdvancementRewards;
 import net.minecraft.advancements.TreeNodePosition;
-import net.minecraft.network.chat.Component;
-import net.minecraft.network.chat.Style;
+import net.minecraft.advancements.critereon.DeserializationContext;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.packs.resources.ResourceManager;
 import net.minecraft.server.packs.resources.SimpleJsonResourceReloadListener;
 import net.minecraft.util.GsonHelper;
-import net.minecraft.util.LowerCaseEnumTypeAdapterFactory;
 import net.minecraft.util.profiling.ProfilerFiller;
+import net.minecraft.world.level.storage.loot.PredicateManager;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
 public class ServerAdvancementManager extends SimpleJsonResourceReloadListener {
    private static final Logger LOGGER = LogManager.getLogger();
-   private static final Gson GSON = (new GsonBuilder()).registerTypeHierarchyAdapter(Advancement.Builder.class, (var0, var1, var2) -> {
-      JsonObject var3 = GsonHelper.convertToJsonObject(var0, "advancement");
-      return Advancement.Builder.fromJson(var3, var2);
-   }).registerTypeAdapter(AdvancementRewards.class, new AdvancementRewards.Deserializer()).registerTypeHierarchyAdapter(Component.class, new Component.Serializer()).registerTypeHierarchyAdapter(Style.class, new Style.Serializer()).registerTypeAdapterFactory(new LowerCaseEnumTypeAdapterFactory()).create();
+   private static final Gson GSON = (new GsonBuilder()).create();
    private AdvancementList advancements = new AdvancementList();
+   private final PredicateManager predicateManager;
 
-   public ServerAdvancementManager() {
+   public ServerAdvancementManager(PredicateManager var1) {
       super(GSON, "advancements");
+      this.predicateManager = var1;
    }
 
-   protected void apply(Map<ResourceLocation, JsonObject> var1, ResourceManager var2, ProfilerFiller var3) {
+   protected void apply(Map<ResourceLocation, JsonElement> var1, ResourceManager var2, ProfilerFiller var3) {
       HashMap var4 = Maps.newHashMap();
-      var1.forEach((var1x, var2x) -> {
+      var1.forEach((var2x, var3x) -> {
          try {
-            Advancement.Builder var3 = (Advancement.Builder)GSON.fromJson((JsonElement)var2x, (Class)Advancement.Builder.class);
-            var4.put(var1x, var3);
-         } catch (IllegalArgumentException | JsonParseException var4x) {
-            LOGGER.error((String)"Parsing error loading custom advancement {}: {}", (Object)var1x, (Object)var4x.getMessage());
+            JsonObject var4x = GsonHelper.convertToJsonObject(var3x, "advancement");
+            Advancement.Builder var5 = Advancement.Builder.fromJson(var4x, new DeserializationContext(var2x, this.predicateManager));
+            var4.put(var2x, var5);
+         } catch (IllegalArgumentException | JsonParseException var6) {
+            LOGGER.error((String)"Parsing error loading custom advancement {}: {}", (Object)var2x, (Object)var6.getMessage());
          }
 
       });
       AdvancementList var5 = new AdvancementList();
       var5.add(var4);
