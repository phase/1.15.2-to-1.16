--- net/minecraft/server/packs/resources/SimpleReloadableResourceManager.java
+++ net/minecraft/server/packs/resources/SimpleReloadableResourceManager.java
@@ -28,19 +28,20 @@
    private static final Logger LOGGER = LogManager.getLogger();
    private final Map<String, FallbackResourceManager> namespacedPacks = Maps.newHashMap();
    private final List<PreparableReloadListener> listeners = Lists.newArrayList();
    private final List<PreparableReloadListener> recentlyRegistered = Lists.newArrayList();
    private final Set<String> namespaces = Sets.newLinkedHashSet();
+   private final List<Pack> packs = Lists.newArrayList();
    private final PackType type;
-   private final Thread mainThread;
 
-   public SimpleReloadableResourceManager(PackType var1, Thread var2) {
+   public SimpleReloadableResourceManager(PackType var1) {
       this.type = var1;
-      this.mainThread = var2;
    }
 
    public void add(Pack var1) {
+      this.packs.add(var1);
+
       FallbackResourceManager var4;
       for(Iterator var2 = var1.getNamespaces(this.type).iterator(); var2.hasNext(); var4.add(var1)) {
          String var3 = (String)var2.next();
          this.namespaces.add(var3);
          var4 = (FallbackResourceManager)this.namespacedPacks.get(var3);
@@ -85,17 +86,13 @@
    }
 
    private void clear() {
       this.namespacedPacks.clear();
       this.namespaces.clear();
+      this.packs.clear();
    }
 
-   public CompletableFuture<Unit> reload(Executor var1, Executor var2, List<Pack> var3, CompletableFuture<Unit> var4) {
-      ReloadInstance var5 = this.createFullReload(var1, var2, var4, var3);
-      return var5.done();
-   }
-
    public void registerReloadListener(PreparableReloadListener var1) {
       this.listeners.add(var1);
       this.recentlyRegistered.add(var1);
    }
 
