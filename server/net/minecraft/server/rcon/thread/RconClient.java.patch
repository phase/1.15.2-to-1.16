--- net/minecraft/server/rcon/thread/RconClient.java
+++ net/minecraft/server/rcon/thread/RconClient.java
@@ -15,23 +15,24 @@
    private static final Logger LOGGER = LogManager.getLogger();
    private boolean authed;
    private Socket client;
    private final byte[] buf = new byte[1460];
    private final String rconPassword;
+   private final ServerInterface serverInterface;
 
    RconClient(ServerInterface var1, String var2, Socket var3) {
-      super(var1, "RCON Client");
+      super("RCON Client " + var3.getInetAddress());
+      this.serverInterface = var1;
       this.client = var3;
 
       try {
          this.client.setSoTimeout(0);
       } catch (Exception var5) {
          this.running = false;
       }
 
       this.rconPassword = var2;
-      this.info("Rcon connection from: " + var3.getInetAddress());
    }
 
    public void run() {
       while(true) {
          try {
@@ -92,10 +93,12 @@
          } catch (Exception var19) {
             LOGGER.error((String)"Exception whilst parsing RCON input", (Throwable)var19);
             return;
          } finally {
             this.closeSocket();
+            LOGGER.info((String)"Thread {} shutting down", (Object)this.name);
+            this.running = false;
          }
 
          return;
       }
    }
@@ -128,20 +131,21 @@
       } while(0 != var3);
 
    }
 
    public void stop() {
-      super.stop();
+      this.running = false;
       this.closeSocket();
+      super.stop();
    }
 
    private void closeSocket() {
       if (null != this.client) {
          try {
             this.client.close();
          } catch (IOException var2) {
-            this.warn("IO: " + var2.getMessage());
+            LOGGER.warn((String)"Failed to close socket", (Throwable)var2);
          }
 
          this.client = null;
       }
    }
