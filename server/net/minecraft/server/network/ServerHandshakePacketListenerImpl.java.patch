--- net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
+++ net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
@@ -2,17 +2,19 @@
 
 import net.minecraft.SharedConstants;
 import net.minecraft.network.Connection;
 import net.minecraft.network.ConnectionProtocol;
 import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.TextComponent;
 import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.network.protocol.handshake.ClientIntentionPacket;
 import net.minecraft.network.protocol.handshake.ServerHandshakePacketListener;
 import net.minecraft.network.protocol.login.ClientboundLoginDisconnectPacket;
 import net.minecraft.server.MinecraftServer;
 
 public class ServerHandshakePacketListenerImpl implements ServerHandshakePacketListener {
+   private static final Component IGNORE_STATUS_REASON = new TextComponent("Ignoring status request");
    private final MinecraftServer server;
    private final Connection connection;
 
    public ServerHandshakePacketListenerImpl(MinecraftServer var1, Connection var2) {
       this.server = var1;
@@ -35,12 +37,16 @@
          } else {
             this.connection.setListener(new ServerLoginPacketListenerImpl(this.server, this.connection));
          }
          break;
       case STATUS:
-         this.connection.setProtocol(ConnectionProtocol.STATUS);
-         this.connection.setListener(new ServerStatusPacketListenerImpl(this.server, this.connection));
+         if (this.server.repliesToStatus()) {
+            this.connection.setProtocol(ConnectionProtocol.STATUS);
+            this.connection.setListener(new ServerStatusPacketListenerImpl(this.server, this.connection));
+         } else {
+            this.connection.disconnect(IGNORE_STATUS_REASON);
+         }
          break;
       default:
          throw new UnsupportedOperationException("Invalid intention " + var1.getIntention());
       }
 
