--- net/minecraft/nbt/NbtUtils.java
+++ net/minecraft/nbt/NbtUtils.java
@@ -4,19 +4,20 @@
 import com.google.common.collect.ImmutableMap;
 import com.google.common.collect.UnmodifiableIterator;
 import com.mojang.authlib.GameProfile;
 import com.mojang.authlib.properties.Property;
 import com.mojang.datafixers.DataFixer;
-import com.mojang.datafixers.Dynamic;
+import com.mojang.serialization.Dynamic;
 import java.util.Iterator;
 import java.util.Optional;
 import java.util.UUID;
 import java.util.Map.Entry;
 import javax.annotation.Nullable;
 import net.minecraft.SharedConstants;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Registry;
+import net.minecraft.core.SerializableUUID;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.util.StringUtil;
 import net.minecraft.util.datafix.DataFixTypes;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.Blocks;
@@ -30,61 +31,54 @@
    private static final Logger LOGGER = LogManager.getLogger();
 
    @Nullable
    public static GameProfile readGameProfile(CompoundTag var0) {
       String var1 = null;
-      String var2 = null;
+      UUID var2 = null;
       if (var0.contains("Name", 8)) {
          var1 = var0.getString("Name");
       }
 
-      if (var0.contains("Id", 8)) {
-         var2 = var0.getString("Id");
+      if (var0.hasUUID("Id")) {
+         var2 = var0.getUUID("Id");
       }
 
       try {
-         UUID var3;
-         try {
-            var3 = UUID.fromString(var2);
-         } catch (Throwable var12) {
-            var3 = null;
-         }
-
-         GameProfile var4 = new GameProfile(var3, var1);
+         GameProfile var3 = new GameProfile(var2, var1);
          if (var0.contains("Properties", 10)) {
-            CompoundTag var5 = var0.getCompound("Properties");
-            Iterator var6 = var5.getAllKeys().iterator();
+            CompoundTag var4 = var0.getCompound("Properties");
+            Iterator var5 = var4.getAllKeys().iterator();
 
-            while(var6.hasNext()) {
-               String var7 = (String)var6.next();
-               ListTag var8 = var5.getList(var7, 10);
+            while(var5.hasNext()) {
+               String var6 = (String)var5.next();
+               ListTag var7 = var4.getList(var6, 10);
 
-               for(int var9 = 0; var9 < var8.size(); ++var9) {
-                  CompoundTag var10 = var8.getCompound(var9);
-                  String var11 = var10.getString("Value");
-                  if (var10.contains("Signature", 8)) {
-                     var4.getProperties().put(var7, new Property(var7, var11, var10.getString("Signature")));
+               for(int var8 = 0; var8 < var7.size(); ++var8) {
+                  CompoundTag var9 = var7.getCompound(var8);
+                  String var10 = var9.getString("Value");
+                  if (var9.contains("Signature", 8)) {
+                     var3.getProperties().put(var6, new Property(var6, var10, var9.getString("Signature")));
                   } else {
-                     var4.getProperties().put(var7, new Property(var7, var11));
+                     var3.getProperties().put(var6, new Property(var6, var10));
                   }
                }
             }
          }
 
-         return var4;
-      } catch (Throwable var13) {
+         return var3;
+      } catch (Throwable var11) {
          return null;
       }
    }
 
    public static CompoundTag writeGameProfile(CompoundTag var0, GameProfile var1) {
       if (!StringUtil.isNullOrEmpty(var1.getName())) {
          var0.putString("Name", var1.getName());
       }
 
       if (var1.getId() != null) {
-         var0.putString("Id", var1.getId().toString());
+         var0.putUUID("Id", var1.getId());
       }
 
       if (!var1.getProperties().isEmpty()) {
          CompoundTag var2 = new CompoundTag();
          Iterator var3 = var1.getProperties().keySet().iterator();
@@ -166,19 +160,25 @@
       } else {
          return var0.equals(var1);
       }
    }
 
-   public static CompoundTag createUUIDTag(UUID var0) {
-      CompoundTag var1 = new CompoundTag();
-      var1.putLong("M", var0.getMostSignificantBits());
-      var1.putLong("L", var0.getLeastSignificantBits());
-      return var1;
+   public static IntArrayTag createUUID(UUID var0) {
+      return new IntArrayTag(SerializableUUID.uuidToIntArray(var0));
    }
 
-   public static UUID loadUUIDTag(CompoundTag var0) {
-      return new UUID(var0.getLong("M"), var0.getLong("L"));
+   public static UUID loadUUID(Tag var0) {
+      if (var0.getType() != IntArrayTag.TYPE) {
+         throw new IllegalArgumentException("Expected UUID-Tag to be of type " + IntArrayTag.TYPE.getName() + ", but found " + var0.getType().getName() + ".");
+      } else {
+         int[] var1 = ((IntArrayTag)var0).getAsIntArray();
+         if (var1.length != 4) {
+            throw new IllegalArgumentException("Expected UUID-Array to be of length 4, but found " + var1.length + ".");
+         } else {
+            return SerializableUUID.uuidFromIntArray(var1);
+         }
+      }
    }
 
    public static BlockPos readBlockPos(CompoundTag var0) {
       return new BlockPos(var0.getInt("X"), var0.getInt("Y"), var0.getInt("Z"));
    }
@@ -213,11 +213,11 @@
 
          return var2;
       }
    }
 
-   private static <S extends StateHolder<S>, T extends Comparable<T>> S setValueHelper(S var0, net.minecraft.world.level.block.state.properties.Property<T> var1, String var2, CompoundTag var3, CompoundTag var4) {
+   private static <S extends StateHolder<?, S>, T extends Comparable<T>> S setValueHelper(S var0, net.minecraft.world.level.block.state.properties.Property<T> var1, String var2, CompoundTag var3, CompoundTag var4) {
       Optional var5 = var1.getValue(var3.getString(var2));
       if (var5.isPresent()) {
          return (StateHolder)var0.setValue(var1, (Comparable)var5.get());
       } else {
          LOGGER.warn((String)"Unable to read property: {} with value: {} for blockstate: {}", (Object)var2, var3.getString(var2), var4.toString());
