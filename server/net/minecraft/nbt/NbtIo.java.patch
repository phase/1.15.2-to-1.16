--- net/minecraft/nbt/NbtIo.java
+++ net/minecraft/nbt/NbtIo.java
@@ -4,20 +4,51 @@
 import java.io.BufferedOutputStream;
 import java.io.DataInput;
 import java.io.DataInputStream;
 import java.io.DataOutput;
 import java.io.DataOutputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
 import java.io.OutputStream;
 import java.util.zip.GZIPInputStream;
 import java.util.zip.GZIPOutputStream;
 import net.minecraft.CrashReport;
 import net.minecraft.CrashReportCategory;
 import net.minecraft.ReportedException;
 
 public class NbtIo {
+   public static CompoundTag readCompressed(File var0) throws IOException {
+      FileInputStream var1 = new FileInputStream(var0);
+      Throwable var2 = null;
+
+      CompoundTag var3;
+      try {
+         var3 = readCompressed((InputStream)var1);
+      } catch (Throwable var12) {
+         var2 = var12;
+         throw var12;
+      } finally {
+         if (var1 != null) {
+            if (var2 != null) {
+               try {
+                  var1.close();
+               } catch (Throwable var11) {
+                  var2.addSuppressed(var11);
+               }
+            } else {
+               var1.close();
+            }
+         }
+
+      }
+
+      return var3;
+   }
+
    public static CompoundTag readCompressed(InputStream var0) throws IOException {
       DataInputStream var1 = new DataInputStream(new BufferedInputStream(new GZIPInputStream(var0)));
       Throwable var2 = null;
 
       CompoundTag var3;
@@ -42,10 +73,36 @@
       }
 
       return var3;
    }
 
+   public static void writeCompressed(CompoundTag var0, File var1) throws IOException {
+      FileOutputStream var2 = new FileOutputStream(var1);
+      Throwable var3 = null;
+
+      try {
+         writeCompressed(var0, (OutputStream)var2);
+      } catch (Throwable var12) {
+         var3 = var12;
+         throw var12;
+      } finally {
+         if (var2 != null) {
+            if (var3 != null) {
+               try {
+                  var2.close();
+               } catch (Throwable var11) {
+                  var3.addSuppressed(var11);
+               }
+            } else {
+               var2.close();
+            }
+         }
+
+      }
+
+   }
+
    public static void writeCompressed(CompoundTag var0, OutputStream var1) throws IOException {
       DataOutputStream var2 = new DataOutputStream(new BufferedOutputStream(new GZIPOutputStream(var1)));
       Throwable var3 = null;
 
       try {
@@ -68,11 +125,11 @@
 
       }
 
    }
 
-   public static CompoundTag read(DataInputStream var0) throws IOException {
+   public static CompoundTag read(DataInput var0) throws IOException {
       return read(var0, NbtAccounter.UNLIMITED);
    }
 
    public static CompoundTag read(DataInput var0, NbtAccounter var1) throws IOException {
       Tag var2 = readUnnamedTag(var0, 0, var1);
