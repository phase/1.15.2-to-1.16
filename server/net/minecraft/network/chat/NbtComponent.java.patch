--- net/minecraft/network/chat/NbtComponent.java
+++ net/minecraft/network/chat/NbtComponent.java
@@ -50,41 +50,37 @@
       this.interpreting = var3;
    }
 
    protected abstract Stream<CompoundTag> getData(CommandSourceStack var1) throws CommandSyntaxException;
 
-   public String getContents() {
-      return "";
-   }
-
    public String getNbtPath() {
       return this.nbtPathPattern;
    }
 
    public boolean isInterpreting() {
       return this.interpreting;
    }
 
-   public Component resolve(@Nullable CommandSourceStack var1, @Nullable Entity var2, int var3) throws CommandSyntaxException {
+   public MutableComponent resolve(@Nullable CommandSourceStack var1, @Nullable Entity var2, int var3) throws CommandSyntaxException {
       if (var1 != null && this.compiledNbtPath != null) {
          Stream var4 = this.getData(var1).flatMap((var1x) -> {
             try {
                return this.compiledNbtPath.get(var1x).stream();
             } catch (CommandSyntaxException var3) {
                return Stream.empty();
             }
          }).map(Tag::getAsString);
-         return (Component)(this.interpreting ? (Component)var4.flatMap((var3x) -> {
+         return (MutableComponent)(this.interpreting ? (MutableComponent)var4.flatMap((var3x) -> {
             try {
-               Component var4 = Component.Serializer.fromJson(var3x);
+               MutableComponent var4 = Component.Serializer.fromJson(var3x);
                return Stream.of(ComponentUtils.updateForEntity(var1, var4, var2, var3));
             } catch (Exception var5) {
                LOGGER.warn((String)("Failed to parse component: " + var3x), (Throwable)var5);
                return Stream.of();
             }
          }).reduce((var0, var1x) -> {
-            return var0.append(", ").append(var1x);
+            return var0.append(", ").append((Component)var1x);
          }).orElse(new TextComponent("")) : new TextComponent(Joiner.on(", ").join(var4.iterator())));
       } else {
          return new TextComponent("");
       }
    }
@@ -104,11 +100,11 @@
 
       public ResourceLocation getId() {
          return this.id;
       }
 
-      public Component copy() {
+      public NbtComponent.StorageNbtComponent toMutable() {
          return new NbtComponent.StorageNbtComponent(this.nbtPathPattern, this.compiledNbtPath, this.interpreting, this.id);
       }
 
       protected Stream<CompoundTag> getData(CommandSourceStack var1) {
          CompoundTag var2 = var1.getServer().getCommandStorage().get(this.id);
@@ -160,11 +156,11 @@
       @Nullable
       public String getPos() {
          return this.posPattern;
       }
 
-      public Component copy() {
+      public NbtComponent.BlockNbtComponent toMutable() {
          return new NbtComponent.BlockNbtComponent(this.nbtPathPattern, this.compiledNbtPath, this.interpreting, this.posPattern, this.compiledPos);
       }
 
       protected Stream<CompoundTag> getData(CommandSourceStack var1) {
          if (this.compiledPos != null) {
@@ -226,11 +222,11 @@
 
       public String getSelector() {
          return this.selectorPattern;
       }
 
-      public Component copy() {
+      public NbtComponent.EntityNbtComponent toMutable() {
          return new NbtComponent.EntityNbtComponent(this.nbtPathPattern, this.compiledNbtPath, this.interpreting, this.selectorPattern, this.compiledSelector);
       }
 
       protected Stream<CompoundTag> getData(CommandSourceStack var1) throws CommandSyntaxException {
          if (this.compiledSelector != null) {
