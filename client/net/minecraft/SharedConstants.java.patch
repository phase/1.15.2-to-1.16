--- net/minecraft/SharedConstants.java
+++ net/minecraft/SharedConstants.java
@@ -1,17 +1,18 @@
 package net.minecraft;
 
 import com.mojang.bridge.game.GameVersion;
 import com.mojang.brigadier.exceptions.CommandSyntaxException;
-import com.mojang.datafixers.types.constant.NamespacedStringType;
 import io.netty.util.ResourceLeakDetector;
 import io.netty.util.ResourceLeakDetector.Level;
+import java.time.Duration;
 import net.minecraft.commands.BrigadierExceptions;
-import net.minecraft.util.datafix.schemas.NamespacedSchema;
 
 public class SharedConstants {
    public static final Level NETTY_LEAK_DETECTION;
+   public static final long MAXIMUM_TICK_TIME_NANOS;
+   public static boolean CHECK_DATA_FIXER_SCHEMA;
    public static boolean IS_RUNNING_IN_IDE;
    public static final char[] ILLEGAL_FILE_CHARACTERS;
    private static GameVersion CURRENT_VERSION;
 
    public static boolean isAllowedChatCharacter(char var0) {
@@ -31,37 +32,23 @@
       }
 
       return var1.toString();
    }
 
-   public static String filterUnicodeSupplementary(String var0) {
-      StringBuilder var1 = new StringBuilder();
-
-      for(int var2 = 0; var2 < var0.length(); var2 = var0.offsetByCodePoints(var2, 1)) {
-         int var3 = var0.codePointAt(var2);
-         if (!Character.isSupplementaryCodePoint(var3)) {
-            var1.appendCodePoint(var3);
-         } else {
-            var1.append('\ufffd');
-         }
-      }
-
-      return var1.toString();
-   }
-
    public static GameVersion getCurrentVersion() {
       if (CURRENT_VERSION == null) {
          CURRENT_VERSION = DetectedVersion.tryDetectVersion();
       }
 
       return CURRENT_VERSION;
    }
 
    static {
       NETTY_LEAK_DETECTION = Level.DISABLED;
+      MAXIMUM_TICK_TIME_NANOS = Duration.ofMillis(300L).toNanos();
+      CHECK_DATA_FIXER_SCHEMA = true;
       ILLEGAL_FILE_CHARACTERS = new char[]{'/', '\n', '\r', '\t', '\u0000', '\f', '`', '?', '*', '\\', '<', '>', '|', '"', ':'};
       ResourceLeakDetector.setLevel(NETTY_LEAK_DETECTION);
       CommandSyntaxException.ENABLE_COMMAND_STACK_TRACES = false;
       CommandSyntaxException.BUILT_IN_EXCEPTIONS = new BrigadierExceptions();
-      NamespacedStringType.ENSURE_NAMESPACE = NamespacedSchema::ensureNamespaced;
    }
 }
