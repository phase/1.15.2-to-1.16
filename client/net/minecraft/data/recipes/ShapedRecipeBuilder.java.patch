--- net/minecraft/data/recipes/ShapedRecipeBuilder.java
+++ net/minecraft/data/recipes/ShapedRecipeBuilder.java
@@ -75,11 +75,11 @@
          this.rows.add(var1);
          return this;
       }
    }
 
-   public ShapedRecipeBuilder unlocks(String var1, CriterionTriggerInstance var2) {
+   public ShapedRecipeBuilder unlockedBy(String var1, CriterionTriggerInstance var2) {
       this.advancement.addCriterion(var1, var2);
       return this;
    }
 
    public ShapedRecipeBuilder group(String var1) {
@@ -100,11 +100,11 @@
       }
    }
 
    public void save(Consumer<FinishedRecipe> var1, ResourceLocation var2) {
       this.ensureValid(var2);
-      this.advancement.parent(new ResourceLocation("recipes/root")).addCriterion("has_the_recipe", (CriterionTriggerInstance)(new RecipeUnlockedTrigger.TriggerInstance(var2))).rewards(AdvancementRewards.Builder.recipe(var2)).requirements(RequirementsStrategy.OR);
+      this.advancement.parent(new ResourceLocation("recipes/root")).addCriterion("has_the_recipe", (CriterionTriggerInstance)RecipeUnlockedTrigger.unlocked(var2)).rewards(AdvancementRewards.Builder.recipe(var2)).requirements(RequirementsStrategy.OR);
       var1.accept(new ShapedRecipeBuilder.Result(var2, this.result, this.count, this.group == null ? "" : this.group, this.rows, this.key, this.advancement, new ResourceLocation(var2.getNamespace(), "recipes/" + this.result.getItemCategory().getRecipeFolderName() + "/" + var2.getPath())));
    }
 
    private void ensureValid(ResourceLocation var1) {
       if (this.rows.isEmpty()) {
