--- net/minecraft/server/network/ServerConnectionListener.java
+++ net/minecraft/server/network/ServerConnectionListener.java
@@ -23,11 +23,10 @@
 import java.util.Collections;
 import java.util.Iterator;
 import java.util.List;
 import javax.annotation.Nullable;
 import net.minecraft.CrashReport;
-import net.minecraft.CrashReportCategory;
 import net.minecraft.ReportedException;
 import net.minecraft.network.Connection;
 import net.minecraft.network.PacketDecoder;
 import net.minecraft.network.PacketEncoder;
 import net.minecraft.network.Varint21FrameDecoder;
@@ -138,19 +137,16 @@
                } while(var3.isConnecting());
 
                if (var3.isConnected()) {
                   try {
                      var3.tick();
-                  } catch (Exception var8) {
+                  } catch (Exception var7) {
                      if (var3.isMemoryConnection()) {
-                        CrashReport var10 = CrashReport.forThrowable(var8, "Ticking memory connection");
-                        CrashReportCategory var6 = var10.addCategory("Ticking connection");
-                        var6.setDetail("Connection", var3::toString);
-                        throw new ReportedException(var10);
+                        throw new ReportedException(CrashReport.forThrowable(var7, "Ticking memory connection"));
                      }
 
-                     LOGGER.warn("Failed to handle packet for {}", var3.getRemoteAddress(), var8);
+                     LOGGER.warn("Failed to handle packet for {}", var3.getRemoteAddress(), var7);
                      TextComponent var5 = new TextComponent("Internal server error");
                      var3.send(new ClientboundDisconnectPacket(var5), (var2x) -> {
                         var3.disconnect(var5);
                      });
                      var3.setReadOnly();
