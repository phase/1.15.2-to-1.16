--- net/minecraft/server/commands/CloneCommands.java
+++ net/minecraft/server/commands/CloneCommands.java
@@ -27,15 +27,15 @@
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.pattern.BlockInWorld;
 import net.minecraft.world.level.levelgen.structure.BoundingBox;
 
 public class CloneCommands {
-   private static final SimpleCommandExceptionType ERROR_OVERLAP = new SimpleCommandExceptionType(new TranslatableComponent("commands.clone.overlap", new Object[0]));
+   private static final SimpleCommandExceptionType ERROR_OVERLAP = new SimpleCommandExceptionType(new TranslatableComponent("commands.clone.overlap"));
    private static final Dynamic2CommandExceptionType ERROR_AREA_TOO_LARGE = new Dynamic2CommandExceptionType((var0, var1) -> {
       return new TranslatableComponent("commands.clone.toobig", new Object[]{var0, var1});
    });
-   private static final SimpleCommandExceptionType ERROR_FAILED = new SimpleCommandExceptionType(new TranslatableComponent("commands.clone.failed", new Object[0]));
+   private static final SimpleCommandExceptionType ERROR_FAILED = new SimpleCommandExceptionType(new TranslatableComponent("commands.clone.failed"));
    public static final Predicate<BlockInWorld> FILTER_AIR = (var0) -> {
       return !var0.getState().isAir();
    };
 
    public static void register(CommandDispatcher<CommandSourceStack> var0) {
@@ -174,11 +174,11 @@
                   BlockEntity var35 = var10.getBlockEntity(var34.pos);
                   if (var34.tag != null && var35 != null) {
                      var34.tag.putInt("x", var34.pos.getX());
                      var34.tag.putInt("y", var34.pos.getY());
                      var34.tag.putInt("z", var34.pos.getZ());
-                     var35.load(var34.tag);
+                     var35.load(var34.state, var34.tag);
                      var35.setChanged();
                   }
                }
 
                var32 = var28.iterator();
