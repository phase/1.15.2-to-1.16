--- net/minecraft/DetectedVersion.java
+++ net/minecraft/DetectedVersion.java
@@ -14,31 +14,32 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
 public class DetectedVersion implements GameVersion {
    private static final Logger LOGGER = LogManager.getLogger();
+   public static final GameVersion BUILT_IN = new DetectedVersion();
    private final String id;
    private final String name;
    private final boolean stable;
    private final int worldVersion;
    private final int protocolVersion;
    private final int packVersion;
    private final Date buildTime;
    private final String releaseTarget;
 
-   public DetectedVersion() {
+   private DetectedVersion() {
       this.id = UUID.randomUUID().toString().replaceAll("-", "");
-      this.name = "1.15.2";
-      this.stable = true;
-      this.worldVersion = 2230;
-      this.protocolVersion = 578;
+      this.name = "1.16-pre5";
+      this.stable = false;
+      this.worldVersion = 2561;
+      this.protocolVersion = 729;
       this.packVersion = 5;
       this.buildTime = new Date();
-      this.releaseTarget = "1.15.2";
+      this.releaseTarget = "1.16";
    }
 
-   protected DetectedVersion(JsonObject var1) {
+   private DetectedVersion(JsonObject var1) {
       this.id = GsonHelper.getAsString(var1, "id");
       this.name = GsonHelper.getAsString(var1, "name");
       this.releaseTarget = GsonHelper.getAsString(var1, "release_target");
       this.stable = GsonHelper.getAsBoolean(var1, "stable");
       this.worldVersion = GsonHelper.getAsInt(var1, "world_version");
@@ -50,11 +51,11 @@
    public static GameVersion tryDetectVersion() {
       try {
          InputStream var0 = DetectedVersion.class.getResourceAsStream("/version.json");
          Throwable var1 = null;
 
-         DetectedVersion var2;
+         GameVersion var2;
          try {
             if (var0 != null) {
                InputStreamReader var35 = new InputStreamReader(var0);
                Throwable var3 = null;
 
@@ -83,11 +84,11 @@
 
                }
             }
 
             LOGGER.warn("Missing version information!");
-            var2 = new DetectedVersion();
+            var2 = BUILT_IN;
          } catch (Throwable var32) {
             var1 = var32;
             throw var32;
          } finally {
             if (var0 != null) {
