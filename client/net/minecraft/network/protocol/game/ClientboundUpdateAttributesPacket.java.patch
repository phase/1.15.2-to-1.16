--- net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket.java
+++ net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket.java
@@ -5,12 +5,15 @@
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Iterator;
 import java.util.List;
 import java.util.UUID;
+import net.minecraft.core.Registry;
 import net.minecraft.network.FriendlyByteBuf;
 import net.minecraft.network.protocol.Packet;
+import net.minecraft.resources.ResourceLocation;
+import net.minecraft.world.entity.ai.attributes.Attribute;
 import net.minecraft.world.entity.ai.attributes.AttributeInstance;
 import net.minecraft.world.entity.ai.attributes.AttributeModifier;
 
 public class ClientboundUpdateAttributesPacket implements Packet<ClientGamePacketListener> {
    private int entityId;
@@ -23,31 +26,32 @@
       this.entityId = var1;
       Iterator var3 = var2.iterator();
 
       while(var3.hasNext()) {
          AttributeInstance var4 = (AttributeInstance)var3.next();
-         this.attributes.add(new ClientboundUpdateAttributesPacket.AttributeSnapshot(var4.getAttribute().getName(), var4.getBaseValue(), var4.getModifiers()));
+         this.attributes.add(new ClientboundUpdateAttributesPacket.AttributeSnapshot(var4.getAttribute(), var4.getBaseValue(), var4.getModifiers()));
       }
 
    }
 
    public void read(FriendlyByteBuf var1) throws IOException {
       this.entityId = var1.readVarInt();
       int var2 = var1.readInt();
 
       for(int var3 = 0; var3 < var2; ++var3) {
-         String var4 = var1.readUtf(64);
-         double var5 = var1.readDouble();
-         ArrayList var7 = Lists.newArrayList();
-         int var8 = var1.readVarInt();
+         ResourceLocation var4 = var1.readResourceLocation();
+         Attribute var5 = (Attribute)Registry.ATTRIBUTES.get(var4);
+         double var6 = var1.readDouble();
+         ArrayList var8 = Lists.newArrayList();
+         int var9 = var1.readVarInt();
 
-         for(int var9 = 0; var9 < var8; ++var9) {
-            UUID var10 = var1.readUUID();
-            var7.add(new AttributeModifier(var10, "Unknown synced attribute modifier", var1.readDouble(), AttributeModifier.Operation.fromValue(var1.readByte())));
+         for(int var10 = 0; var10 < var9; ++var10) {
+            UUID var11 = var1.readUUID();
+            var8.add(new AttributeModifier(var11, "Unknown synced attribute modifier", var1.readDouble(), AttributeModifier.Operation.fromValue(var1.readByte())));
          }
 
-         this.attributes.add(new ClientboundUpdateAttributesPacket.AttributeSnapshot(var4, var5, var7));
+         this.attributes.add(new ClientboundUpdateAttributesPacket.AttributeSnapshot(var5, var6, var8));
       }
 
    }
 
    public void write(FriendlyByteBuf var1) throws IOException {
@@ -55,11 +59,11 @@
       var1.writeInt(this.attributes.size());
       Iterator var2 = this.attributes.iterator();
 
       while(var2.hasNext()) {
          ClientboundUpdateAttributesPacket.AttributeSnapshot var3 = (ClientboundUpdateAttributesPacket.AttributeSnapshot)var2.next();
-         var1.writeUtf(var3.getName());
+         var1.writeResourceLocation(Registry.ATTRIBUTES.getKey(var3.getAttribute()));
          var1.writeDouble(var3.getBase());
          var1.writeVarInt(var3.getModifiers().size());
          Iterator var4 = var3.getModifiers().iterator();
 
          while(var4.hasNext()) {
@@ -83,22 +87,22 @@
    public List<ClientboundUpdateAttributesPacket.AttributeSnapshot> getValues() {
       return this.attributes;
    }
 
    public class AttributeSnapshot {
-      private final String name;
+      private final Attribute attribute;
       private final double base;
       private final Collection<AttributeModifier> modifiers;
 
-      public AttributeSnapshot(String var2, double var3, Collection<AttributeModifier> var5) {
-         this.name = var2;
+      public AttributeSnapshot(Attribute var2, double var3, Collection<AttributeModifier> var5) {
+         this.attribute = var2;
          this.base = var3;
          this.modifiers = var5;
       }
 
-      public String getName() {
-         return this.name;
+      public Attribute getAttribute() {
+         return this.attribute;
       }
 
       public double getBase() {
          return this.base;
       }
