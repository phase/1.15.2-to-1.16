--- net/minecraft/client/particle/DripParticle.java
+++ net/minecraft/client/particle/DripParticle.java
@@ -1,23 +1,23 @@
 package net.minecraft.client.particle;
 
+import net.minecraft.client.multiplayer.ClientLevel;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.particles.ParticleOptions;
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.core.particles.SimpleParticleType;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.sounds.SoundSource;
-import net.minecraft.tags.FluidTags;
-import net.minecraft.world.level.Level;
 import net.minecraft.world.level.material.Fluid;
 import net.minecraft.world.level.material.FluidState;
 import net.minecraft.world.level.material.Fluids;
 
 public class DripParticle extends TextureSheetParticle {
    private final Fluid type;
+   protected boolean isGlowing;
 
-   private DripParticle(Level var1, double var2, double var4, double var6, Fluid var8) {
+   private DripParticle(ClientLevel var1, double var2, double var4, double var6, Fluid var8) {
       super(var1, var2, var4, var6);
       this.setSize(0.01F, 0.01F);
       this.gravity = 0.06F;
       this.type = var8;
    }
@@ -25,11 +25,11 @@
    public ParticleRenderType getRenderType() {
       return ParticleRenderType.PARTICLE_SHEET_OPAQUE;
    }
 
    public int getLightColor(float var1) {
-      return this.type.is(FluidTags.LAVA) ? 240 : super.getLightColor(var1);
+      return this.isGlowing ? 240 : super.getLightColor(var1);
    }
 
    public void tick() {
       this.xo = this.x;
       this.yo = this.y;
@@ -61,18 +61,70 @@
    }
 
    protected void postMoveUpdate() {
    }
 
+   public static class ObsidianTearLandProvider implements ParticleProvider<SimpleParticleType> {
+      protected final SpriteSet sprite;
+
+      public ObsidianTearLandProvider(SpriteSet var1) {
+         this.sprite = var1;
+      }
+
+      public Particle createParticle(SimpleParticleType var1, ClientLevel var2, double var3, double var5, double var7, double var9, double var11, double var13) {
+         DripParticle.DripLandParticle var15 = new DripParticle.DripLandParticle(var2, var3, var5, var7, Fluids.EMPTY);
+         var15.isGlowing = true;
+         var15.lifetime = (int)(28.0D / (Math.random() * 0.8D + 0.2D));
+         var15.setColor(0.51171875F, 0.03125F, 0.890625F);
+         var15.pickSprite(this.sprite);
+         return var15;
+      }
+   }
+
+   public static class ObsidianTearFallProvider implements ParticleProvider<SimpleParticleType> {
+      protected final SpriteSet sprite;
+
+      public ObsidianTearFallProvider(SpriteSet var1) {
+         this.sprite = var1;
+      }
+
+      public Particle createParticle(SimpleParticleType var1, ClientLevel var2, double var3, double var5, double var7, double var9, double var11, double var13) {
+         DripParticle.FallAndLandParticle var15 = new DripParticle.FallAndLandParticle(var2, var3, var5, var7, Fluids.EMPTY, ParticleTypes.LANDING_OBSIDIAN_TEAR);
+         var15.isGlowing = true;
+         var15.gravity = 0.01F;
+         var15.setColor(0.51171875F, 0.03125F, 0.890625F);
+         var15.pickSprite(this.sprite);
+         return var15;
+      }
+   }
+
+   public static class ObsidianTearHangProvider implements ParticleProvider<SimpleParticleType> {
+      protected final SpriteSet sprite;
+
+      public ObsidianTearHangProvider(SpriteSet var1) {
+         this.sprite = var1;
+      }
+
+      public Particle createParticle(SimpleParticleType var1, ClientLevel var2, double var3, double var5, double var7, double var9, double var11, double var13) {
+         DripParticle.DripHangParticle var15 = new DripParticle.DripHangParticle(var2, var3, var5, var7, Fluids.EMPTY, ParticleTypes.FALLING_OBSIDIAN_TEAR);
+         var15.isGlowing = true;
+         var15.gravity *= 0.01F;
+         var15.lifetime = 100;
+         var15.setColor(0.51171875F, 0.03125F, 0.890625F);
+         var15.pickSprite(this.sprite);
+         return var15;
+      }
+   }
+
    public static class NectarFallProvider implements ParticleProvider<SimpleParticleType> {
       protected final SpriteSet sprite;
 
       public NectarFallProvider(SpriteSet var1) {
          this.sprite = var1;
       }
 
-      public Particle createParticle(SimpleParticleType var1, Level var2, double var3, double var5, double var7, double var9, double var11, double var13) {
+      public Particle createParticle(SimpleParticleType var1, ClientLevel var2, double var3, double var5, double var7, double var9, double var11, double var13) {
          DripParticle.FallingParticle var15 = new DripParticle.FallingParticle(var2, var3, var5, var7, Fluids.EMPTY);
          var15.lifetime = (int)(16.0D / (Math.random() * 0.8D + 0.2D));
          var15.gravity = 0.007F;
          var15.setColor(0.92F, 0.782F, 0.72F);
          var15.pickSprite(this.sprite);
@@ -85,11 +137,11 @@
 
       public HoneyLandProvider(SpriteSet var1) {
          this.sprite = var1;
       }
 
-      public Particle createParticle(SimpleParticleType var1, Level var2, double var3, double var5, double var7, double var9, double var11, double var13) {
+      public Particle createParticle(SimpleParticleType var1, ClientLevel var2, double var3, double var5, double var7, double var9, double var11, double var13) {
          DripParticle.DripLandParticle var15 = new DripParticle.DripLandParticle(var2, var3, var5, var7, Fluids.EMPTY);
          var15.lifetime = (int)(128.0D / (Math.random() * 0.8D + 0.2D));
          var15.setColor(0.522F, 0.408F, 0.082F);
          var15.pickSprite(this.sprite);
          return var15;
@@ -101,11 +153,11 @@
 
       public HoneyFallProvider(SpriteSet var1) {
          this.sprite = var1;
       }
 
-      public Particle createParticle(SimpleParticleType var1, Level var2, double var3, double var5, double var7, double var9, double var11, double var13) {
+      public Particle createParticle(SimpleParticleType var1, ClientLevel var2, double var3, double var5, double var7, double var9, double var11, double var13) {
          DripParticle.HoneyFallAndLandParticle var15 = new DripParticle.HoneyFallAndLandParticle(var2, var3, var5, var7, Fluids.EMPTY, ParticleTypes.LANDING_HONEY);
          var15.gravity = 0.01F;
          var15.setColor(0.582F, 0.448F, 0.082F);
          var15.pickSprite(this.sprite);
          return var15;
@@ -117,11 +169,11 @@
 
       public HoneyHangProvider(SpriteSet var1) {
          this.sprite = var1;
       }
 
-      public Particle createParticle(SimpleParticleType var1, Level var2, double var3, double var5, double var7, double var9, double var11, double var13) {
+      public Particle createParticle(SimpleParticleType var1, ClientLevel var2, double var3, double var5, double var7, double var9, double var11, double var13) {
          DripParticle.DripHangParticle var15 = new DripParticle.DripHangParticle(var2, var3, var5, var7, Fluids.EMPTY, ParticleTypes.FALLING_HONEY);
          var15.gravity *= 0.01F;
          var15.lifetime = 100;
          var15.setColor(0.622F, 0.508F, 0.082F);
          var15.pickSprite(this.sprite);
@@ -134,11 +186,11 @@
 
       public LavaLandProvider(SpriteSet var1) {
          this.sprite = var1;
       }
 
-      public Particle createParticle(SimpleParticleType var1, Level var2, double var3, double var5, double var7, double var9, double var11, double var13) {
+      public Particle createParticle(SimpleParticleType var1, ClientLevel var2, double var3, double var5, double var7, double var9, double var11, double var13) {
          DripParticle.DripLandParticle var15 = new DripParticle.DripLandParticle(var2, var3, var5, var7, Fluids.LAVA);
          var15.setColor(1.0F, 0.2857143F, 0.083333336F);
          var15.pickSprite(this.sprite);
          return var15;
       }
@@ -149,11 +201,11 @@
 
       public LavaFallProvider(SpriteSet var1) {
          this.sprite = var1;
       }
 
-      public Particle createParticle(SimpleParticleType var1, Level var2, double var3, double var5, double var7, double var9, double var11, double var13) {
+      public Particle createParticle(SimpleParticleType var1, ClientLevel var2, double var3, double var5, double var7, double var9, double var11, double var13) {
          DripParticle.FallAndLandParticle var15 = new DripParticle.FallAndLandParticle(var2, var3, var5, var7, Fluids.LAVA, ParticleTypes.LANDING_LAVA);
          var15.setColor(1.0F, 0.2857143F, 0.083333336F);
          var15.pickSprite(this.sprite);
          return var15;
       }
@@ -164,11 +216,11 @@
 
       public LavaHangProvider(SpriteSet var1) {
          this.sprite = var1;
       }
 
-      public Particle createParticle(SimpleParticleType var1, Level var2, double var3, double var5, double var7, double var9, double var11, double var13) {
+      public Particle createParticle(SimpleParticleType var1, ClientLevel var2, double var3, double var5, double var7, double var9, double var11, double var13) {
          DripParticle.CoolingDripHangParticle var15 = new DripParticle.CoolingDripHangParticle(var2, var3, var5, var7, Fluids.LAVA, ParticleTypes.FALLING_LAVA);
          var15.pickSprite(this.sprite);
          return var15;
       }
    }
@@ -178,11 +230,11 @@
 
       public WaterFallProvider(SpriteSet var1) {
          this.sprite = var1;
       }
 
-      public Particle createParticle(SimpleParticleType var1, Level var2, double var3, double var5, double var7, double var9, double var11, double var13) {
+      public Particle createParticle(SimpleParticleType var1, ClientLevel var2, double var3, double var5, double var7, double var9, double var11, double var13) {
          DripParticle.FallAndLandParticle var15 = new DripParticle.FallAndLandParticle(var2, var3, var5, var7, Fluids.WATER, ParticleTypes.SPLASH);
          var15.setColor(0.2F, 0.3F, 1.0F);
          var15.pickSprite(this.sprite);
          return var15;
       }
@@ -193,27 +245,27 @@
 
       public WaterHangProvider(SpriteSet var1) {
          this.sprite = var1;
       }
 
-      public Particle createParticle(SimpleParticleType var1, Level var2, double var3, double var5, double var7, double var9, double var11, double var13) {
+      public Particle createParticle(SimpleParticleType var1, ClientLevel var2, double var3, double var5, double var7, double var9, double var11, double var13) {
          DripParticle.DripHangParticle var15 = new DripParticle.DripHangParticle(var2, var3, var5, var7, Fluids.WATER, ParticleTypes.FALLING_WATER);
          var15.setColor(0.2F, 0.3F, 1.0F);
          var15.pickSprite(this.sprite);
          return var15;
       }
    }
 
    static class DripLandParticle extends DripParticle {
-      private DripLandParticle(Level var1, double var2, double var4, double var6, Fluid var8) {
+      private DripLandParticle(ClientLevel var1, double var2, double var4, double var6, Fluid var8) {
          super(var1, var2, var4, var6, var8, null);
          this.lifetime = (int)(16.0D / (Math.random() * 0.8D + 0.2D));
       }
    }
 
    static class FallingParticle extends DripParticle {
-      private FallingParticle(Level var1, double var2, double var4, double var6, Fluid var8) {
+      private FallingParticle(ClientLevel var1, double var2, double var4, double var6, Fluid var8) {
          super(var1, var2, var4, var6, var8, null);
          this.lifetime = (int)(64.0D / (Math.random() * 0.8D + 0.2D));
       }
 
       protected void postMoveUpdate() {
@@ -223,11 +275,11 @@
 
       }
    }
 
    static class HoneyFallAndLandParticle extends DripParticle.FallAndLandParticle {
-      private HoneyFallAndLandParticle(Level var1, double var2, double var4, double var6, Fluid var8, ParticleOptions var9) {
+      private HoneyFallAndLandParticle(ClientLevel var1, double var2, double var4, double var6, Fluid var8, ParticleOptions var9) {
          super(var1, var2, var4, var6, var8, var9, null);
       }
 
       protected void postMoveUpdate() {
          if (this.onGround) {
@@ -240,11 +292,11 @@
    }
 
    static class FallAndLandParticle extends DripParticle.FallingParticle {
       protected final ParticleOptions landParticle;
 
-      private FallAndLandParticle(Level var1, double var2, double var4, double var6, Fluid var8, ParticleOptions var9) {
+      private FallAndLandParticle(ClientLevel var1, double var2, double var4, double var6, Fluid var8, ParticleOptions var9) {
          super(var1, var2, var4, var6, var8, null);
          this.landParticle = var9;
       }
 
       protected void postMoveUpdate() {
@@ -255,11 +307,11 @@
 
       }
    }
 
    static class CoolingDripHangParticle extends DripParticle.DripHangParticle {
-      private CoolingDripHangParticle(Level var1, double var2, double var4, double var6, Fluid var8, ParticleOptions var9) {
+      private CoolingDripHangParticle(ClientLevel var1, double var2, double var4, double var6, Fluid var8, ParticleOptions var9) {
          super(var1, var2, var4, var6, var8, var9, null);
       }
 
       protected void preMoveUpdate() {
          this.rCol = 1.0F;
@@ -270,11 +322,11 @@
    }
 
    static class DripHangParticle extends DripParticle {
       private final ParticleOptions fallingParticle;
 
-      private DripHangParticle(Level var1, double var2, double var4, double var6, Fluid var8, ParticleOptions var9) {
+      private DripHangParticle(ClientLevel var1, double var2, double var4, double var6, Fluid var8, ParticleOptions var9) {
          super(var1, var2, var4, var6, var8, null);
          this.fallingParticle = var9;
          this.gravity *= 0.02F;
          this.lifetime = 40;
       }
