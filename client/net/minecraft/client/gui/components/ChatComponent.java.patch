--- net/minecraft/client/gui/components/ChatComponent.java
+++ net/minecraft/client/gui/components/ChatComponent.java
@@ -1,19 +1,23 @@
 package net.minecraft.client.gui.components;
 
 import com.google.common.collect.Lists;
+import com.google.common.collect.Queues;
 import com.mojang.blaze3d.systems.RenderSystem;
-import com.mojang.math.Matrix4f;
+import com.mojang.blaze3d.vertex.PoseStack;
+import java.util.Deque;
 import java.util.Iterator;
 import java.util.List;
 import javax.annotation.Nullable;
 import net.minecraft.client.GuiMessage;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.GuiComponent;
 import net.minecraft.client.gui.screens.ChatScreen;
 import net.minecraft.network.chat.Component;
-import net.minecraft.network.chat.TextComponent;
+import net.minecraft.network.chat.FormattedText;
+import net.minecraft.network.chat.Style;
+import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.util.Mth;
 import net.minecraft.world.entity.player.ChatVisiblity;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
@@ -21,86 +25,109 @@
    private static final Logger LOGGER = LogManager.getLogger();
    private final Minecraft minecraft;
    private final List<String> recentChat = Lists.newArrayList();
    private final List<GuiMessage> allMessages = Lists.newArrayList();
    private final List<GuiMessage> trimmedMessages = Lists.newArrayList();
+   private final Deque<Component> chatQueue = Queues.newArrayDeque();
    private int chatScrollbarPos;
    private boolean newMessageSinceScroll;
+   private long lastMessage = 0L;
 
    public ChatComponent(Minecraft var1) {
       this.minecraft = var1;
    }
 
-   public void render(int var1) {
-      if (this.isChatVisible()) {
-         int var2 = this.getLinesPerPage();
-         int var3 = this.trimmedMessages.size();
-         if (var3 > 0) {
-            boolean var4 = false;
+   public void render(PoseStack var1, int var2) {
+      if (!this.isChatHidden()) {
+         this.processPendingMessages();
+         int var3 = this.getLinesPerPage();
+         int var4 = this.trimmedMessages.size();
+         if (var4 > 0) {
+            boolean var5 = false;
             if (this.isChatFocused()) {
-               var4 = true;
+               var5 = true;
             }
 
-            double var5 = this.getScale();
-            int var7 = Mth.ceil((double)this.getWidth() / var5);
+            double var6 = this.getScale();
+            int var8 = Mth.ceil((double)this.getWidth() / var6);
             RenderSystem.pushMatrix();
             RenderSystem.translatef(2.0F, 8.0F, 0.0F);
-            RenderSystem.scaled(var5, var5, 1.0D);
-            double var8 = this.minecraft.options.chatOpacity * 0.8999999761581421D + 0.10000000149011612D;
-            double var10 = this.minecraft.options.textBackgroundOpacity;
-            int var12 = 0;
-            Matrix4f var13 = Matrix4f.createTranslateMatrix(0.0F, 0.0F, -100.0F);
+            RenderSystem.scaled(var6, var6, 1.0D);
+            double var9 = this.minecraft.options.chatOpacity * 0.8999999761581421D + 0.10000000149011612D;
+            double var11 = this.minecraft.options.textBackgroundOpacity;
+            double var13 = 9.0D * (this.minecraft.options.chatLineSpacing + 1.0D);
+            double var15 = -8.0D * (this.minecraft.options.chatLineSpacing + 1.0D) + 4.0D * this.minecraft.options.chatLineSpacing;
+            int var17 = 0;
 
-            int var16;
-            int var19;
+            int var18;
             int var20;
-            for(int var14 = 0; var14 + this.chatScrollbarPos < this.trimmedMessages.size() && var14 < var2; ++var14) {
-               GuiMessage var15 = (GuiMessage)this.trimmedMessages.get(var14 + this.chatScrollbarPos);
-               if (var15 != null) {
-                  var16 = var1 - var15.getAddedTime();
-                  if (var16 < 200 || var4) {
-                     double var17 = var4 ? 1.0D : getTimeFactor(var16);
-                     var19 = (int)(255.0D * var17 * var8);
-                     var20 = (int)(255.0D * var17 * var10);
-                     ++var12;
-                     if (var19 > 3) {
-                        boolean var21 = false;
-                        int var22 = -var14 * 9;
-                        fill(var13, -2, var22 - 9, 0 + var7 + 4, var22, var20 << 24);
-                        String var23 = var15.getMessage().getColoredString();
+            int var23;
+            int var24;
+            for(var18 = 0; var18 + this.chatScrollbarPos < this.trimmedMessages.size() && var18 < var3; ++var18) {
+               GuiMessage var19 = (GuiMessage)this.trimmedMessages.get(var18 + this.chatScrollbarPos);
+               if (var19 != null) {
+                  var20 = var2 - var19.getAddedTime();
+                  if (var20 < 200 || var5) {
+                     double var21 = var5 ? 1.0D : getTimeFactor(var20);
+                     var23 = (int)(255.0D * var21 * var9);
+                     var24 = (int)(255.0D * var21 * var11);
+                     ++var17;
+                     if (var23 > 3) {
+                        boolean var25 = false;
+                        double var26 = (double)(-var18) * var13;
+                        var1.pushPose();
+                        var1.translate(0.0D, 0.0D, 50.0D);
+                        fill(var1, -2, (int)(var26 - var13), 0 + var8 + 4, (int)var26, var24 << 24);
                         RenderSystem.enableBlend();
-                        this.minecraft.font.drawShadow(var23, 0.0F, (float)(var22 - 8), 16777215 + (var19 << 24));
+                        var1.translate(0.0D, 0.0D, 50.0D);
+                        this.minecraft.font.drawShadow(var1, var19.getMessage(), 0.0F, (float)((int)(var26 + var15)), 16777215 + (var23 << 24));
                         RenderSystem.disableAlphaTest();
                         RenderSystem.disableBlend();
+                        var1.popPose();
                      }
                   }
                }
             }
 
-            if (var4) {
+            int var29;
+            if (!this.chatQueue.isEmpty()) {
+               var18 = (int)(128.0D * var9);
+               var29 = (int)(255.0D * var11);
+               var1.pushPose();
+               var1.translate(0.0D, 0.0D, 50.0D);
+               fill(var1, -2, 0, var8 + 4, 9, var29 << 24);
+               RenderSystem.enableBlend();
+               var1.translate(0.0D, 0.0D, 50.0D);
+               this.minecraft.font.drawShadow(var1, (FormattedText)(new TranslatableComponent("chat.queue", new Object[]{this.chatQueue.size()})), 0.0F, 1.0F, 16777215 + (var18 << 24));
+               var1.popPose();
+               RenderSystem.disableAlphaTest();
+               RenderSystem.disableBlend();
+            }
+
+            if (var5) {
                this.minecraft.font.getClass();
-               byte var24 = 9;
+               byte var28 = 9;
                RenderSystem.translatef(-3.0F, 0.0F, 0.0F);
-               int var25 = var3 * var24 + var3;
-               var16 = var12 * var24 + var12;
-               int var26 = this.chatScrollbarPos * var16 / var3;
-               int var18 = var16 * var16 / var25;
-               if (var25 != var16) {
-                  var19 = var26 > 0 ? 170 : 96;
-                  var20 = this.newMessageSinceScroll ? 13382451 : 3355562;
-                  fill(0, -var26, 2, -var26 - var18, var20 + (var19 << 24));
-                  fill(2, -var26, 1, -var26 - var18, 13421772 + (var19 << 24));
+               var29 = var4 * var28 + var4;
+               var20 = var17 * var28 + var17;
+               int var30 = this.chatScrollbarPos * var20 / var4;
+               int var22 = var20 * var20 / var29;
+               if (var29 != var20) {
+                  var23 = var30 > 0 ? 170 : 96;
+                  var24 = this.newMessageSinceScroll ? 13382451 : 3355562;
+                  fill(var1, 0, -var30, 2, -var30 - var22, var24 + (var23 << 24));
+                  fill(var1, 2, -var30, 1, -var30 - var22, 13421772 + (var23 << 24));
                }
             }
 
             RenderSystem.popMatrix();
          }
       }
    }
 
-   private boolean isChatVisible() {
-      return this.minecraft.options.chatVisibility != ChatVisiblity.HIDDEN;
+   private boolean isChatHidden() {
+      return this.minecraft.options.chatVisibility == ChatVisiblity.HIDDEN;
    }
 
    private static double getTimeFactor(int var0) {
       double var1 = (double)var0 / 200.0D;
       var1 = 1.0D - var1;
@@ -126,22 +153,22 @@
    public void addMessage(Component var1, int var2) {
       this.addMessage(var1, var2, this.minecraft.gui.getGuiTicks(), false);
       LOGGER.info("[CHAT] {}", var1.getString().replaceAll("\r", "\\\\r").replaceAll("\n", "\\\\n"));
    }
 
-   private void addMessage(Component var1, int var2, int var3, boolean var4) {
+   private void addMessage(FormattedText var1, int var2, int var3, boolean var4) {
       if (var2 != 0) {
          this.removeById(var2);
       }
 
       int var5 = Mth.floor((double)this.getWidth() / this.getScale());
-      List var6 = ComponentRenderUtils.wrapComponents(var1, var5, this.minecraft.font, false, false);
+      List var6 = ComponentRenderUtils.wrapComponents(var1, var5, this.minecraft.font);
       boolean var7 = this.isChatFocused();
 
-      Component var9;
+      FormattedText var9;
       for(Iterator var8 = var6.iterator(); var8.hasNext(); this.trimmedMessages.add(0, new GuiMessage(var3, var9, var2))) {
-         var9 = (Component)var8.next();
+         var9 = (FormattedText)var8.next();
          if (var7 && this.chatScrollbarPos > 0) {
             this.newMessageSinceScroll = true;
             this.scrollChat(1.0D);
          }
       }
@@ -199,42 +226,44 @@
          this.newMessageSinceScroll = false;
       }
 
    }
 
+   public boolean handleChatQueueClicked(double var1, double var3) {
+      if (this.isChatFocused() && !this.minecraft.options.hideGui && !this.isChatHidden() && !this.chatQueue.isEmpty()) {
+         double var5 = var1 - 2.0D;
+         double var7 = (double)this.minecraft.getWindow().getGuiScaledHeight() - var3 - 40.0D;
+         if (var5 <= (double)Mth.floor((double)this.getWidth() / this.getScale()) && var7 < 0.0D && var7 > (double)Mth.floor(-9.0D * this.getScale())) {
+            this.addMessage((Component)this.chatQueue.remove());
+            this.lastMessage = System.currentTimeMillis();
+            return true;
+         } else {
+            return false;
+         }
+      } else {
+         return false;
+      }
+   }
+
    @Nullable
-   public Component getClickedComponentAt(double var1, double var3) {
-      if (this.isChatFocused() && !this.minecraft.options.hideGui && this.isChatVisible()) {
-         double var5 = this.getScale();
-         double var7 = var1 - 2.0D;
-         double var9 = (double)this.minecraft.getWindow().getGuiScaledHeight() - var3 - 40.0D;
-         var7 = (double)Mth.floor(var7 / var5);
-         var9 = (double)Mth.floor(var9 / var5);
-         if (var7 >= 0.0D && var9 >= 0.0D) {
-            int var11 = Math.min(this.getLinesPerPage(), this.trimmedMessages.size());
-            if (var7 <= (double)Mth.floor((double)this.getWidth() / this.getScale())) {
+   public Style getClickedComponentStyleAt(double var1, double var3) {
+      if (this.isChatFocused() && !this.minecraft.options.hideGui && !this.isChatHidden()) {
+         double var5 = var1 - 2.0D;
+         double var7 = (double)this.minecraft.getWindow().getGuiScaledHeight() - var3 - 40.0D;
+         var5 = (double)Mth.floor(var5 / this.getScale());
+         var7 = (double)Mth.floor(var7 / (this.getScale() * (this.minecraft.options.chatLineSpacing + 1.0D)));
+         if (var5 >= 0.0D && var7 >= 0.0D) {
+            int var9 = Math.min(this.getLinesPerPage(), this.trimmedMessages.size());
+            if (var5 <= (double)Mth.floor((double)this.getWidth() / this.getScale())) {
                this.minecraft.font.getClass();
-               if (var9 < (double)(9 * var11 + var11)) {
+               if (var7 < (double)(9 * var9 + var9)) {
                   this.minecraft.font.getClass();
-                  int var12 = (int)(var9 / 9.0D + (double)this.chatScrollbarPos);
-                  if (var12 >= 0 && var12 < this.trimmedMessages.size()) {
-                     GuiMessage var13 = (GuiMessage)this.trimmedMessages.get(var12);
-                     int var14 = 0;
-                     Iterator var15 = var13.getMessage().iterator();
-
-                     while(var15.hasNext()) {
-                        Component var16 = (Component)var15.next();
-                        if (var16 instanceof TextComponent) {
-                           var14 += this.minecraft.font.width(ComponentRenderUtils.stripColor(((TextComponent)var16).getText(), false));
-                           if ((double)var14 > var7) {
-                              return var16;
-                           }
-                        }
-                     }
+                  int var10 = (int)(var7 / 9.0D + (double)this.chatScrollbarPos);
+                  if (var10 >= 0 && var10 < this.trimmedMessages.size()) {
+                     GuiMessage var11 = (GuiMessage)this.trimmedMessages.get(var10);
+                     return this.minecraft.font.getSplitter().componentStyleAtWidth(var11.getMessage(), (int)var5);
                   }
-
-                  return null;
                }
             }
 
             return null;
          } else {
@@ -275,11 +304,11 @@
    public int getWidth() {
       return getWidth(this.minecraft.options.chatWidth);
    }
 
    public int getHeight() {
-      return getHeight(this.isChatFocused() ? this.minecraft.options.chatHeightFocused : this.minecraft.options.chatHeightUnfocused);
+      return getHeight((this.isChatFocused() ? this.minecraft.options.chatHeightFocused : this.minecraft.options.chatHeightUnfocused) / (this.minecraft.options.chatLineSpacing + 1.0D));
    }
 
    public double getScale() {
       return this.minecraft.options.chatScale;
    }
@@ -297,6 +326,36 @@
    }
 
    public int getLinesPerPage() {
       return this.getHeight() / 9;
    }
+
+   private long getChatRateMillis() {
+      return (long)(this.minecraft.options.chatDelay * 1000.0D);
+   }
+
+   private void processPendingMessages() {
+      if (!this.chatQueue.isEmpty()) {
+         long var1 = System.currentTimeMillis();
+         if (var1 - this.lastMessage >= this.getChatRateMillis()) {
+            this.addMessage((Component)this.chatQueue.remove());
+            this.lastMessage = var1;
+         }
+
+      }
+   }
+
+   public void enqueueMessage(Component var1) {
+      if (this.minecraft.options.chatDelay <= 0.0D) {
+         this.addMessage(var1);
+      } else {
+         long var2 = System.currentTimeMillis();
+         if (var2 - this.lastMessage >= this.getChatRateMillis()) {
+            this.addMessage(var1);
+            this.lastMessage = var2;
+         } else {
+            this.chatQueue.add(var1);
+         }
+      }
+
+   }
 }
