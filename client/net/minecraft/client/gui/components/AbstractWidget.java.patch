--- net/minecraft/client/gui/components/AbstractWidget.java
+++ net/minecraft/client/gui/components/AbstractWidget.java
@@ -1,56 +1,52 @@
 package net.minecraft.client.gui.components;
 
-import com.mojang.blaze3d.platform.GlStateManager;
 import com.mojang.blaze3d.systems.RenderSystem;
+import com.mojang.blaze3d.vertex.PoseStack;
 import java.util.Objects;
 import net.minecraft.Util;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.Font;
 import net.minecraft.client.gui.GuiComponent;
 import net.minecraft.client.gui.chat.NarratorChatListener;
 import net.minecraft.client.gui.components.events.GuiEventListener;
-import net.minecraft.client.resources.language.I18n;
 import net.minecraft.client.resources.sounds.SimpleSoundInstance;
 import net.minecraft.client.sounds.SoundManager;
+import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.MutableComponent;
+import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.util.Mth;
 
 public abstract class AbstractWidget extends GuiComponent implements Widget, GuiEventListener {
    public static final ResourceLocation WIDGETS_LOCATION = new ResourceLocation("textures/gui/widgets.png");
-   private static final int NARRATE_DELAY_MOUSE = 750;
-   private static final int NARRATE_DELAY_FOCUS = 200;
    protected int width;
    protected int height;
    public int x;
    public int y;
-   private String message;
+   private Component message;
    private boolean wasHovered;
    protected boolean isHovered;
-   public boolean active;
-   public boolean visible;
-   protected float alpha;
-   protected long nextNarration;
+   public boolean active = true;
+   public boolean visible = true;
+   protected float alpha = 1.0F;
+   protected long nextNarration = Long.MAX_VALUE;
    private boolean focused;
 
-   public AbstractWidget(int var1, int var2, String var3) {
-      this(var1, var2, 200, 20, var3);
-   }
-
-   public AbstractWidget(int var1, int var2, int var3, int var4, String var5) {
-      this.active = true;
-      this.visible = true;
-      this.alpha = 1.0F;
-      this.nextNarration = Long.MAX_VALUE;
+   public AbstractWidget(int var1, int var2, int var3, int var4, Component var5) {
       this.x = var1;
       this.y = var2;
       this.width = var3;
       this.height = var4;
       this.message = var5;
    }
 
+   public int getHeight() {
+      return this.height;
+   }
+
    protected int getYImage(boolean var1) {
       byte var2 = 1;
       if (!this.active) {
          var2 = 0;
       } else if (var1) {
@@ -58,13 +54,13 @@
       }
 
       return var2;
    }
 
-   public void render(int var1, int var2, float var3) {
+   public void render(PoseStack var1, int var2, int var3, float var4) {
       if (this.visible) {
-         this.isHovered = var1 >= this.x && var2 >= this.y && var1 < this.x + this.width && var2 < this.y + this.height;
+         this.isHovered = var2 >= this.x && var3 >= this.y && var2 < this.x + this.width && var3 < this.y + this.height;
          if (this.wasHovered != this.isHovered()) {
             if (this.isHovered()) {
                if (this.focused) {
                   this.queueNarration(200);
                } else {
@@ -74,50 +70,50 @@
                this.nextNarration = Long.MAX_VALUE;
             }
          }
 
          if (this.visible) {
-            this.renderButton(var1, var2, var3);
+            this.renderButton(var1, var2, var3, var4);
          }
 
          this.narrate();
          this.wasHovered = this.isHovered();
       }
    }
 
    protected void narrate() {
       if (this.active && this.isHovered() && Util.getMillis() > this.nextNarration) {
-         String var1 = this.getNarrationMessage();
+         String var1 = this.createNarrationMessage().getString();
          if (!var1.isEmpty()) {
             NarratorChatListener.INSTANCE.sayNow(var1);
             this.nextNarration = Long.MAX_VALUE;
          }
       }
 
    }
 
-   protected String getNarrationMessage() {
-      return this.getMessage().isEmpty() ? "" : I18n.get("gui.narrate.button", this.getMessage());
+   protected MutableComponent createNarrationMessage() {
+      return new TranslatableComponent("gui.narrate.button", new Object[]{this.getMessage()});
    }
 
-   public void renderButton(int var1, int var2, float var3) {
-      Minecraft var4 = Minecraft.getInstance();
-      Font var5 = var4.font;
-      var4.getTextureManager().bind(WIDGETS_LOCATION);
+   public void renderButton(PoseStack var1, int var2, int var3, float var4) {
+      Minecraft var5 = Minecraft.getInstance();
+      Font var6 = var5.font;
+      var5.getTextureManager().bind(WIDGETS_LOCATION);
       RenderSystem.color4f(1.0F, 1.0F, 1.0F, this.alpha);
-      int var6 = this.getYImage(this.isHovered());
+      int var7 = this.getYImage(this.isHovered());
       RenderSystem.enableBlend();
       RenderSystem.defaultBlendFunc();
-      RenderSystem.blendFunc(GlStateManager.SourceFactor.SRC_ALPHA, GlStateManager.DestFactor.ONE_MINUS_SRC_ALPHA);
-      this.blit(this.x, this.y, 0, 46 + var6 * 20, this.width / 2, this.height);
-      this.blit(this.x + this.width / 2, this.y, 200 - this.width / 2, 46 + var6 * 20, this.width / 2, this.height);
-      this.renderBg(var4, var1, var2);
-      int var7 = this.active ? 16777215 : 10526880;
-      this.drawCenteredString(var5, this.getMessage(), this.x + this.width / 2, this.y + (this.height - 8) / 2, var7 | Mth.ceil(this.alpha * 255.0F) << 24);
+      RenderSystem.enableDepthTest();
+      this.blit(var1, this.x, this.y, 0, 46 + var7 * 20, this.width / 2, this.height);
+      this.blit(var1, this.x + this.width / 2, this.y, 200 - this.width / 2, 46 + var7 * 20, this.width / 2, this.height);
+      this.renderBg(var1, var5, var2, var3);
+      int var8 = this.active ? 16777215 : 10526880;
+      this.drawCenteredString(var1, var6, this.getMessage(), this.x + this.width / 2, this.y + (this.height - 8) / 2, var8 | Mth.ceil(this.alpha * 255.0F) << 24);
    }
 
-   protected void renderBg(Minecraft var1, int var2, int var3) {
+   protected void renderBg(PoseStack var1, Minecraft var2, int var3, int var4) {
    }
 
    public void onClick(double var1, double var3) {
    }
 
@@ -189,11 +185,11 @@
 
    public boolean isMouseOver(double var1, double var3) {
       return this.active && this.visible && var1 >= (double)this.x && var3 >= (double)this.y && var1 < (double)(this.x + this.width) && var3 < (double)(this.y + this.height);
    }
 
-   public void renderToolTip(int var1, int var2) {
+   public void renderToolTip(PoseStack var1, int var2, int var3) {
    }
 
    public void playDownSound(SoundManager var1) {
       var1.play(SimpleSoundInstance.forUI(SoundEvents.UI_BUTTON_CLICK, 1.0F));
    }
@@ -208,11 +204,11 @@
 
    public void setAlpha(float var1) {
       this.alpha = var1;
    }
 
-   public void setMessage(String var1) {
+   public void setMessage(Component var1) {
       if (!Objects.equals(var1, this.message)) {
          this.queueNarration(250);
       }
 
       this.message = var1;
@@ -220,11 +216,11 @@
 
    public void queueNarration(int var1) {
       this.nextNarration = Util.getMillis() + (long)var1;
    }
 
-   public String getMessage() {
+   public Component getMessage() {
       return this.message;
    }
 
    public boolean isFocused() {
       return this.focused;
