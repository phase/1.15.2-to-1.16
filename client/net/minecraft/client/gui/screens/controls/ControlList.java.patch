--- net/minecraft/client/gui/screens/controls/ControlList.java
+++ net/minecraft/client/gui/screens/controls/ControlList.java
@@ -1,19 +1,24 @@
 package net.minecraft.client.gui.screens.controls;
 
 import com.google.common.collect.ImmutableList;
+import com.mojang.blaze3d.vertex.PoseStack;
 import java.util.Arrays;
 import java.util.Collections;
 import java.util.List;
 import net.minecraft.ChatFormatting;
 import net.minecraft.client.KeyMapping;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.Font;
 import net.minecraft.client.gui.components.Button;
 import net.minecraft.client.gui.components.ContainerObjectSelectionList;
 import net.minecraft.client.gui.components.events.GuiEventListener;
-import net.minecraft.client.resources.language.I18n;
+import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.FormattedText;
+import net.minecraft.network.chat.MutableComponent;
+import net.minecraft.network.chat.TextComponent;
+import net.minecraft.network.chat.TranslatableComponent;
 import org.apache.commons.lang3.ArrayUtils;
 
 public class ControlList extends ContainerObjectSelectionList<ControlList.Entry> {
    private final ControlsScreen controlsScreen;
    private int maxNameWidth;
@@ -30,19 +35,20 @@
       for(int var7 = 0; var7 < var6; ++var7) {
          KeyMapping var8 = var5[var7];
          String var9 = var8.getCategory();
          if (!var9.equals(var4)) {
             var4 = var9;
-            this.addEntry(new ControlList.CategoryEntry(var9));
+            this.addEntry(new ControlList.CategoryEntry(new TranslatableComponent(var9)));
          }
 
-         int var10 = var2.font.width(I18n.get(var8.getName()));
-         if (var10 > this.maxNameWidth) {
-            this.maxNameWidth = var10;
+         TranslatableComponent var10 = new TranslatableComponent(var8.getName());
+         int var11 = var2.font.width((FormattedText)var10);
+         if (var11 > this.maxNameWidth) {
+            this.maxNameWidth = var11;
          }
 
-         this.addEntry(new ControlList.KeyEntry(var8));
+         this.addEntry(new ControlList.KeyEntry(var8, var10));
       }
 
    }
 
    protected int getScrollbarPosition() {
@@ -53,70 +59,70 @@
       return super.getRowWidth() + 32;
    }
 
    public class KeyEntry extends ControlList.Entry {
       private final KeyMapping key;
-      private final String name;
+      private final Component name;
       private final Button changeButton;
       private final Button resetButton;
 
-      private KeyEntry(final KeyMapping var2) {
+      private KeyEntry(final KeyMapping var2, final Component var3) {
          this.key = var2;
-         this.name = I18n.get(var2.getName());
-         this.changeButton = new Button(0, 0, 75, 20, this.name, (var2x) -> {
+         this.name = var3;
+         this.changeButton = new Button(0, 0, 75, 20, var3, (var2x) -> {
             ControlList.this.controlsScreen.selectedKey = var2;
          }) {
-            protected String getNarrationMessage() {
-               return var2.isUnbound() ? I18n.get("narrator.controls.unbound", KeyEntry.this.name) : I18n.get("narrator.controls.bound", KeyEntry.this.name, super.getNarrationMessage());
+            protected MutableComponent createNarrationMessage() {
+               return var2.isUnbound() ? new TranslatableComponent("narrator.controls.unbound", new Object[]{var3}) : new TranslatableComponent("narrator.controls.bound", new Object[]{var3, super.createNarrationMessage()});
             }
          };
-         this.resetButton = new Button(0, 0, 50, 20, I18n.get("controls.reset"), (var2x) -> {
+         this.resetButton = new Button(0, 0, 50, 20, new TranslatableComponent("controls.reset"), (var2x) -> {
             ControlList.this.minecraft.options.setKey(var2, var2.getDefaultKey());
             KeyMapping.resetMapping();
          }) {
-            protected String getNarrationMessage() {
-               return I18n.get("narrator.controls.reset", KeyEntry.this.name);
+            protected MutableComponent createNarrationMessage() {
+               return new TranslatableComponent("narrator.controls.reset", new Object[]{var3});
             }
          };
       }
 
-      public void render(int var1, int var2, int var3, int var4, int var5, int var6, int var7, boolean var8, float var9) {
-         boolean var10 = ControlList.this.controlsScreen.selectedKey == this.key;
+      public void render(PoseStack var1, int var2, int var3, int var4, int var5, int var6, int var7, int var8, boolean var9, float var10) {
+         boolean var11 = ControlList.this.controlsScreen.selectedKey == this.key;
          Font var10000 = ControlList.this.minecraft.font;
-         String var10001 = this.name;
-         float var10002 = (float)(var3 + 90 - ControlList.this.maxNameWidth);
-         int var10003 = var2 + var5 / 2;
+         Component var10002 = this.name;
+         float var10003 = (float)(var4 + 90 - ControlList.this.maxNameWidth);
+         int var10004 = var3 + var6 / 2;
          ControlList.this.minecraft.font.getClass();
-         var10000.draw(var10001, var10002, (float)(var10003 - 9 / 2), 16777215);
-         this.resetButton.x = var3 + 190;
-         this.resetButton.y = var2;
+         var10000.draw(var1, (FormattedText)var10002, var10003, (float)(var10004 - 9 / 2), 16777215);
+         this.resetButton.x = var4 + 190;
+         this.resetButton.y = var3;
          this.resetButton.active = !this.key.isDefault();
-         this.resetButton.render(var6, var7, var9);
-         this.changeButton.x = var3 + 105;
-         this.changeButton.y = var2;
+         this.resetButton.render(var1, var7, var8, var10);
+         this.changeButton.x = var4 + 105;
+         this.changeButton.y = var3;
          this.changeButton.setMessage(this.key.getTranslatedKeyMessage());
-         boolean var11 = false;
+         boolean var12 = false;
          if (!this.key.isUnbound()) {
-            KeyMapping[] var12 = ControlList.this.minecraft.options.keyMappings;
-            int var13 = var12.length;
+            KeyMapping[] var13 = ControlList.this.minecraft.options.keyMappings;
+            int var14 = var13.length;
 
-            for(int var14 = 0; var14 < var13; ++var14) {
-               KeyMapping var15 = var12[var14];
-               if (var15 != this.key && this.key.same(var15)) {
-                  var11 = true;
+            for(int var15 = 0; var15 < var14; ++var15) {
+               KeyMapping var16 = var13[var15];
+               if (var16 != this.key && this.key.same(var16)) {
+                  var12 = true;
                   break;
                }
             }
          }
 
-         if (var10) {
-            this.changeButton.setMessage(ChatFormatting.WHITE + "> " + ChatFormatting.YELLOW + this.changeButton.getMessage() + ChatFormatting.WHITE + " <");
-         } else if (var11) {
-            this.changeButton.setMessage(ChatFormatting.RED + this.changeButton.getMessage());
+         if (var11) {
+            this.changeButton.setMessage((new TextComponent("> ")).append(this.changeButton.getMessage().mutableCopy().withStyle(ChatFormatting.YELLOW)).append(" <").withStyle(ChatFormatting.YELLOW));
+         } else if (var12) {
+            this.changeButton.setMessage(this.changeButton.getMessage().mutableCopy().withStyle(ChatFormatting.RED));
          }
 
-         this.changeButton.render(var6, var7, var9);
+         this.changeButton.render(var1, var7, var8, var10);
       }
 
       public List<? extends GuiEventListener> children() {
          return ImmutableList.of(this.changeButton, this.resetButton);
       }
@@ -133,25 +139,25 @@
          return this.changeButton.mouseReleased(var1, var3, var5) || this.resetButton.mouseReleased(var1, var3, var5);
       }
    }
 
    public class CategoryEntry extends ControlList.Entry {
-      private final String name;
+      private final Component name;
       private final int width;
 
-      public CategoryEntry(String var2) {
-         this.name = I18n.get(var2);
-         this.width = ControlList.this.minecraft.font.width(this.name);
+      public CategoryEntry(Component var2) {
+         this.name = var2;
+         this.width = ControlList.this.minecraft.font.width((FormattedText)this.name);
       }
 
-      public void render(int var1, int var2, int var3, int var4, int var5, int var6, int var7, boolean var8, float var9) {
+      public void render(PoseStack var1, int var2, int var3, int var4, int var5, int var6, int var7, int var8, boolean var9, float var10) {
          Font var10000 = ControlList.this.minecraft.font;
-         String var10001 = this.name;
-         float var10002 = (float)(ControlList.this.minecraft.screen.width / 2 - this.width / 2);
-         int var10003 = var2 + var5;
+         Component var10002 = this.name;
+         float var10003 = (float)(ControlList.this.minecraft.screen.width / 2 - this.width / 2);
+         int var10004 = var3 + var6;
          ControlList.this.minecraft.font.getClass();
-         var10000.draw(var10001, var10002, (float)(var10003 - 9 - 1), 16777215);
+         var10000.draw(var1, (FormattedText)var10002, var10003, (float)(var10004 - 9 - 1), 16777215);
       }
 
       public boolean changeFocus(boolean var1) {
          return false;
       }
