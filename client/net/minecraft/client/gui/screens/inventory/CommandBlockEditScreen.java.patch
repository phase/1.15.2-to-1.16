--- net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen.java
+++ net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen.java
@@ -1,11 +1,11 @@
 package net.minecraft.client.gui.screens.inventory;
 
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.components.Button;
-import net.minecraft.client.resources.language.I18n;
 import net.minecraft.core.BlockPos;
+import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.network.protocol.game.ServerboundSetCommandBlockPacket;
 import net.minecraft.world.level.BaseCommandBlock;
 import net.minecraft.world.level.block.entity.CommandBlockEntity;
 
@@ -31,19 +31,19 @@
       return 135;
    }
 
    protected void init() {
       super.init();
-      this.modeButton = (Button)this.addButton(new Button(this.width / 2 - 50 - 100 - 4, 165, 100, 20, I18n.get("advMode.mode.sequence"), (var1) -> {
+      this.modeButton = (Button)this.addButton(new Button(this.width / 2 - 50 - 100 - 4, 165, 100, 20, new TranslatableComponent("advMode.mode.sequence"), (var1) -> {
          this.nextMode();
          this.updateMode();
       }));
-      this.conditionalButton = (Button)this.addButton(new Button(this.width / 2 - 50, 165, 100, 20, I18n.get("advMode.mode.unconditional"), (var1) -> {
+      this.conditionalButton = (Button)this.addButton(new Button(this.width / 2 - 50, 165, 100, 20, new TranslatableComponent("advMode.mode.unconditional"), (var1) -> {
          this.conditional = !this.conditional;
          this.updateConditional();
       }));
-      this.autoexecButton = (Button)this.addButton(new Button(this.width / 2 + 50 + 4, 165, 100, 20, I18n.get("advMode.mode.redstoneTriggered"), (var1) -> {
+      this.autoexecButton = (Button)this.addButton(new Button(this.width / 2 + 50 + 4, 165, 100, 20, new TranslatableComponent("advMode.mode.redstoneTriggered"), (var1) -> {
          this.autoexec = !this.autoexec;
          this.updateAutoexec();
       }));
       this.doneButton.active = false;
       this.outputButton.active = false;
@@ -88,17 +88,17 @@
    }
 
    private void updateMode() {
       switch(this.mode) {
       case SEQUENCE:
-         this.modeButton.setMessage(I18n.get("advMode.mode.sequence"));
+         this.modeButton.setMessage(new TranslatableComponent("advMode.mode.sequence"));
          break;
       case AUTO:
-         this.modeButton.setMessage(I18n.get("advMode.mode.auto"));
+         this.modeButton.setMessage(new TranslatableComponent("advMode.mode.auto"));
          break;
       case REDSTONE:
-         this.modeButton.setMessage(I18n.get("advMode.mode.redstone"));
+         this.modeButton.setMessage(new TranslatableComponent("advMode.mode.redstone"));
       }
 
    }
 
    private void nextMode() {
@@ -115,21 +115,21 @@
 
    }
 
    private void updateConditional() {
       if (this.conditional) {
-         this.conditionalButton.setMessage(I18n.get("advMode.mode.conditional"));
+         this.conditionalButton.setMessage(new TranslatableComponent("advMode.mode.conditional"));
       } else {
-         this.conditionalButton.setMessage(I18n.get("advMode.mode.unconditional"));
+         this.conditionalButton.setMessage(new TranslatableComponent("advMode.mode.unconditional"));
       }
 
    }
 
    private void updateAutoexec() {
       if (this.autoexec) {
-         this.autoexecButton.setMessage(I18n.get("advMode.mode.autoexec.bat"));
+         this.autoexecButton.setMessage(new TranslatableComponent("advMode.mode.autoexec.bat"));
       } else {
-         this.autoexecButton.setMessage(I18n.get("advMode.mode.redstoneTriggered"));
+         this.autoexecButton.setMessage(new TranslatableComponent("advMode.mode.redstoneTriggered"));
       }
 
    }
 }
