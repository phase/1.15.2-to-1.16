--- net/minecraft/client/gui/screens/LanguageSelectScreen.java
+++ net/minecraft/client/gui/screens/LanguageSelectScreen.java
@@ -1,29 +1,31 @@
 package net.minecraft.client.gui.screens;
 
+import com.mojang.blaze3d.vertex.PoseStack;
 import java.util.Iterator;
 import javax.annotation.Nullable;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.Option;
 import net.minecraft.client.Options;
 import net.minecraft.client.gui.chat.NarratorChatListener;
 import net.minecraft.client.gui.components.Button;
 import net.minecraft.client.gui.components.ObjectSelectionList;
 import net.minecraft.client.gui.components.OptionButton;
 import net.minecraft.client.resources.language.I18n;
-import net.minecraft.client.resources.language.Language;
+import net.minecraft.client.resources.language.LanguageInfo;
 import net.minecraft.client.resources.language.LanguageManager;
+import net.minecraft.network.chat.CommonComponents;
 import net.minecraft.network.chat.TranslatableComponent;
 
 public class LanguageSelectScreen extends OptionsSubScreen {
    private LanguageSelectScreen.LanguageSelectionList packSelectionList;
    private final LanguageManager languageManager;
    private OptionButton forceUnicodeButton;
    private Button doneButton;
 
    public LanguageSelectScreen(Screen var1, Options var2, LanguageManager var3) {
-      super(var1, var2, new TranslatableComponent("options.language", new Object[0]));
+      super(var1, var2, new TranslatableComponent("options.language"));
       this.languageManager = var3;
    }
 
    protected void init() {
       this.packSelectionList = new LanguageSelectScreen.LanguageSelectionList(this.minecraft);
@@ -32,41 +34,40 @@
          Option.FORCE_UNICODE_FONT.toggle(this.options);
          this.options.save();
          var1.setMessage(Option.FORCE_UNICODE_FONT.getMessage(this.options));
          this.minecraft.resizeDisplay();
       }));
-      this.doneButton = (Button)this.addButton(new Button(this.width / 2 - 155 + 160, this.height - 38, 150, 20, I18n.get("gui.done"), (var1) -> {
+      this.doneButton = (Button)this.addButton(new Button(this.width / 2 - 155 + 160, this.height - 38, 150, 20, CommonComponents.GUI_DONE, (var1) -> {
          LanguageSelectScreen.LanguageSelectionList.Entry var2 = (LanguageSelectScreen.LanguageSelectionList.Entry)this.packSelectionList.getSelected();
          if (var2 != null && !var2.language.getCode().equals(this.languageManager.getSelected().getCode())) {
             this.languageManager.setSelected(var2.language);
             this.options.languageCode = var2.language.getCode();
             this.minecraft.reloadResourcePacks();
-            this.font.setBidirectional(this.languageManager.isBidirectional());
-            this.doneButton.setMessage(I18n.get("gui.done"));
+            this.doneButton.setMessage(CommonComponents.GUI_DONE);
             this.forceUnicodeButton.setMessage(Option.FORCE_UNICODE_FONT.getMessage(this.options));
             this.options.save();
          }
 
          this.minecraft.setScreen(this.lastScreen);
       }));
       super.init();
    }
 
-   public void render(int var1, int var2, float var3) {
-      this.packSelectionList.render(var1, var2, var3);
-      this.drawCenteredString(this.font, this.title.getColoredString(), this.width / 2, 16, 16777215);
-      this.drawCenteredString(this.font, "(" + I18n.get("options.languageWarning") + ")", this.width / 2, this.height - 56, 8421504);
-      super.render(var1, var2, var3);
+   public void render(PoseStack var1, int var2, int var3, float var4) {
+      this.packSelectionList.render(var1, var2, var3, var4);
+      this.drawCenteredString(var1, this.font, this.title, this.width / 2, 16, 16777215);
+      this.drawCenteredString(var1, this.font, "(" + I18n.get("options.languageWarning") + ")", this.width / 2, this.height - 56, 8421504);
+      super.render(var1, var2, var3, var4);
    }
 
    class LanguageSelectionList extends ObjectSelectionList<LanguageSelectScreen.LanguageSelectionList.Entry> {
       public LanguageSelectionList(Minecraft var2) {
          super(var2, LanguageSelectScreen.this.width, LanguageSelectScreen.this.height, 32, LanguageSelectScreen.this.height - 65 + 4, 18);
          Iterator var3 = LanguageSelectScreen.this.languageManager.getLanguages().iterator();
 
          while(var3.hasNext()) {
-            Language var4 = (Language)var3.next();
+            LanguageInfo var4 = (LanguageInfo)var3.next();
             LanguageSelectScreen.LanguageSelectionList.Entry var5 = new LanguageSelectScreen.LanguageSelectionList.Entry(var4);
             this.addEntry(var5);
             if (LanguageSelectScreen.this.languageManager.getSelected().getCode().equals(var4.getCode())) {
                this.setSelected(var5);
             }
@@ -92,29 +93,28 @@
             NarratorChatListener.INSTANCE.sayNow((new TranslatableComponent("narrator.select", new Object[]{var1.language})).getString());
          }
 
       }
 
-      protected void renderBackground() {
-         LanguageSelectScreen.this.renderBackground();
+      protected void renderBackground(PoseStack var1) {
+         LanguageSelectScreen.this.renderBackground(var1);
       }
 
       protected boolean isFocused() {
          return LanguageSelectScreen.this.getFocused() == this;
       }
 
       public class Entry extends ObjectSelectionList.Entry<LanguageSelectScreen.LanguageSelectionList.Entry> {
-         private final Language language;
+         private final LanguageInfo language;
 
-         public Entry(Language var2) {
+         public Entry(LanguageInfo var2) {
             this.language = var2;
          }
 
-         public void render(int var1, int var2, int var3, int var4, int var5, int var6, int var7, boolean var8, float var9) {
-            LanguageSelectScreen.this.font.setBidirectional(true);
-            LanguageSelectionList.this.drawCenteredString(LanguageSelectScreen.this.font, this.language.toString(), LanguageSelectionList.this.width / 2, var2 + 1, 16777215);
-            LanguageSelectScreen.this.font.setBidirectional(LanguageSelectScreen.this.languageManager.getSelected().isBidirectional());
+         public void render(PoseStack var1, int var2, int var3, int var4, int var5, int var6, int var7, int var8, boolean var9, float var10) {
+            String var11 = this.language.toString();
+            LanguageSelectScreen.this.font.drawShadow(var1, var11, (float)(LanguageSelectionList.this.width / 2 - LanguageSelectScreen.this.font.width(var11) / 2), (float)(var3 + 1), 16777215, true);
          }
 
          public boolean mouseClicked(double var1, double var3, int var5) {
             if (var5 == 0) {
                this.select();
