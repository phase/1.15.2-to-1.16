--- net/minecraft/client/gui/screens/VideoSettingsScreen.java
+++ net/minecraft/client/gui/screens/VideoSettingsScreen.java
@@ -1,32 +1,33 @@
 package net.minecraft.client.gui.screens;
 
+import com.mojang.blaze3d.vertex.PoseStack;
 import net.minecraft.client.FullscreenResolutionProgressOption;
 import net.minecraft.client.Option;
 import net.minecraft.client.Options;
 import net.minecraft.client.gui.components.Button;
 import net.minecraft.client.gui.components.OptionsList;
-import net.minecraft.client.resources.language.I18n;
+import net.minecraft.network.chat.CommonComponents;
 import net.minecraft.network.chat.TranslatableComponent;
 
 public class VideoSettingsScreen extends OptionsSubScreen {
    private OptionsList list;
    private static final Option[] OPTIONS;
    private int oldMipmaps;
 
    public VideoSettingsScreen(Screen var1, Options var2) {
-      super(var1, var2, new TranslatableComponent("options.videoTitle", new Object[0]));
+      super(var1, var2, new TranslatableComponent("options.videoTitle"));
    }
 
    protected void init() {
       this.oldMipmaps = this.options.mipmapLevels;
       this.list = new OptionsList(this.minecraft, this.width, this.height, 32, this.height - 32, 25);
       this.list.addBig(new FullscreenResolutionProgressOption(this.minecraft.getWindow()));
       this.list.addBig(Option.BIOME_BLEND_RADIUS);
       this.list.addSmall(OPTIONS);
       this.children.add(this.list);
-      this.addButton(new Button(this.width / 2 - 100, this.height - 27, 200, 20, I18n.get("gui.done"), (var1) -> {
+      this.addButton(new Button(this.width / 2 - 100, this.height - 27, 200, 20, CommonComponents.GUI_DONE, (var1) -> {
          this.minecraft.options.save();
          this.minecraft.getWindow().changeFullscreenVideoMode();
          this.minecraft.setScreen(this.lastScreen);
       }));
    }
@@ -66,16 +67,16 @@
       } else {
          return false;
       }
    }
 
-   public void render(int var1, int var2, float var3) {
-      this.renderBackground();
-      this.list.render(var1, var2, var3);
-      this.drawCenteredString(this.font, this.title.getColoredString(), this.width / 2, 5, 16777215);
-      super.render(var1, var2, var3);
+   public void render(PoseStack var1, int var2, int var3, float var4) {
+      this.renderBackground(var1);
+      this.list.render(var1, var2, var3, var4);
+      this.drawCenteredString(var1, this.font, this.title, this.width / 2, 5, 16777215);
+      super.render(var1, var2, var3, var4);
    }
 
    static {
-      OPTIONS = new Option[]{Option.GRAPHICS, Option.RENDER_DISTANCE, Option.AMBIENT_OCCLUSION, Option.FRAMERATE_LIMIT, Option.ENABLE_VSYNC, Option.VIEW_BOBBING, Option.GUI_SCALE, Option.ATTACK_INDICATOR, Option.GAMMA, Option.RENDER_CLOUDS, Option.USE_FULLSCREEN, Option.PARTICLES, Option.MIPMAP_LEVELS, Option.ENTITY_SHADOWS};
+      OPTIONS = new Option[]{Option.GRAPHICS, Option.RENDER_DISTANCE, Option.AMBIENT_OCCLUSION, Option.FRAMERATE_LIMIT, Option.ENABLE_VSYNC, Option.VIEW_BOBBING, Option.GUI_SCALE, Option.ATTACK_INDICATOR, Option.GAMMA, Option.RENDER_CLOUDS, Option.USE_FULLSCREEN, Option.PARTICLES, Option.MIPMAP_LEVELS, Option.ENTITY_SHADOWS, Option.ENTITY_DISTANCE_SCALING};
    }
 }
