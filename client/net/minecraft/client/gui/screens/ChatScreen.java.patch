--- net/minecraft/client/gui/screens/ChatScreen.java
+++ net/minecraft/client/gui/screens/ChatScreen.java
@@ -1,13 +1,16 @@
 package net.minecraft.client.gui.screens;
 
+import com.mojang.blaze3d.vertex.PoseStack;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.chat.NarratorChatListener;
+import net.minecraft.client.gui.components.ChatComponent;
 import net.minecraft.client.gui.components.CommandSuggestions;
 import net.minecraft.client.gui.components.EditBox;
-import net.minecraft.client.resources.language.I18n;
-import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.MutableComponent;
+import net.minecraft.network.chat.Style;
+import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.util.Mth;
 
 public class ChatScreen extends Screen {
    private String historyBuffer = "";
    private int historyPos = -1;
@@ -21,13 +24,13 @@
    }
 
    protected void init() {
       this.minecraft.keyboardHandler.setSendRepeatsToGui(true);
       this.historyPos = this.minecraft.gui.getChat().getRecentChat().size();
-      this.input = new EditBox(this.font, 4, this.height - 12, this.width - 4, 12, I18n.get("chat.editBox")) {
-         protected String getNarrationMessage() {
-            return super.getNarrationMessage() + ChatScreen.this.commandSuggestions.getNarrationMessage();
+      this.input = new EditBox(this.font, 4, this.height - 12, this.width - 4, 12, new TranslatableComponent("chat.editBox")) {
+         protected MutableComponent createNarrationMessage() {
+            return super.createNarrationMessage().append(ChatScreen.this.commandSuggestions.getNarrationMessage());
          }
       };
       this.input.setMaxLength(256);
       this.input.setBordered(false);
       this.input.setValue(this.initial);
@@ -119,14 +122,19 @@
    public boolean mouseClicked(double var1, double var3, int var5) {
       if (this.commandSuggestions.mouseClicked((double)((int)var1), (double)((int)var3), var5)) {
          return true;
       } else {
          if (var5 == 0) {
-            Component var6 = this.minecraft.gui.getChat().getClickedComponentAt(var1, var3);
-            if (var6 != null && this.handleComponentClicked(var6)) {
+            ChatComponent var6 = this.minecraft.gui.getChat();
+            if (var6.handleChatQueueClicked(var1, var3)) {
                return true;
             }
+
+            Style var7 = var6.getClickedComponentStyleAt(var1, var3);
+            if (var7 != null && this.handleComponentClicked(var7)) {
+               return true;
+            }
          }
 
          return this.input.mouseClicked(var1, var3, var5) ? true : super.mouseClicked(var1, var3, var5);
       }
    }
@@ -158,22 +166,22 @@
             this.historyPos = var2;
          }
       }
    }
 
-   public void render(int var1, int var2, float var3) {
+   public void render(PoseStack var1, int var2, int var3, float var4) {
       this.setFocused(this.input);
       this.input.setFocus(true);
-      fill(2, this.height - 14, this.width - 2, this.height - 2, this.minecraft.options.getBackgroundColor(Integer.MIN_VALUE));
-      this.input.render(var1, var2, var3);
-      this.commandSuggestions.render(var1, var2);
-      Component var4 = this.minecraft.gui.getChat().getClickedComponentAt((double)var1, (double)var2);
-      if (var4 != null && var4.getStyle().getHoverEvent() != null) {
-         this.renderComponentHoverEffect(var4, var1, var2);
+      fill(var1, 2, this.height - 14, this.width - 2, this.height - 2, this.minecraft.options.getBackgroundColor(Integer.MIN_VALUE));
+      this.input.render(var1, var2, var3, var4);
+      this.commandSuggestions.render(var1, var2, var3);
+      Style var5 = this.minecraft.gui.getChat().getClickedComponentStyleAt((double)var2, (double)var3);
+      if (var5 != null && var5.getHoverEvent() != null) {
+         this.renderComponentHoverEffect(var1, var5, var2, var3);
       }
 
-      super.render(var1, var2, var3);
+      super.render(var1, var2, var3, var4);
    }
 
    public boolean isPauseScreen() {
       return false;
    }
