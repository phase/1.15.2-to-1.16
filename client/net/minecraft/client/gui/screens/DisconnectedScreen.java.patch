--- net/minecraft/client/gui/screens/DisconnectedScreen.java
+++ net/minecraft/client/gui/screens/DisconnectedScreen.java
@@ -1,59 +1,62 @@
 package net.minecraft.client.gui.screens;
 
+import com.mojang.blaze3d.vertex.PoseStack;
 import java.util.Iterator;
 import java.util.List;
+import javax.annotation.Nullable;
 import net.minecraft.client.gui.Font;
 import net.minecraft.client.gui.components.Button;
-import net.minecraft.client.resources.language.I18n;
 import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.FormattedText;
 import net.minecraft.network.chat.TranslatableComponent;
 
 public class DisconnectedScreen extends Screen {
    private final Component reason;
-   private List<String> lines;
+   @Nullable
+   private List<FormattedText> lines;
    private final Screen parent;
    private int textHeight;
 
    public DisconnectedScreen(Screen var1, String var2, Component var3) {
-      super(new TranslatableComponent(var2, new Object[0]));
+      super(new TranslatableComponent(var2));
       this.parent = var1;
       this.reason = var3;
    }
 
    public boolean shouldCloseOnEsc() {
       return false;
    }
 
    protected void init() {
-      this.lines = this.font.split(this.reason.getColoredString(), this.width - 50);
+      this.lines = this.font.split(this.reason, this.width - 50);
       int var10001 = this.lines.size();
       this.font.getClass();
       this.textHeight = var10001 * 9;
       int var10003 = this.width / 2 - 100;
       int var10004 = this.height / 2 + this.textHeight / 2;
       this.font.getClass();
-      this.addButton(new Button(var10003, Math.min(var10004 + 9, this.height - 30), 200, 20, I18n.get("gui.toMenu"), (var1) -> {
+      this.addButton(new Button(var10003, Math.min(var10004 + 9, this.height - 30), 200, 20, new TranslatableComponent("gui.toMenu"), (var1) -> {
          this.minecraft.setScreen(this.parent);
       }));
    }
 
-   public void render(int var1, int var2, float var3) {
-      this.renderBackground();
-      Font var10001 = this.font;
-      String var10002 = this.title.getColoredString();
-      int var10003 = this.width / 2;
-      int var10004 = this.height / 2 - this.textHeight / 2;
+   public void render(PoseStack var1, int var2, int var3, float var4) {
+      this.renderBackground(var1);
+      Font var10002 = this.font;
+      Component var10003 = this.title;
+      int var10004 = this.width / 2;
+      int var10005 = this.height / 2 - this.textHeight / 2;
       this.font.getClass();
-      this.drawCenteredString(var10001, var10002, var10003, var10004 - 9 * 2, 11184810);
-      int var4 = this.height / 2 - this.textHeight / 2;
+      this.drawCenteredString(var1, var10002, var10003, var10004, var10005 - 9 * 2, 11184810);
+      int var5 = this.height / 2 - this.textHeight / 2;
       if (this.lines != null) {
-         for(Iterator var5 = this.lines.iterator(); var5.hasNext(); var4 += 9) {
-            String var6 = (String)var5.next();
-            this.drawCenteredString(this.font, var6, this.width / 2, var4, 16777215);
+         for(Iterator var6 = this.lines.iterator(); var6.hasNext(); var5 += 9) {
+            FormattedText var7 = (FormattedText)var6.next();
+            this.drawCenteredString(var1, this.font, var7, this.width / 2, var5, 16777215);
             this.font.getClass();
          }
       }
 
-      super.render(var1, var2, var3);
+      super.render(var1, var2, var3, var4);
    }
 }
