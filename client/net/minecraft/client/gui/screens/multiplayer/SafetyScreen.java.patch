--- net/minecraft/client/gui/screens/multiplayer/SafetyScreen.java
+++ net/minecraft/client/gui/screens/multiplayer/SafetyScreen.java
@@ -1,74 +1,77 @@
 package net.minecraft.client.gui.screens.multiplayer;
 
 import com.google.common.collect.Lists;
+import com.mojang.blaze3d.vertex.PoseStack;
 import java.util.Iterator;
 import java.util.List;
 import net.minecraft.ChatFormatting;
 import net.minecraft.client.gui.chat.NarratorChatListener;
 import net.minecraft.client.gui.components.Button;
 import net.minecraft.client.gui.components.Checkbox;
 import net.minecraft.client.gui.screens.Screen;
+import net.minecraft.network.chat.CommonComponents;
 import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.FormattedText;
 import net.minecraft.network.chat.TranslatableComponent;
 
 public class SafetyScreen extends Screen {
    private final Screen previous;
-   private final Component title;
-   private final Component content;
-   private final Component check;
-   private final Component proceed;
-   private final Component back;
+   private static final Component TITLE;
+   private static final Component CONTENT;
+   private static final Component CHECK;
+   private static final Component NARRATION;
    private Checkbox stopShowing;
-   private final List<String> lines;
+   private final List<FormattedText> lines = Lists.newArrayList();
 
    public SafetyScreen(Screen var1) {
       super(NarratorChatListener.NO_TITLE);
-      this.title = (new TranslatableComponent("multiplayerWarning.header", new Object[0])).withStyle(ChatFormatting.BOLD);
-      this.content = new TranslatableComponent("multiplayerWarning.message", new Object[0]);
-      this.check = new TranslatableComponent("multiplayerWarning.check", new Object[0]);
-      this.proceed = new TranslatableComponent("gui.proceed", new Object[0]);
-      this.back = new TranslatableComponent("gui.back", new Object[0]);
-      this.lines = Lists.newArrayList();
       this.previous = var1;
    }
 
    protected void init() {
       super.init();
       this.lines.clear();
-      this.lines.addAll(this.font.split(this.content.getColoredString(), this.width - 50));
+      this.lines.addAll(this.font.split(CONTENT, this.width - 50));
       int var10000 = this.lines.size() + 1;
       this.font.getClass();
       int var1 = var10000 * 9;
-      this.addButton(new Button(this.width / 2 - 155, 100 + var1, 150, 20, this.proceed.getColoredString(), (var1x) -> {
+      this.addButton(new Button(this.width / 2 - 155, 100 + var1, 150, 20, CommonComponents.GUI_PROCEED, (var1x) -> {
          if (this.stopShowing.selected()) {
             this.minecraft.options.skipMultiplayerWarning = true;
             this.minecraft.options.save();
          }
 
          this.minecraft.setScreen(new JoinMultiplayerScreen(this.previous));
       }));
-      this.addButton(new Button(this.width / 2 - 155 + 160, 100 + var1, 150, 20, this.back.getColoredString(), (var1x) -> {
+      this.addButton(new Button(this.width / 2 - 155 + 160, 100 + var1, 150, 20, CommonComponents.GUI_BACK, (var1x) -> {
          this.minecraft.setScreen(this.previous);
       }));
-      this.stopShowing = new Checkbox(this.width / 2 - 155 + 80, 76 + var1, 150, 20, this.check.getColoredString(), false);
+      this.stopShowing = new Checkbox(this.width / 2 - 155 + 80, 76 + var1, 150, 20, CHECK, false);
       this.addButton(this.stopShowing);
    }
 
    public String getNarrationMessage() {
-      return this.title.getString() + "\n" + this.content.getString();
+      return NARRATION.getString();
    }
 
-   public void render(int var1, int var2, float var3) {
+   public void render(PoseStack var1, int var2, int var3, float var4) {
       this.renderDirtBackground(0);
-      this.drawCenteredString(this.font, this.title.getColoredString(), this.width / 2, 30, 16777215);
-      int var4 = 70;
+      this.drawCenteredString(var1, this.font, TITLE, this.width / 2, 30, 16777215);
+      int var5 = 70;
 
-      for(Iterator var5 = this.lines.iterator(); var5.hasNext(); var4 += 9) {
-         String var6 = (String)var5.next();
-         this.drawCenteredString(this.font, var6, this.width / 2, var4, 16777215);
+      for(Iterator var6 = this.lines.iterator(); var6.hasNext(); var5 += 9) {
+         FormattedText var7 = (FormattedText)var6.next();
+         this.drawCenteredString(var1, this.font, var7, this.width / 2, var5, 16777215);
          this.font.getClass();
       }
 
-      super.render(var1, var2, var3);
+      super.render(var1, var2, var3, var4);
    }
+
+   static {
+      TITLE = (new TranslatableComponent("multiplayerWarning.header")).withStyle(ChatFormatting.BOLD);
+      CONTENT = new TranslatableComponent("multiplayerWarning.message");
+      CHECK = new TranslatableComponent("multiplayerWarning.check");
+      NARRATION = TITLE.copy().append("\n").append(CONTENT);
+   }
 }
