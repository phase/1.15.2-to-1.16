--- net/minecraft/client/gui/screens/SkinCustomizationScreen.java
+++ net/minecraft/client/gui/screens/SkinCustomizationScreen.java
@@ -1,18 +1,20 @@
 package net.minecraft.client.gui.screens;
 
+import com.mojang.blaze3d.vertex.PoseStack;
 import net.minecraft.client.Option;
 import net.minecraft.client.Options;
 import net.minecraft.client.gui.components.Button;
 import net.minecraft.client.gui.components.OptionButton;
-import net.minecraft.client.resources.language.I18n;
+import net.minecraft.network.chat.CommonComponents;
+import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.world.entity.player.PlayerModelPart;
 
 public class SkinCustomizationScreen extends OptionsSubScreen {
    public SkinCustomizationScreen(Screen var1, Options var2) {
-      super(var1, var2, new TranslatableComponent("options.skinCustomisation.title", new Object[0]));
+      super(var1, var2, new TranslatableComponent("options.skinCustomisation.title"));
    }
 
    protected void init() {
       int var1 = 0;
       PlayerModelPart[] var2 = PlayerModelPart.values();
@@ -36,27 +38,20 @@
       ++var1;
       if (var1 % 2 == 1) {
          ++var1;
       }
 
-      this.addButton(new Button(this.width / 2 - 100, this.height / 6 + 24 * (var1 >> 1), 200, 20, I18n.get("gui.done"), (var1x) -> {
+      this.addButton(new Button(this.width / 2 - 100, this.height / 6 + 24 * (var1 >> 1), 200, 20, CommonComponents.GUI_DONE, (var1x) -> {
          this.minecraft.setScreen(this.lastScreen);
       }));
    }
 
-   public void render(int var1, int var2, float var3) {
-      this.renderBackground();
-      this.drawCenteredString(this.font, this.title.getColoredString(), this.width / 2, 20, 16777215);
-      super.render(var1, var2, var3);
+   public void render(PoseStack var1, int var2, int var3, float var4) {
+      this.renderBackground(var1);
+      this.drawCenteredString(var1, this.font, this.title, this.width / 2, 20, 16777215);
+      super.render(var1, var2, var3, var4);
    }
 
-   private String getMessage(PlayerModelPart var1) {
-      String var2;
-      if (this.options.getModelParts().contains(var1)) {
-         var2 = I18n.get("options.on");
-      } else {
-         var2 = I18n.get("options.off");
-      }
-
-      return var1.getName().getColoredString() + ": " + var2;
+   private Component getMessage(PlayerModelPart var1) {
+      return var1.getName().copy().append(": ").append(CommonComponents.optionStatus(this.options.getModelParts().contains(var1)));
    }
 }
