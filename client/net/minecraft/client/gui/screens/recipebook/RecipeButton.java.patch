--- net/minecraft/client/gui/screens/recipebook/RecipeButton.java
+++ net/minecraft/client/gui/screens/recipebook/RecipeButton.java
@@ -1,14 +1,19 @@
 package net.minecraft.client.gui.screens.recipebook;
 
+import com.google.common.collect.Lists;
 import com.mojang.blaze3d.systems.RenderSystem;
+import com.mojang.blaze3d.vertex.PoseStack;
+import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.List;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.gui.components.AbstractWidget;
 import net.minecraft.client.gui.screens.Screen;
-import net.minecraft.client.resources.language.I18n;
+import net.minecraft.network.chat.FormattedText;
+import net.minecraft.network.chat.TextComponent;
+import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.stats.RecipeBook;
 import net.minecraft.util.Mth;
 import net.minecraft.world.inventory.RecipeBookMenu;
 import net.minecraft.world.item.ItemStack;
@@ -22,11 +27,11 @@
    private float time;
    private float animationTime;
    private int currentIndex;
 
    public RecipeButton() {
-      super(0, 0, 25, 25, "");
+      super(0, 0, 25, 25, TextComponent.EMPTY);
    }
 
    public void init(RecipeCollection var1, RecipeBookPage var2) {
       this.collection = var1;
       this.menu = (RecipeBookMenu)var2.getMinecraft().player.containerMenu;
@@ -52,49 +57,49 @@
    public void setPosition(int var1, int var2) {
       this.x = var1;
       this.y = var2;
    }
 
-   public void renderButton(int var1, int var2, float var3) {
+   public void renderButton(PoseStack var1, int var2, int var3, float var4) {
       if (!Screen.hasControlDown()) {
-         this.time += var3;
+         this.time += var4;
       }
 
-      Minecraft var4 = Minecraft.getInstance();
-      var4.getTextureManager().bind(RECIPE_BOOK_LOCATION);
-      int var5 = 29;
+      Minecraft var5 = Minecraft.getInstance();
+      var5.getTextureManager().bind(RECIPE_BOOK_LOCATION);
+      int var6 = 29;
       if (!this.collection.hasCraftable()) {
-         var5 += 25;
+         var6 += 25;
       }
 
-      int var6 = 206;
+      int var7 = 206;
       if (this.collection.getRecipes(this.book.isFilteringCraftable(this.menu)).size() > 1) {
-         var6 += 25;
+         var7 += 25;
       }
 
-      boolean var7 = this.animationTime > 0.0F;
-      if (var7) {
-         float var8 = 1.0F + 0.1F * (float)Math.sin((double)(this.animationTime / 15.0F * 3.1415927F));
+      boolean var8 = this.animationTime > 0.0F;
+      if (var8) {
+         float var9 = 1.0F + 0.1F * (float)Math.sin((double)(this.animationTime / 15.0F * 3.1415927F));
          RenderSystem.pushMatrix();
          RenderSystem.translatef((float)(this.x + 8), (float)(this.y + 12), 0.0F);
-         RenderSystem.scalef(var8, var8, 1.0F);
+         RenderSystem.scalef(var9, var9, 1.0F);
          RenderSystem.translatef((float)(-(this.x + 8)), (float)(-(this.y + 12)), 0.0F);
-         this.animationTime -= var3;
+         this.animationTime -= var4;
       }
 
-      this.blit(this.x, this.y, var5, var6, this.width, this.height);
-      List var11 = this.getOrderedRecipes();
-      this.currentIndex = Mth.floor(this.time / 30.0F) % var11.size();
-      ItemStack var9 = ((Recipe)var11.get(this.currentIndex)).getResultItem();
-      int var10 = 4;
+      this.blit(var1, this.x, this.y, var6, var7, this.width, this.height);
+      List var12 = this.getOrderedRecipes();
+      this.currentIndex = Mth.floor(this.time / 30.0F) % var12.size();
+      ItemStack var10 = ((Recipe)var12.get(this.currentIndex)).getResultItem();
+      int var11 = 4;
       if (this.collection.hasSingleResultItem() && this.getOrderedRecipes().size() > 1) {
-         var4.getItemRenderer().renderAndDecorateItem(var9, this.x + var10 + 1, this.y + var10 + 1);
-         --var10;
+         var5.getItemRenderer().renderAndDecorateItem(var10, this.x + var11 + 1, this.y + var11 + 1);
+         --var11;
       }
 
-      var4.getItemRenderer().renderAndDecorateItem(var9, this.x + var10, this.y + var10);
-      if (var7) {
+      var5.getItemRenderer().renderAndDecorateFakeItem(var10, this.x + var11, this.y + var11);
+      if (var8) {
          RenderSystem.popMatrix();
       }
 
    }
 
@@ -114,15 +119,15 @@
    public Recipe<?> getRecipe() {
       List var1 = this.getOrderedRecipes();
       return (Recipe)var1.get(this.currentIndex);
    }
 
-   public List<String> getTooltipText(Screen var1) {
+   public List<FormattedText> getTooltipText(Screen var1) {
       ItemStack var2 = ((Recipe)this.getOrderedRecipes().get(this.currentIndex)).getResultItem();
-      List var3 = var1.getTooltipFromItem(var2);
+      ArrayList var3 = Lists.newArrayList(var1.getTooltipFromItem(var2));
       if (this.collection.getRecipes(this.book.isFilteringCraftable(this.menu)).size() > 1) {
-         var3.add(I18n.get("gui.recipebook.moreRecipes"));
+         var3.add(new TranslatableComponent("gui.recipebook.moreRecipes"));
       }
 
       return var3;
    }
 
