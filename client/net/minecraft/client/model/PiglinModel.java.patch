--- net/minecraft/client/model/PiglinModel.java
+++ net/minecraft/client/model/PiglinModel.java
@@ -1,0 +1,94 @@
+package net.minecraft.client.model;
+
+import net.minecraft.client.model.geom.ModelPart;
+import net.minecraft.util.Mth;
+import net.minecraft.world.entity.EntityType;
+import net.minecraft.world.entity.LivingEntity;
+import net.minecraft.world.entity.Mob;
+import net.minecraft.world.entity.monster.piglin.Piglin;
+
+public class PiglinModel<T extends Mob> extends PlayerModel<T> {
+   public final ModelPart earRight;
+   public final ModelPart earLeft;
+
+   public PiglinModel(float var1, int var2, int var3) {
+      super(var1, false);
+      this.texWidth = var2;
+      this.texHeight = var3;
+      this.body = new ModelPart(this, 16, 16);
+      this.body.addBox(-4.0F, 0.0F, -2.0F, 8.0F, 12.0F, 4.0F, var1);
+      this.head = new ModelPart(this);
+      this.head.texOffs(0, 0).addBox(-5.0F, -8.0F, -4.0F, 10.0F, 8.0F, 8.0F, var1);
+      this.head.texOffs(31, 1).addBox(-2.0F, -4.0F, -5.0F, 4.0F, 4.0F, 1.0F, var1);
+      this.head.texOffs(2, 4).addBox(2.0F, -2.0F, -5.0F, 1.0F, 2.0F, 1.0F, var1);
+      this.head.texOffs(2, 0).addBox(-3.0F, -2.0F, -5.0F, 1.0F, 2.0F, 1.0F, var1);
+      this.earRight = new ModelPart(this);
+      this.earRight.setPos(4.5F, -6.0F, 0.0F);
+      this.earRight.texOffs(51, 6).addBox(0.0F, 0.0F, -2.0F, 1.0F, 5.0F, 4.0F, var1);
+      this.head.addChild(this.earRight);
+      this.earLeft = new ModelPart(this);
+      this.earLeft.setPos(-4.5F, -6.0F, 0.0F);
+      this.earLeft.texOffs(39, 6).addBox(-1.0F, 0.0F, -2.0F, 1.0F, 5.0F, 4.0F, var1);
+      this.head.addChild(this.earLeft);
+      this.hat = new ModelPart(this);
+   }
+
+   public void setupAnim(T var1, float var2, float var3, float var4, float var5, float var6) {
+      super.setupAnim((LivingEntity)var1, var2, var3, var4, var5, var6);
+      float var7 = 0.5235988F;
+      float var8 = var4 * 0.1F + var2 * 0.5F;
+      float var9 = 0.08F + var3 * 0.4F;
+      this.earRight.zRot = -0.5235988F - Mth.cos(var8 * 1.2F) * var9;
+      this.earLeft.zRot = 0.5235988F + Mth.cos(var8) * var9;
+      if (var1.getType() == EntityType.PIGLIN) {
+         Piglin var10 = (Piglin)var1;
+         Piglin.PiglinArmPose var11 = var10.getArmPose();
+         if (var11 == Piglin.PiglinArmPose.DANCING) {
+            float var12 = var4 / 60.0F;
+            this.earLeft.zRot = 0.5235988F + 0.017453292F * Mth.sin(var12 * 30.0F) * 10.0F;
+            this.earRight.zRot = -0.5235988F - 0.017453292F * Mth.cos(var12 * 30.0F) * 10.0F;
+            this.head.x = Mth.sin(var12 * 10.0F);
+            this.head.y = Mth.sin(var12 * 40.0F);
+            this.rightArm.zRot = 0.017453292F * (70.0F + Mth.cos(var12 * 40.0F) * 10.0F);
+            this.leftArm.zRot = this.rightArm.zRot * -1.0F;
+            this.body.y = Mth.sin(var12 * 40.0F) * 0.35F;
+         } else if (var11 == Piglin.PiglinArmPose.ATTACKING_WITH_MELEE_WEAPON && this.attackTime == 0.0F) {
+            this.holdWeaponHigh(var1);
+         } else if (var11 == Piglin.PiglinArmPose.CROSSBOW_HOLD) {
+            AnimationUtils.animateCrossbowHold(this.rightArm, this.leftArm, this.head, !var1.isLeftHanded());
+         } else if (var11 == Piglin.PiglinArmPose.CROSSBOW_CHARGE) {
+            AnimationUtils.animateCrossbowCharge(this.rightArm, this.leftArm, var1, !var1.isLeftHanded());
+         } else if (var11 == Piglin.PiglinArmPose.ADMIRING_ITEM) {
+            this.head.xRot = 0.5F;
+            this.head.yRot = 0.0F;
+            if (var1.isLeftHanded()) {
+               this.rightArm.yRot = -0.5F;
+               this.rightArm.xRot = -0.9F;
+            } else {
+               this.leftArm.yRot = 0.5F;
+               this.leftArm.xRot = -0.9F;
+            }
+         }
+      } else if (var1.getType() == EntityType.ZOMBIFIED_PIGLIN) {
+         AnimationUtils.animateZombieArms(this.leftArm, this.rightArm, var1.isAggressive(), this.attackTime, var4);
+      }
+
+   }
+
+   protected void setupAttackAnimation(T var1, float var2) {
+      if (this.attackTime > 0.0F && var1 instanceof Piglin && ((Piglin)var1).getArmPose() == Piglin.PiglinArmPose.ATTACKING_WITH_MELEE_WEAPON) {
+         AnimationUtils.swingWeaponDown(this.rightArm, this.leftArm, var1, this.attackTime, var2);
+      } else {
+         super.setupAttackAnimation(var1, var2);
+      }
+   }
+
+   private void holdWeaponHigh(T var1) {
+      if (var1.isLeftHanded()) {
+         this.leftArm.xRot = -1.8F;
+      } else {
+         this.rightArm.xRot = -1.8F;
+      }
+
+   }
+}
