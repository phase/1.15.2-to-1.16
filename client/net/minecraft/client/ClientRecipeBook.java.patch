--- net/minecraft/client/ClientRecipeBook.java
+++ net/minecraft/client/ClientRecipeBook.java
@@ -6,10 +6,11 @@
 import java.util.Collections;
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 import net.minecraft.client.gui.screens.recipebook.RecipeCollection;
+import net.minecraft.core.Registry;
 import net.minecraft.stats.RecipeBook;
 import net.minecraft.world.inventory.BlastFurnaceMenu;
 import net.minecraft.world.inventory.CraftingMenu;
 import net.minecraft.world.inventory.FurnaceMenu;
 import net.minecraft.world.inventory.InventoryMenu;
@@ -19,12 +20,16 @@
 import net.minecraft.world.item.CreativeModeTab;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.crafting.Recipe;
 import net.minecraft.world.item.crafting.RecipeManager;
 import net.minecraft.world.item.crafting.RecipeType;
+import org.apache.logging.log4j.LogManager;
+import org.apache.logging.log4j.Logger;
+import org.apache.logging.log4j.util.Supplier;
 
 public class ClientRecipeBook extends RecipeBook {
+   private static final Logger LOGGER = LogManager.getLogger();
    private final RecipeManager recipes;
    private final Map<RecipeBookCategories, List<RecipeCollection>> collectionsByTab = Maps.newHashMap();
    private final List<RecipeCollection> collections = Lists.newArrayList();
 
    public ClientRecipeBook(RecipeManager var1) {
@@ -67,15 +72,11 @@
       })).add(var2);
       if (var1 != RecipeBookCategories.FURNACE_BLOCKS && var1 != RecipeBookCategories.FURNACE_FOOD && var1 != RecipeBookCategories.FURNACE_MISC) {
          if (var1 != RecipeBookCategories.BLAST_FURNACE_BLOCKS && var1 != RecipeBookCategories.BLAST_FURNACE_MISC) {
             if (var1 == RecipeBookCategories.SMOKER_FOOD) {
                this.addToCollection(RecipeBookCategories.SMOKER_SEARCH, var2);
-            } else if (var1 == RecipeBookCategories.STONECUTTER) {
-               this.addToCollection(RecipeBookCategories.STONECUTTER, var2);
-            } else if (var1 == RecipeBookCategories.CAMPFIRE) {
-               this.addToCollection(RecipeBookCategories.CAMPFIRE, var2);
-            } else {
+            } else if (var1 == RecipeBookCategories.CRAFTING_BUILDING_BLOCKS || var1 == RecipeBookCategories.CRAFTING_REDSTONE || var1 == RecipeBookCategories.CRAFTING_EQUIPMENT || var1 == RecipeBookCategories.CRAFTING_MISC) {
                this.addToCollection(RecipeBookCategories.SEARCH, var2);
             }
          } else {
             this.addToCollection(RecipeBookCategories.BLAST_FURNACE_SEARCH, var2);
          }
@@ -92,11 +93,21 @@
       })).add(var2);
    }
 
    private static RecipeBookCategories getCategory(Recipe<?> var0) {
       RecipeType var1 = var0.getType();
-      if (var1 == RecipeType.SMELTING) {
+      if (var1 == RecipeType.CRAFTING) {
+         ItemStack var2 = var0.getResultItem();
+         CreativeModeTab var3 = var2.getItem().getItemCategory();
+         if (var3 == CreativeModeTab.TAB_BUILDING_BLOCKS) {
+            return RecipeBookCategories.CRAFTING_BUILDING_BLOCKS;
+         } else if (var3 != CreativeModeTab.TAB_TOOLS && var3 != CreativeModeTab.TAB_COMBAT) {
+            return var3 == CreativeModeTab.TAB_REDSTONE ? RecipeBookCategories.CRAFTING_REDSTONE : RecipeBookCategories.CRAFTING_MISC;
+         } else {
+            return RecipeBookCategories.CRAFTING_EQUIPMENT;
+         }
+      } else if (var1 == RecipeType.SMELTING) {
          if (var0.getResultItem().getItem().isEdible()) {
             return RecipeBookCategories.FURNACE_FOOD;
          } else {
             return var0.getResultItem().getItem() instanceof BlockItem ? RecipeBookCategories.FURNACE_BLOCKS : RecipeBookCategories.FURNACE_MISC;
          }
@@ -106,20 +117,17 @@
          return RecipeBookCategories.SMOKER_FOOD;
       } else if (var1 == RecipeType.STONECUTTING) {
          return RecipeBookCategories.STONECUTTER;
       } else if (var1 == RecipeType.CAMPFIRE_COOKING) {
          return RecipeBookCategories.CAMPFIRE;
+      } else if (var1 == RecipeType.SMITHING) {
+         return RecipeBookCategories.SMITHING;
       } else {
-         ItemStack var2 = var0.getResultItem();
-         CreativeModeTab var3 = var2.getItem().getItemCategory();
-         if (var3 == CreativeModeTab.TAB_BUILDING_BLOCKS) {
-            return RecipeBookCategories.BUILDING_BLOCKS;
-         } else if (var3 != CreativeModeTab.TAB_TOOLS && var3 != CreativeModeTab.TAB_COMBAT) {
-            return var3 == CreativeModeTab.TAB_REDSTONE ? RecipeBookCategories.REDSTONE : RecipeBookCategories.MISC;
-         } else {
-            return RecipeBookCategories.EQUIPMENT;
-         }
+         LOGGER.warn("Unknown recipe category: {}/{}", new Supplier[]{() -> {
+            return Registry.RECIPE_TYPE.getKey(var0.getType());
+         }, var0::getId});
+         return RecipeBookCategories.UNKNOWN;
       }
    }
 
    public static List<RecipeBookCategories> getCategories(RecipeBookMenu<?> var0) {
       if (!(var0 instanceof CraftingMenu) && !(var0 instanceof InventoryMenu)) {
@@ -129,11 +137,11 @@
             return Lists.newArrayList(new RecipeBookCategories[]{RecipeBookCategories.BLAST_FURNACE_SEARCH, RecipeBookCategories.BLAST_FURNACE_BLOCKS, RecipeBookCategories.BLAST_FURNACE_MISC});
          } else {
             return var0 instanceof SmokerMenu ? Lists.newArrayList(new RecipeBookCategories[]{RecipeBookCategories.SMOKER_SEARCH, RecipeBookCategories.SMOKER_FOOD}) : Lists.newArrayList();
          }
       } else {
-         return Lists.newArrayList(new RecipeBookCategories[]{RecipeBookCategories.SEARCH, RecipeBookCategories.EQUIPMENT, RecipeBookCategories.BUILDING_BLOCKS, RecipeBookCategories.MISC, RecipeBookCategories.REDSTONE});
+         return Lists.newArrayList(new RecipeBookCategories[]{RecipeBookCategories.SEARCH, RecipeBookCategories.CRAFTING_EQUIPMENT, RecipeBookCategories.CRAFTING_BUILDING_BLOCKS, RecipeBookCategories.CRAFTING_MISC, RecipeBookCategories.CRAFTING_REDSTONE});
       }
    }
 
    public List<RecipeCollection> getCollections() {
       return this.collections;
