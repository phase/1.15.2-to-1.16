--- net/minecraft/client/multiplayer/ServerAddress.java
+++ net/minecraft/client/multiplayer/ServerAddress.java
@@ -1,9 +1,11 @@
 package net.minecraft.client.multiplayer;
 
+import com.mojang.datafixers.util.Pair;
 import java.net.IDN;
 import java.util.Hashtable;
+import javax.naming.directory.Attribute;
 import javax.naming.directory.Attributes;
 import javax.naming.directory.InitialDirContext;
 
 public class ServerAddress {
    private final String host;
@@ -50,34 +52,38 @@
          }
 
          String var5 = var1[0];
          int var6 = var1.length > 1 ? parseInt(var1[1], 25565) : 25565;
          if (var6 == 25565) {
-            String[] var7 = lookupSrv(var5);
-            var5 = var7[0];
-            var6 = parseInt(var7[1], 25565);
+            Pair var7 = lookupSrv(var5);
+            var5 = (String)var7.getFirst();
+            var6 = (Integer)var7.getSecond();
          }
 
          return new ServerAddress(var5, var6);
       }
    }
 
-   private static String[] lookupSrv(String var0) {
+   private static Pair<String, Integer> lookupSrv(String var0) {
       try {
          String var1 = "com.sun.jndi.dns.DnsContextFactory";
          Class.forName("com.sun.jndi.dns.DnsContextFactory");
          Hashtable var2 = new Hashtable();
          var2.put("java.naming.factory.initial", "com.sun.jndi.dns.DnsContextFactory");
          var2.put("java.naming.provider.url", "dns:");
          var2.put("com.sun.jndi.dns.timeout.retries", "1");
          InitialDirContext var3 = new InitialDirContext(var2);
          Attributes var4 = var3.getAttributes("_minecraft._tcp." + var0, new String[]{"SRV"});
-         String[] var5 = var4.get("srv").get().toString().split(" ", 4);
-         return new String[]{var5[3], var5[2]};
-      } catch (Throwable var6) {
-         return new String[]{var0, Integer.toString(25565)};
+         Attribute var5 = var4.get("srv");
+         if (var5 != null) {
+            String[] var6 = var5.get().toString().split(" ", 4);
+            return Pair.of(var6[3], parseInt(var6[2], 25565));
+         }
+      } catch (Throwable var7) {
       }
+
+      return Pair.of(var0, 25565);
    }
 
    private static int parseInt(String var0, int var1) {
       try {
          return Integer.parseInt(var0.trim());
