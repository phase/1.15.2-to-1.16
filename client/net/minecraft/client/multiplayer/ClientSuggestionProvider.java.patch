--- net/minecraft/client/multiplayer/ClientSuggestionProvider.java
+++ net/minecraft/client/multiplayer/ClientSuggestionProvider.java
@@ -7,19 +7,23 @@
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Collections;
 import java.util.Iterator;
 import java.util.Locale;
+import java.util.Set;
 import java.util.concurrent.CompletableFuture;
 import java.util.stream.Stream;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.player.LocalPlayer;
 import net.minecraft.commands.SharedSuggestionProvider;
 import net.minecraft.core.BlockPos;
+import net.minecraft.core.RegistryAccess;
 import net.minecraft.network.protocol.Packet;
 import net.minecraft.network.protocol.game.ServerboundCommandSuggestionPacket;
+import net.minecraft.resources.ResourceKey;
 import net.minecraft.resources.ResourceLocation;
+import net.minecraft.world.level.Level;
 import net.minecraft.world.phys.BlockHitResult;
 import net.minecraft.world.phys.EntityHitResult;
 import net.minecraft.world.phys.HitResult;
 import net.minecraft.world.phys.Vec3;
 
@@ -104,10 +108,18 @@
       } else {
          return SharedSuggestionProvider.super.getAbsoluteCoordinates();
       }
    }
 
+   public Set<ResourceKey<Level>> levels() {
+      return this.connection.levels();
+   }
+
+   public RegistryAccess registryAccess() {
+      return this.connection.registryAccess();
+   }
+
    public void completeCustomSuggestions(int var1, Suggestions var2) {
       if (var1 == this.pendingSuggestionsId) {
          this.pendingSuggestionsFuture.complete(var2);
          this.pendingSuggestionsFuture = null;
          this.pendingSuggestionsId = -1;
