--- net/minecraft/client/renderer/blockentity/PistonHeadRenderer.java
+++ net/minecraft/client/renderer/blockentity/PistonHeadRenderer.java
@@ -32,15 +32,15 @@
          BlockState var9 = var1.getMovedState();
          if (!var9.isAir() && var1.getProgress(var2) < 1.0F) {
             ModelBlockRenderer.enableCaching();
             var3.pushPose();
             var3.translate((double)var1.getXOff(var2), (double)var1.getYOff(var2), (double)var1.getZOff(var2));
-            if (var9.getBlock() == Blocks.PISTON_HEAD && var1.getProgress(var2) <= 4.0F) {
-               var9 = (BlockState)var9.setValue(PistonHeadBlock.SHORT, true);
+            if (var9.is(Blocks.PISTON_HEAD) && var1.getProgress(var2) <= 4.0F) {
+               var9 = (BlockState)var9.setValue(PistonHeadBlock.SHORT, var1.getProgress(var2) <= 0.5F);
                this.renderBlock(var8, var9, var3, var4, var7, false, var6);
             } else if (var1.isSourcePiston() && !var1.isExtending()) {
-               PistonType var10 = var9.getBlock() == Blocks.STICKY_PISTON ? PistonType.STICKY : PistonType.DEFAULT;
+               PistonType var10 = var9.is(Blocks.STICKY_PISTON) ? PistonType.STICKY : PistonType.DEFAULT;
                BlockState var11 = (BlockState)((BlockState)Blocks.PISTON_HEAD.defaultBlockState().setValue(PistonHeadBlock.TYPE, var10)).setValue(PistonHeadBlock.FACING, var9.getValue(PistonBaseBlock.FACING));
                var11 = (BlockState)var11.setValue(PistonHeadBlock.SHORT, var1.getProgress(var2) >= 0.5F);
                this.renderBlock(var8, var11, var3, var4, var7, false, var6);
                BlockPos var12 = var8.relative(var1.getMovementDirection());
                var3.popPose();
@@ -56,10 +56,10 @@
          }
       }
    }
 
    private void renderBlock(BlockPos var1, BlockState var2, PoseStack var3, MultiBufferSource var4, Level var5, boolean var6, int var7) {
-      RenderType var8 = ItemBlockRenderTypes.getChunkRenderType(var2);
+      RenderType var8 = ItemBlockRenderTypes.getMovingBlockRenderType(var2);
       VertexConsumer var9 = var4.getBuffer(var8);
       this.blockRenderer.getModelRenderer().tesselateBlock(var5, this.blockRenderer.getBlockModel(var2), var2, var1, var3, var9, var6, new Random(), var2.getSeed(var1), var7);
    }
 }
