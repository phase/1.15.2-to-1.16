--- net/minecraft/client/renderer/entity/ItemRenderer.java
+++ net/minecraft/client/renderer/entity/ItemRenderer.java
@@ -10,27 +10,26 @@
 import com.mojang.blaze3d.vertex.Tesselator;
 import com.mojang.blaze3d.vertex.VertexConsumer;
 import com.mojang.blaze3d.vertex.VertexMultiConsumer;
 import java.util.Iterator;
 import java.util.List;
-import java.util.Objects;
 import java.util.Random;
 import java.util.Set;
 import javax.annotation.Nullable;
 import net.minecraft.CrashReport;
 import net.minecraft.CrashReportCategory;
 import net.minecraft.ReportedException;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.color.item.ItemColors;
 import net.minecraft.client.gui.Font;
+import net.minecraft.client.multiplayer.ClientLevel;
 import net.minecraft.client.player.LocalPlayer;
 import net.minecraft.client.renderer.BlockEntityWithoutLevelRenderer;
 import net.minecraft.client.renderer.ItemBlockRenderTypes;
 import net.minecraft.client.renderer.ItemModelShaper;
 import net.minecraft.client.renderer.MultiBufferSource;
 import net.minecraft.client.renderer.RenderType;
-import net.minecraft.client.renderer.Sheets;
 import net.minecraft.client.renderer.block.model.BakedQuad;
 import net.minecraft.client.renderer.block.model.ItemTransforms;
 import net.minecraft.client.renderer.texture.OverlayTexture;
 import net.minecraft.client.renderer.texture.TextureAtlas;
 import net.minecraft.client.renderer.texture.TextureManager;
@@ -103,28 +102,25 @@
          }
 
          var8.getTransforms().getTransform(var2).apply(var3, var4);
          var4.translate(-0.5D, -0.5D, -0.5D);
          if (!var8.isCustomRenderer() && (var1.getItem() != Items.TRIDENT || var10)) {
-            RenderType var11 = ItemBlockRenderTypes.getRenderType(var1);
-            RenderType var12;
-            if (var9 && Objects.equals(var11, Sheets.translucentBlockSheet())) {
-               var12 = Sheets.translucentCullBlockSheet();
-            } else {
-               var12 = var11;
-            }
-
-            VertexConsumer var13 = getFoilBuffer(var5, var12, true, var1.hasFoil());
-            this.renderModelLists(var8, var1, var6, var7, var4, var13);
+            RenderType var11 = ItemBlockRenderTypes.getRenderType(var1, var2 != ItemTransforms.TransformType.GROUND);
+            VertexConsumer var12 = getFoilBuffer(var5, var11, true, var1.hasFoil());
+            this.renderModelLists(var8, var1, var6, var7, var4, var12);
          } else {
             BlockEntityWithoutLevelRenderer.instance.renderByItem(var1, var4, var5, var6, var7);
          }
 
          var4.popPose();
       }
    }
 
+   public static VertexConsumer getArmorFoilBuffer(MultiBufferSource var0, RenderType var1, boolean var2, boolean var3) {
+      return var3 ? VertexMultiConsumer.create(var0.getBuffer(var2 ? RenderType.armorGlint() : RenderType.armorEntityGlint()), var0.getBuffer(var1)) : var0.getBuffer(var1);
+   }
+
    public static VertexConsumer getFoilBuffer(MultiBufferSource var0, RenderType var1, boolean var2, boolean var3) {
       return var3 ? VertexMultiConsumer.create(var0.getBuffer(var2 ? RenderType.glint() : RenderType.entityGlint()), var0.getBuffer(var1)) : var0.getBuffer(var1);
    }
 
    private void renderQuadList(PoseStack var1, VertexConsumer var2, List<BakedQuad> var3, ItemStack var4, int var5, int var6) {
@@ -154,18 +150,15 @@
          var4 = this.itemModelShaper.getModelManager().getModel(new ModelResourceLocation("minecraft:trident_in_hand#inventory"));
       } else {
          var4 = this.itemModelShaper.getItemModel(var1);
       }
 
-      return !var5.hasProperties() ? var4 : this.resolveOverrides(var4, var1, var2, var3);
+      ClientLevel var6 = var2 instanceof ClientLevel ? (ClientLevel)var2 : null;
+      BakedModel var7 = var4.getOverrides().resolve(var4, var1, var6, var3);
+      return var7 == null ? this.itemModelShaper.getModelManager().getMissingModel() : var7;
    }
 
-   private BakedModel resolveOverrides(BakedModel var1, ItemStack var2, @Nullable Level var3, @Nullable LivingEntity var4) {
-      BakedModel var5 = var1.getOverrides().resolve(var1, var2, var3, var4);
-      return var5 == null ? this.itemModelShaper.getModelManager().getMissingModel() : var5;
-   }
-
    public void renderStatic(ItemStack var1, ItemTransforms.TransformType var2, int var3, int var4, PoseStack var5, MultiBufferSource var6) {
       this.renderStatic((LivingEntity)null, var1, var2, false, var5, var6, (Level)null, var3, var4);
    }
 
    public void renderStatic(@Nullable LivingEntity var1, ItemStack var2, ItemTransforms.TransformType var3, boolean var4, PoseStack var5, MultiBufferSource var6, @Nullable Level var7, int var8, int var9) {
@@ -211,14 +204,22 @@
       RenderSystem.disableRescaleNormal();
       RenderSystem.popMatrix();
    }
 
    public void renderAndDecorateItem(ItemStack var1, int var2, int var3) {
-      this.renderAndDecorateItem(Minecraft.getInstance().player, var1, var2, var3);
+      this.tryRenderGuiItem(Minecraft.getInstance().player, var1, var2, var3);
    }
 
-   public void renderAndDecorateItem(@Nullable LivingEntity var1, ItemStack var2, int var3, int var4) {
+   public void renderAndDecorateFakeItem(ItemStack var1, int var2, int var3) {
+      this.tryRenderGuiItem((LivingEntity)null, var1, var2, var3);
+   }
+
+   public void renderAndDecorateItem(LivingEntity var1, ItemStack var2, int var3, int var4) {
+      this.tryRenderGuiItem(var1, var2, var3, var4);
+   }
+
+   private void tryRenderGuiItem(@Nullable LivingEntity var1, ItemStack var2, int var3, int var4) {
       if (!var2.isEmpty()) {
          this.blitOffset += 50.0F;
 
          try {
             this.renderGuiItem(var2, var3, var4, this.getModel(var2, (Level)null, var1));
@@ -253,11 +254,11 @@
          PoseStack var6 = new PoseStack();
          if (var2.getCount() != 1 || var5 != null) {
             String var7 = var5 == null ? String.valueOf(var2.getCount()) : var5;
             var6.translate(0.0D, 0.0D, (double)(this.blitOffset + 200.0F));
             MultiBufferSource.BufferSource var8 = MultiBufferSource.immediate(Tesselator.getInstance().getBuilder());
-            var1.drawInBatch(var7, (float)(var3 + 19 - 2 - var1.width(var7)), (float)(var4 + 6 + 3), 16777215, true, var6.last().pose(), var8, false, 0, 15728880);
+            var1.drawInBatch((String)var7, (float)(var3 + 19 - 2 - var1.width(var7)), (float)(var4 + 6 + 3), 16777215, true, var6.last().pose(), var8, false, 0, 15728880);
             var8.endBatch();
          }
 
          if (var2.isDamaged()) {
             RenderSystem.disableDepthTest();
