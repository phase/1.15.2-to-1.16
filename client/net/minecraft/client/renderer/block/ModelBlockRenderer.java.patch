--- net/minecraft/client/renderer/block/ModelBlockRenderer.java
+++ net/minecraft/client/renderer/block/ModelBlockRenderer.java
@@ -18,11 +18,10 @@
 import net.minecraft.client.renderer.LevelRenderer;
 import net.minecraft.client.renderer.block.model.BakedQuad;
 import net.minecraft.client.resources.model.BakedModel;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
-import net.minecraft.core.Vec3i;
 import net.minecraft.util.Mth;
 import net.minecraft.world.level.BlockAndTintGetter;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.Vec3;
@@ -112,11 +111,11 @@
       Iterator var11 = var6.iterator();
 
       while(var11.hasNext()) {
          BakedQuad var12 = (BakedQuad)var11.next();
          this.calculateShape(var1, var2, var3, var12.getVertices(), var12.getDirection(), var7, var8);
-         var9.calculate(var1, var2, var3, var12.getDirection(), var7, var8);
+         var9.calculate(var1, var2, var3, var12.getDirection(), var7, var8, var12.isShade());
          this.putQuadData(var1, var2, var3, var5, var4.last(), var12, var9.brightness[0], var9.brightness[1], var9.brightness[2], var9.brightness[3], var9.lightmap[0], var9.lightmap[1], var9.lightmap[2], var9.lightmap[3], var10);
       }
 
    }
 
@@ -205,18 +204,22 @@
       }
 
    }
 
    private void renderModelFaceFlat(BlockAndTintGetter var1, BlockState var2, BlockPos var3, int var4, int var5, boolean var6, PoseStack var7, VertexConsumer var8, List<BakedQuad> var9, BitSet var10) {
-      BakedQuad var12;
-      for(Iterator var11 = var9.iterator(); var11.hasNext(); this.putQuadData(var1, var2, var3, var8, var7.last(), var12, 1.0F, 1.0F, 1.0F, 1.0F, var4, var4, var4, var4, var5)) {
-         var12 = (BakedQuad)var11.next();
+      Iterator var11 = var9.iterator();
+
+      while(var11.hasNext()) {
+         BakedQuad var12 = (BakedQuad)var11.next();
          if (var6) {
             this.calculateShape(var1, var2, var3, var12.getVertices(), var12.getDirection(), (float[])null, var10);
             BlockPos var13 = var10.get(0) ? var3.relative(var12.getDirection()) : var3;
             var4 = LevelRenderer.getLightColor(var1, var2, var13);
          }
+
+         float var14 = var1.getShade(var12.getDirection(), var12.isShade());
+         this.putQuadData(var1, var2, var3, var8, var7.last(), var12, var14, var14, var14, var14, var4, var4, var4, var4, var5);
       }
 
    }
 
    public void renderModel(PoseStack.Pose var1, VertexConsumer var2, @Nullable BlockState var3, BakedModel var4, float var5, float var6, float var7, int var8, int var9) {
@@ -326,149 +329,156 @@
       private final int[] lightmap = new int[4];
 
       public AmbientOcclusionFace() {
       }
 
-      public void calculate(BlockAndTintGetter var1, BlockState var2, BlockPos var3, Direction var4, float[] var5, BitSet var6) {
-         BlockPos var7 = var6.get(0) ? var3.relative(var4) : var3;
-         ModelBlockRenderer.AdjacencyInfo var8 = ModelBlockRenderer.AdjacencyInfo.fromFacing(var4);
-         BlockPos.MutableBlockPos var9 = new BlockPos.MutableBlockPos();
-         ModelBlockRenderer.Cache var10 = (ModelBlockRenderer.Cache)ModelBlockRenderer.CACHE.get();
-         var9.set((Vec3i)var7).move(var8.corners[0]);
-         BlockState var11 = var1.getBlockState(var9);
-         int var12 = var10.getLightColor(var11, var1, var9);
-         float var13 = var10.getShadeBrightness(var11, var1, var9);
-         var9.set((Vec3i)var7).move(var8.corners[1]);
-         BlockState var14 = var1.getBlockState(var9);
-         int var15 = var10.getLightColor(var14, var1, var9);
-         float var16 = var10.getShadeBrightness(var14, var1, var9);
-         var9.set((Vec3i)var7).move(var8.corners[2]);
-         BlockState var17 = var1.getBlockState(var9);
-         int var18 = var10.getLightColor(var17, var1, var9);
-         float var19 = var10.getShadeBrightness(var17, var1, var9);
-         var9.set((Vec3i)var7).move(var8.corners[3]);
-         BlockState var20 = var1.getBlockState(var9);
-         int var21 = var10.getLightColor(var20, var1, var9);
-         float var22 = var10.getShadeBrightness(var20, var1, var9);
-         var9.set((Vec3i)var7).move(var8.corners[0]).move(var4);
-         boolean var23 = var1.getBlockState(var9).getLightBlock(var1, var9) == 0;
-         var9.set((Vec3i)var7).move(var8.corners[1]).move(var4);
-         boolean var24 = var1.getBlockState(var9).getLightBlock(var1, var9) == 0;
-         var9.set((Vec3i)var7).move(var8.corners[2]).move(var4);
-         boolean var25 = var1.getBlockState(var9).getLightBlock(var1, var9) == 0;
-         var9.set((Vec3i)var7).move(var8.corners[3]).move(var4);
-         boolean var26 = var1.getBlockState(var9).getLightBlock(var1, var9) == 0;
-         float var27;
-         int var31;
-         BlockState var35;
-         if (!var25 && !var23) {
-            var27 = var13;
-            var31 = var12;
-         } else {
-            var9.set((Vec3i)var7).move(var8.corners[0]).move(var8.corners[2]);
-            var35 = var1.getBlockState(var9);
-            var27 = var10.getShadeBrightness(var35, var1, var9);
-            var31 = var10.getLightColor(var35, var1, var9);
-         }
-
+      public void calculate(BlockAndTintGetter var1, BlockState var2, BlockPos var3, Direction var4, float[] var5, BitSet var6, boolean var7) {
+         BlockPos var8 = var6.get(0) ? var3.relative(var4) : var3;
+         ModelBlockRenderer.AdjacencyInfo var9 = ModelBlockRenderer.AdjacencyInfo.fromFacing(var4);
+         BlockPos.MutableBlockPos var10 = new BlockPos.MutableBlockPos();
+         ModelBlockRenderer.Cache var11 = (ModelBlockRenderer.Cache)ModelBlockRenderer.CACHE.get();
+         var10.setWithOffset(var8, var9.corners[0]);
+         BlockState var12 = var1.getBlockState(var10);
+         int var13 = var11.getLightColor(var12, var1, var10);
+         float var14 = var11.getShadeBrightness(var12, var1, var10);
+         var10.setWithOffset(var8, var9.corners[1]);
+         BlockState var15 = var1.getBlockState(var10);
+         int var16 = var11.getLightColor(var15, var1, var10);
+         float var17 = var11.getShadeBrightness(var15, var1, var10);
+         var10.setWithOffset(var8, var9.corners[2]);
+         BlockState var18 = var1.getBlockState(var10);
+         int var19 = var11.getLightColor(var18, var1, var10);
+         float var20 = var11.getShadeBrightness(var18, var1, var10);
+         var10.setWithOffset(var8, var9.corners[3]);
+         BlockState var21 = var1.getBlockState(var10);
+         int var22 = var11.getLightColor(var21, var1, var10);
+         float var23 = var11.getShadeBrightness(var21, var1, var10);
+         var10.setWithOffset(var8, var9.corners[0]).move(var4);
+         boolean var24 = var1.getBlockState(var10).getLightBlock(var1, var10) == 0;
+         var10.setWithOffset(var8, var9.corners[1]).move(var4);
+         boolean var25 = var1.getBlockState(var10).getLightBlock(var1, var10) == 0;
+         var10.setWithOffset(var8, var9.corners[2]).move(var4);
+         boolean var26 = var1.getBlockState(var10).getLightBlock(var1, var10) == 0;
+         var10.setWithOffset(var8, var9.corners[3]).move(var4);
+         boolean var27 = var1.getBlockState(var10).getLightBlock(var1, var10) == 0;
          float var28;
          int var32;
-         if (!var26 && !var23) {
-            var28 = var13;
-            var32 = var12;
+         BlockState var36;
+         if (!var26 && !var24) {
+            var28 = var14;
+            var32 = var13;
          } else {
-            var9.set((Vec3i)var7).move(var8.corners[0]).move(var8.corners[3]);
-            var35 = var1.getBlockState(var9);
-            var28 = var10.getShadeBrightness(var35, var1, var9);
-            var32 = var10.getLightColor(var35, var1, var9);
+            var10.setWithOffset(var8, var9.corners[0]).move(var9.corners[2]);
+            var36 = var1.getBlockState(var10);
+            var28 = var11.getShadeBrightness(var36, var1, var10);
+            var32 = var11.getLightColor(var36, var1, var10);
          }
 
          float var29;
          int var33;
-         if (!var25 && !var24) {
-            var29 = var13;
-            var33 = var12;
+         if (!var27 && !var24) {
+            var29 = var14;
+            var33 = var13;
          } else {
-            var9.set((Vec3i)var7).move(var8.corners[1]).move(var8.corners[2]);
-            var35 = var1.getBlockState(var9);
-            var29 = var10.getShadeBrightness(var35, var1, var9);
-            var33 = var10.getLightColor(var35, var1, var9);
+            var10.setWithOffset(var8, var9.corners[0]).move(var9.corners[3]);
+            var36 = var1.getBlockState(var10);
+            var29 = var11.getShadeBrightness(var36, var1, var10);
+            var33 = var11.getLightColor(var36, var1, var10);
          }
 
          float var30;
          int var34;
-         if (!var26 && !var24) {
-            var30 = var13;
-            var34 = var12;
+         if (!var26 && !var25) {
+            var30 = var14;
+            var34 = var13;
          } else {
-            var9.set((Vec3i)var7).move(var8.corners[1]).move(var8.corners[3]);
-            var35 = var1.getBlockState(var9);
-            var30 = var10.getShadeBrightness(var35, var1, var9);
-            var34 = var10.getLightColor(var35, var1, var9);
+            var10.setWithOffset(var8, var9.corners[1]).move(var9.corners[2]);
+            var36 = var1.getBlockState(var10);
+            var30 = var11.getShadeBrightness(var36, var1, var10);
+            var34 = var11.getLightColor(var36, var1, var10);
          }
 
-         int var63 = var10.getLightColor(var2, var1, var3);
-         var9.set((Vec3i)var3).move(var4);
-         BlockState var36 = var1.getBlockState(var9);
-         if (var6.get(0) || !var36.isSolidRender(var1, var9)) {
-            var63 = var10.getLightColor(var36, var1, var9);
+         float var31;
+         int var35;
+         if (!var27 && !var25) {
+            var31 = var14;
+            var35 = var13;
+         } else {
+            var10.setWithOffset(var8, var9.corners[1]).move(var9.corners[3]);
+            var36 = var1.getBlockState(var10);
+            var31 = var11.getShadeBrightness(var36, var1, var10);
+            var35 = var11.getLightColor(var36, var1, var10);
          }
 
-         float var37 = var6.get(0) ? var10.getShadeBrightness(var1.getBlockState(var7), var1, var7) : var10.getShadeBrightness(var1.getBlockState(var3), var1, var3);
-         ModelBlockRenderer.AmbientVertexRemap var38 = ModelBlockRenderer.AmbientVertexRemap.fromFacing(var4);
-         float var39;
+         int var64 = var11.getLightColor(var2, var1, var3);
+         var10.setWithOffset(var3, var4);
+         BlockState var37 = var1.getBlockState(var10);
+         if (var6.get(0) || !var37.isSolidRender(var1, var10)) {
+            var64 = var11.getLightColor(var37, var1, var10);
+         }
+
+         float var38 = var6.get(0) ? var11.getShadeBrightness(var1.getBlockState(var8), var1, var8) : var11.getShadeBrightness(var1.getBlockState(var3), var1, var3);
+         ModelBlockRenderer.AmbientVertexRemap var39 = ModelBlockRenderer.AmbientVertexRemap.fromFacing(var4);
          float var40;
          float var41;
          float var42;
-         if (var6.get(1) && var8.doNonCubicWeight) {
-            var39 = (var22 + var13 + var28 + var37) * 0.25F;
-            var40 = (var19 + var13 + var27 + var37) * 0.25F;
-            var41 = (var19 + var16 + var29 + var37) * 0.25F;
-            var42 = (var22 + var16 + var30 + var37) * 0.25F;
-            float var43 = var5[var8.vert0Weights[0].shape] * var5[var8.vert0Weights[1].shape];
-            float var44 = var5[var8.vert0Weights[2].shape] * var5[var8.vert0Weights[3].shape];
-            float var45 = var5[var8.vert0Weights[4].shape] * var5[var8.vert0Weights[5].shape];
-            float var46 = var5[var8.vert0Weights[6].shape] * var5[var8.vert0Weights[7].shape];
-            float var47 = var5[var8.vert1Weights[0].shape] * var5[var8.vert1Weights[1].shape];
-            float var48 = var5[var8.vert1Weights[2].shape] * var5[var8.vert1Weights[3].shape];
-            float var49 = var5[var8.vert1Weights[4].shape] * var5[var8.vert1Weights[5].shape];
-            float var50 = var5[var8.vert1Weights[6].shape] * var5[var8.vert1Weights[7].shape];
-            float var51 = var5[var8.vert2Weights[0].shape] * var5[var8.vert2Weights[1].shape];
-            float var52 = var5[var8.vert2Weights[2].shape] * var5[var8.vert2Weights[3].shape];
-            float var53 = var5[var8.vert2Weights[4].shape] * var5[var8.vert2Weights[5].shape];
-            float var54 = var5[var8.vert2Weights[6].shape] * var5[var8.vert2Weights[7].shape];
-            float var55 = var5[var8.vert3Weights[0].shape] * var5[var8.vert3Weights[1].shape];
-            float var56 = var5[var8.vert3Weights[2].shape] * var5[var8.vert3Weights[3].shape];
-            float var57 = var5[var8.vert3Weights[4].shape] * var5[var8.vert3Weights[5].shape];
-            float var58 = var5[var8.vert3Weights[6].shape] * var5[var8.vert3Weights[7].shape];
-            this.brightness[var38.vert0] = var39 * var43 + var40 * var44 + var41 * var45 + var42 * var46;
-            this.brightness[var38.vert1] = var39 * var47 + var40 * var48 + var41 * var49 + var42 * var50;
-            this.brightness[var38.vert2] = var39 * var51 + var40 * var52 + var41 * var53 + var42 * var54;
-            this.brightness[var38.vert3] = var39 * var55 + var40 * var56 + var41 * var57 + var42 * var58;
-            int var59 = this.blend(var21, var12, var32, var63);
-            int var60 = this.blend(var18, var12, var31, var63);
-            int var61 = this.blend(var18, var15, var33, var63);
-            int var62 = this.blend(var21, var15, var34, var63);
-            this.lightmap[var38.vert0] = this.blend(var59, var60, var61, var62, var43, var44, var45, var46);
-            this.lightmap[var38.vert1] = this.blend(var59, var60, var61, var62, var47, var48, var49, var50);
-            this.lightmap[var38.vert2] = this.blend(var59, var60, var61, var62, var51, var52, var53, var54);
-            this.lightmap[var38.vert3] = this.blend(var59, var60, var61, var62, var55, var56, var57, var58);
+         float var43;
+         if (var6.get(1) && var9.doNonCubicWeight) {
+            var40 = (var23 + var14 + var29 + var38) * 0.25F;
+            var41 = (var20 + var14 + var28 + var38) * 0.25F;
+            var42 = (var20 + var17 + var30 + var38) * 0.25F;
+            var43 = (var23 + var17 + var31 + var38) * 0.25F;
+            float var44 = var5[var9.vert0Weights[0].shape] * var5[var9.vert0Weights[1].shape];
+            float var45 = var5[var9.vert0Weights[2].shape] * var5[var9.vert0Weights[3].shape];
+            float var46 = var5[var9.vert0Weights[4].shape] * var5[var9.vert0Weights[5].shape];
+            float var47 = var5[var9.vert0Weights[6].shape] * var5[var9.vert0Weights[7].shape];
+            float var48 = var5[var9.vert1Weights[0].shape] * var5[var9.vert1Weights[1].shape];
+            float var49 = var5[var9.vert1Weights[2].shape] * var5[var9.vert1Weights[3].shape];
+            float var50 = var5[var9.vert1Weights[4].shape] * var5[var9.vert1Weights[5].shape];
+            float var51 = var5[var9.vert1Weights[6].shape] * var5[var9.vert1Weights[7].shape];
+            float var52 = var5[var9.vert2Weights[0].shape] * var5[var9.vert2Weights[1].shape];
+            float var53 = var5[var9.vert2Weights[2].shape] * var5[var9.vert2Weights[3].shape];
+            float var54 = var5[var9.vert2Weights[4].shape] * var5[var9.vert2Weights[5].shape];
+            float var55 = var5[var9.vert2Weights[6].shape] * var5[var9.vert2Weights[7].shape];
+            float var56 = var5[var9.vert3Weights[0].shape] * var5[var9.vert3Weights[1].shape];
+            float var57 = var5[var9.vert3Weights[2].shape] * var5[var9.vert3Weights[3].shape];
+            float var58 = var5[var9.vert3Weights[4].shape] * var5[var9.vert3Weights[5].shape];
+            float var59 = var5[var9.vert3Weights[6].shape] * var5[var9.vert3Weights[7].shape];
+            this.brightness[var39.vert0] = var40 * var44 + var41 * var45 + var42 * var46 + var43 * var47;
+            this.brightness[var39.vert1] = var40 * var48 + var41 * var49 + var42 * var50 + var43 * var51;
+            this.brightness[var39.vert2] = var40 * var52 + var41 * var53 + var42 * var54 + var43 * var55;
+            this.brightness[var39.vert3] = var40 * var56 + var41 * var57 + var42 * var58 + var43 * var59;
+            int var60 = this.blend(var22, var13, var33, var64);
+            int var61 = this.blend(var19, var13, var32, var64);
+            int var62 = this.blend(var19, var16, var34, var64);
+            int var63 = this.blend(var22, var16, var35, var64);
+            this.lightmap[var39.vert0] = this.blend(var60, var61, var62, var63, var44, var45, var46, var47);
+            this.lightmap[var39.vert1] = this.blend(var60, var61, var62, var63, var48, var49, var50, var51);
+            this.lightmap[var39.vert2] = this.blend(var60, var61, var62, var63, var52, var53, var54, var55);
+            this.lightmap[var39.vert3] = this.blend(var60, var61, var62, var63, var56, var57, var58, var59);
          } else {
-            var39 = (var22 + var13 + var28 + var37) * 0.25F;
-            var40 = (var19 + var13 + var27 + var37) * 0.25F;
-            var41 = (var19 + var16 + var29 + var37) * 0.25F;
-            var42 = (var22 + var16 + var30 + var37) * 0.25F;
-            this.lightmap[var38.vert0] = this.blend(var21, var12, var32, var63);
-            this.lightmap[var38.vert1] = this.blend(var18, var12, var31, var63);
-            this.lightmap[var38.vert2] = this.blend(var18, var15, var33, var63);
-            this.lightmap[var38.vert3] = this.blend(var21, var15, var34, var63);
-            this.brightness[var38.vert0] = var39;
-            this.brightness[var38.vert1] = var40;
-            this.brightness[var38.vert2] = var41;
-            this.brightness[var38.vert3] = var42;
+            var40 = (var23 + var14 + var29 + var38) * 0.25F;
+            var41 = (var20 + var14 + var28 + var38) * 0.25F;
+            var42 = (var20 + var17 + var30 + var38) * 0.25F;
+            var43 = (var23 + var17 + var31 + var38) * 0.25F;
+            this.lightmap[var39.vert0] = this.blend(var22, var13, var33, var64);
+            this.lightmap[var39.vert1] = this.blend(var19, var13, var32, var64);
+            this.lightmap[var39.vert2] = this.blend(var19, var16, var34, var64);
+            this.lightmap[var39.vert3] = this.blend(var22, var16, var35, var64);
+            this.brightness[var39.vert0] = var40;
+            this.brightness[var39.vert1] = var41;
+            this.brightness[var39.vert2] = var42;
+            this.brightness[var39.vert3] = var43;
          }
 
+         var40 = var1.getShade(var4, var7);
+
+         for(int var65 = 0; var65 < this.brightness.length; ++var65) {
+            float[] var10000 = this.brightness;
+            var10000[var65] *= var40;
+         }
+
       }
 
       private int blend(int var1, int var2, int var3, int var4) {
          if (var1 == 0) {
             var1 = var4;
