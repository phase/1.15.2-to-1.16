--- net/minecraft/client/renderer/block/model/ItemOverride.java
+++ net/minecraft/client/renderer/block/model/ItemOverride.java
@@ -10,17 +10,18 @@
 import java.util.Iterator;
 import java.util.LinkedHashMap;
 import java.util.Map;
 import java.util.Map.Entry;
 import javax.annotation.Nullable;
+import net.minecraft.client.multiplayer.ClientLevel;
+import net.minecraft.client.renderer.item.ItemProperties;
+import net.minecraft.client.renderer.item.ItemPropertyFunction;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.util.GsonHelper;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.item.Item;
-import net.minecraft.world.item.ItemPropertyFunction;
 import net.minecraft.world.item.ItemStack;
-import net.minecraft.world.level.Level;
 
 public class ItemOverride {
    private final ResourceLocation model;
    private final Map<ResourceLocation, Float> predicates;
 
@@ -31,11 +32,11 @@
 
    public ResourceLocation getModel() {
       return this.model;
    }
 
-   boolean test(ItemStack var1, @Nullable Level var2, @Nullable LivingEntity var3) {
+   boolean test(ItemStack var1, @Nullable ClientLevel var2, @Nullable LivingEntity var3) {
       Item var4 = var1.getItem();
       Iterator var5 = this.predicates.entrySet().iterator();
 
       Entry var6;
       ItemPropertyFunction var7;
@@ -43,11 +44,11 @@
          if (!var5.hasNext()) {
             return true;
          }
 
          var6 = (Entry)var5.next();
-         var7 = var4.getProperty((ResourceLocation)var6.getKey());
+         var7 = ItemProperties.getProperty(var4, (ResourceLocation)var6.getKey());
       } while(var7 != null && var7.call(var1, var2, var3) >= (Float)var6.getValue());
 
       return false;
    }
 
