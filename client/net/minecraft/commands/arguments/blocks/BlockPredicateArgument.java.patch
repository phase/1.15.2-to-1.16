--- net/minecraft/commands/arguments/blocks/BlockPredicateArgument.java
+++ net/minecraft/commands/arguments/blocks/BlockPredicateArgument.java
@@ -19,12 +19,13 @@
 import net.minecraft.commands.CommandSourceStack;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.nbt.NbtUtils;
 import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.resources.ResourceLocation;
+import net.minecraft.tags.BlockTags;
 import net.minecraft.tags.Tag;
-import net.minecraft.tags.TagManager;
+import net.minecraft.tags.TagContainer;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.entity.BlockEntity;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.pattern.BlockInWorld;
 import net.minecraft.world.level.block.state.properties.Property;
@@ -74,11 +75,11 @@
       try {
          var4.parse(true);
       } catch (CommandSyntaxException var6) {
       }
 
-      return var4.fillSuggestions(var2);
+      return var4.fillSuggestions(var2, BlockTags.getAllTags());
    }
 
    public Collection<String> getExamples() {
       return EXAMPLES;
    }
@@ -141,11 +142,11 @@
          this.nbt = var3;
       }
 
       public boolean test(BlockInWorld var1) {
          BlockState var2 = var1.getState();
-         if (var2.getBlock() != this.state.getBlock()) {
+         if (!var2.is(this.state.getBlock())) {
             return false;
          } else {
             Iterator var3 = this.properties.iterator();
 
             while(var3.hasNext()) {
@@ -164,8 +165,8 @@
          }
       }
    }
 
    public interface Result {
-      Predicate<BlockInWorld> create(TagManager var1) throws CommandSyntaxException;
+      Predicate<BlockInWorld> create(TagContainer var1) throws CommandSyntaxException;
    }
 }
