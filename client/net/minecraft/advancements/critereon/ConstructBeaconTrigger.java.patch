--- net/minecraft/advancements/critereon/ConstructBeaconTrigger.java
+++ net/minecraft/advancements/critereon/ConstructBeaconTrigger.java
@@ -1,9 +1,7 @@
 package net.minecraft.advancements.critereon;
 
-import com.google.gson.JsonDeserializationContext;
-import com.google.gson.JsonElement;
 import com.google.gson.JsonObject;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.world.level.block.entity.BeaconBlockEntity;
 
@@ -15,39 +13,39 @@
 
    public ResourceLocation getId() {
       return ID;
    }
 
-   public ConstructBeaconTrigger.TriggerInstance createInstance(JsonObject var1, JsonDeserializationContext var2) {
-      MinMaxBounds.Ints var3 = MinMaxBounds.Ints.fromJson(var1.get("level"));
-      return new ConstructBeaconTrigger.TriggerInstance(var3);
+   public ConstructBeaconTrigger.TriggerInstance createInstance(JsonObject var1, EntityPredicate.Composite var2, DeserializationContext var3) {
+      MinMaxBounds.Ints var4 = MinMaxBounds.Ints.fromJson(var1.get("level"));
+      return new ConstructBeaconTrigger.TriggerInstance(var2, var4);
    }
 
    public void trigger(ServerPlayer var1, BeaconBlockEntity var2) {
-      this.trigger(var1.getAdvancements(), (var1x) -> {
+      this.trigger(var1, (var1x) -> {
          return var1x.matches(var2);
       });
    }
 
    public static class TriggerInstance extends AbstractCriterionTriggerInstance {
       private final MinMaxBounds.Ints level;
 
-      public TriggerInstance(MinMaxBounds.Ints var1) {
-         super(ConstructBeaconTrigger.ID);
-         this.level = var1;
+      public TriggerInstance(EntityPredicate.Composite var1, MinMaxBounds.Ints var2) {
+         super(ConstructBeaconTrigger.ID, var1);
+         this.level = var2;
       }
 
       public static ConstructBeaconTrigger.TriggerInstance constructedBeacon(MinMaxBounds.Ints var0) {
-         return new ConstructBeaconTrigger.TriggerInstance(var0);
+         return new ConstructBeaconTrigger.TriggerInstance(EntityPredicate.Composite.ANY, var0);
       }
 
       public boolean matches(BeaconBlockEntity var1) {
          return this.level.matches(var1.getLevels());
       }
 
-      public JsonElement serializeToJson() {
-         JsonObject var1 = new JsonObject();
-         var1.add("level", this.level.serializeToJson());
-         return var1;
+      public JsonObject serializeToJson(SerializationContext var1) {
+         JsonObject var2 = super.serializeToJson(var1);
+         var2.add("level", this.level.serializeToJson());
+         return var2;
       }
    }
 }
