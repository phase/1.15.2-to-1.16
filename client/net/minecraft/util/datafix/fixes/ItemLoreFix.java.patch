--- net/minecraft/util/datafix/fixes/ItemLoreFix.java
+++ net/minecraft/util/datafix/fixes/ItemLoreFix.java
@@ -1,16 +1,16 @@
 package net.minecraft.util.datafix.fixes;
 
 import com.mojang.datafixers.DSL;
 import com.mojang.datafixers.DataFix;
 import com.mojang.datafixers.DataFixUtils;
-import com.mojang.datafixers.Dynamic;
 import com.mojang.datafixers.OpticFinder;
 import com.mojang.datafixers.TypeRewriteRule;
 import com.mojang.datafixers.schemas.Schema;
 import com.mojang.datafixers.types.Type;
-import java.util.Optional;
+import com.mojang.serialization.DataResult;
+import com.mojang.serialization.Dynamic;
 import java.util.stream.Stream;
 import net.minecraft.network.chat.Component;
 import net.minecraft.network.chat.TextComponent;
 
 public class ItemLoreFix extends DataFix {
@@ -24,25 +24,25 @@
       return this.fixTypeEverywhereTyped("Item Lore componentize", var1, (var1x) -> {
          return var1x.updateTyped(var2, (var0) -> {
             return var0.update(DSL.remainderFinder(), (var0x) -> {
                return var0x.update("display", (var0) -> {
                   return var0.update("Lore", (var0x) -> {
-                     Optional var10000 = var0x.asStreamOpt().map(ItemLoreFix::fixLoreList);
+                     DataResult var10000 = var0x.asStreamOpt().map(ItemLoreFix::fixLoreList);
                      var0x.getClass();
-                     return (Dynamic)DataFixUtils.orElse(var10000.map(var0x::createList), var0x);
+                     return (Dynamic)DataFixUtils.orElse(var10000.map(var0x::createList).result(), var0x);
                   });
                });
             });
          });
       });
    }
 
    private static <T> Stream<Dynamic<T>> fixLoreList(Stream<Dynamic<T>> var0) {
       return var0.map((var0x) -> {
-         Optional var10000 = var0x.asString().map(ItemLoreFix::fixLoreEntry);
+         DataResult var10000 = var0x.asString().map(ItemLoreFix::fixLoreEntry);
          var0x.getClass();
-         return (Dynamic)DataFixUtils.orElse(var10000.map(var0x::createString), var0x);
+         return (Dynamic)DataFixUtils.orElse(var10000.map(var0x::createString).result(), var0x);
       });
    }
 
    private static String fixLoreEntry(String var0) {
       return Component.Serializer.toJson(new TextComponent(var0));
