--- net/minecraft/world/phys/shapes/DiscreteVoxelShape.java
+++ net/minecraft/world/phys/shapes/DiscreteVoxelShape.java
@@ -51,33 +51,10 @@
 
    public abstract int firstFull(Direction.Axis var1);
 
    public abstract int lastFull(Direction.Axis var1);
 
-   public int firstFull(Direction.Axis var1, int var2, int var3) {
-      int var4 = this.getSize(var1);
-      if (var2 >= 0 && var3 >= 0) {
-         Direction.Axis var5 = AxisCycle.FORWARD.cycle(var1);
-         Direction.Axis var6 = AxisCycle.BACKWARD.cycle(var1);
-         if (var2 < this.getSize(var5) && var3 < this.getSize(var6)) {
-            AxisCycle var7 = AxisCycle.between(Direction.Axis.X, var1);
-
-            for(int var8 = 0; var8 < var4; ++var8) {
-               if (this.isFull(var7, var8, var2, var3)) {
-                  return var8;
-               }
-            }
-
-            return var4;
-         } else {
-            return var4;
-         }
-      } else {
-         return var4;
-      }
-   }
-
    public int lastFull(Direction.Axis var1, int var2, int var3) {
       if (var2 >= 0 && var3 >= 0) {
          Direction.Axis var4 = AxisCycle.FORWARD.cycle(var1);
          Direction.Axis var5 = AxisCycle.BACKWARD.cycle(var1);
          if (var2 < this.getSize(var4) && var3 < this.getSize(var5)) {
