--- net/minecraft/world/level/levelgen/surfacebuilders/FrozenOceanSurfaceBuilder.java
+++ net/minecraft/world/level/levelgen/surfacebuilders/FrozenOceanSurfaceBuilder.java
@@ -1,10 +1,11 @@
 package net.minecraft.world.level.levelgen.surfacebuilders;
 
-import com.mojang.datafixers.Dynamic;
+import com.google.common.collect.ImmutableList;
+import com.mojang.serialization.Codec;
 import java.util.Random;
-import java.util.function.Function;
+import java.util.stream.IntStream;
 import net.minecraft.core.BlockPos;
 import net.minecraft.world.level.biome.Biome;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.chunk.ChunkAccess;
@@ -20,11 +21,11 @@
    private static final BlockState ICE;
    private PerlinSimplexNoise icebergNoise;
    private PerlinSimplexNoise icebergRoofNoise;
    private long seed;
 
-   public FrozenOceanSurfaceBuilder(Function<Dynamic<?>, ? extends SurfaceBuilderBaseConfiguration> var1) {
+   public FrozenOceanSurfaceBuilder(Codec<SurfaceBuilderBaseConfiguration> var1) {
       super(var1);
    }
 
    public void apply(Random var1, ChunkAccess var2, Biome var3, int var4, int var5, int var6, double var7, BlockState var9, BlockState var10, int var11, long var12, SurfaceBuilderBaseConfiguration var14) {
       double var15 = 0.0D;
@@ -72,12 +73,12 @@
          }
 
          BlockState var33 = var2.getBlockState(var19);
          if (var33.isAir()) {
             var28 = -1;
-         } else if (var33.getBlock() != var9.getBlock()) {
-            if (var33.getBlock() == Blocks.PACKED_ICE && var29 <= var30 && var32 > var31) {
+         } else if (!var33.is(var9.getBlock())) {
+            if (var33.is(Blocks.PACKED_ICE) && var29 <= var30 && var32 > var31) {
                var2.setBlockState(var19, SNOW_BLOCK, false);
                ++var29;
             }
          } else if (var28 == -1) {
             if (var36 <= 0) {
@@ -107,24 +108,24 @@
                var2.setBlockState(var19, var35, false);
             }
          } else if (var28 > 0) {
             --var28;
             var2.setBlockState(var19, var35, false);
-            if (var28 == 0 && var35.getBlock() == Blocks.SAND && var36 > 1) {
+            if (var28 == 0 && var35.is(Blocks.SAND) && var36 > 1) {
                var28 = var1.nextInt(4) + Math.max(0, var32 - 63);
-               var35 = var35.getBlock() == Blocks.RED_SAND ? Blocks.RED_SANDSTONE.defaultBlockState() : Blocks.SANDSTONE.defaultBlockState();
+               var35 = var35.is(Blocks.RED_SAND) ? Blocks.RED_SANDSTONE.defaultBlockState() : Blocks.SANDSTONE.defaultBlockState();
             }
          }
       }
 
    }
 
    public void initNoise(long var1) {
       if (this.seed != var1 || this.icebergNoise == null || this.icebergRoofNoise == null) {
          WorldgenRandom var3 = new WorldgenRandom(var1);
-         this.icebergNoise = new PerlinSimplexNoise(var3, 3, 0);
-         this.icebergRoofNoise = new PerlinSimplexNoise(var3, 0, 0);
+         this.icebergNoise = new PerlinSimplexNoise(var3, IntStream.rangeClosed(-3, 0));
+         this.icebergRoofNoise = new PerlinSimplexNoise(var3, ImmutableList.of(0));
       }
 
       this.seed = var1;
    }
 
