--- net/minecraft/world/level/levelgen/surfacebuilders/BadlandsSurfaceBuilder.java
+++ net/minecraft/world/level/levelgen/surfacebuilders/BadlandsSurfaceBuilder.java
@@ -1,11 +1,12 @@
 package net.minecraft.world.level.levelgen.surfacebuilders;
 
-import com.mojang.datafixers.Dynamic;
+import com.google.common.collect.ImmutableList;
+import com.mojang.serialization.Codec;
 import java.util.Arrays;
 import java.util.Random;
-import java.util.function.Function;
+import java.util.stream.IntStream;
 import net.minecraft.core.BlockPos;
 import net.minecraft.world.level.biome.Biome;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
@@ -25,11 +26,11 @@
    protected long seed;
    protected PerlinSimplexNoise pillarNoise;
    protected PerlinSimplexNoise pillarRoofNoise;
    protected PerlinSimplexNoise clayBandsOffsetNoise;
 
-   public BadlandsSurfaceBuilder(Function<Dynamic<?>, ? extends SurfaceBuilderBaseConfiguration> var1) {
+   public BadlandsSurfaceBuilder(Codec<SurfaceBuilderBaseConfiguration> var1) {
       super(var1);
    }
 
    public void apply(Random var1, ChunkAccess var2, Biome var3, int var4, int var5, int var6, double var7, BlockState var9, BlockState var10, int var11, long var12, SurfaceBuilderBaseConfiguration var14) {
       int var15 = var4 & 15;
@@ -47,11 +48,11 @@
          if (var23 < 15) {
             var24.set(var15, var25, var16);
             BlockState var26 = var2.getBlockState(var24);
             if (var26.isAir()) {
                var21 = -1;
-            } else if (var26.getBlock() == var9.getBlock()) {
+            } else if (var26.is(var9.getBlock())) {
                if (var21 == -1) {
                   var22 = false;
                   if (var19 <= 0) {
                      var17 = Blocks.AIR.defaultBlockState();
                      var18 = var9;
@@ -111,22 +112,22 @@
          this.generateBands(var1);
       }
 
       if (this.seed != var1 || this.pillarNoise == null || this.pillarRoofNoise == null) {
          WorldgenRandom var3 = new WorldgenRandom(var1);
-         this.pillarNoise = new PerlinSimplexNoise(var3, 3, 0);
-         this.pillarRoofNoise = new PerlinSimplexNoise(var3, 0, 0);
+         this.pillarNoise = new PerlinSimplexNoise(var3, IntStream.rangeClosed(-3, 0));
+         this.pillarRoofNoise = new PerlinSimplexNoise(var3, ImmutableList.of(0));
       }
 
       this.seed = var1;
    }
 
    protected void generateBands(long var1) {
       this.clayBands = new BlockState[64];
       Arrays.fill(this.clayBands, TERRACOTTA);
       WorldgenRandom var3 = new WorldgenRandom(var1);
-      this.clayBandsOffsetNoise = new PerlinSimplexNoise(var3, 0, 0);
+      this.clayBandsOffsetNoise = new PerlinSimplexNoise(var3, ImmutableList.of(0));
 
       int var4;
       for(var4 = 0; var4 < 64; ++var4) {
          var4 += var3.nextInt(5) + 1;
          if (var4 < 64) {
