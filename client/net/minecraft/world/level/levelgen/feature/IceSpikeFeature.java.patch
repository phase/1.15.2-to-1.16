--- net/minecraft/world/level/levelgen/feature/IceSpikeFeature.java
+++ net/minecraft/world/level/levelgen/feature/IceSpikeFeature.java
@@ -1,31 +1,29 @@
 package net.minecraft.world.level.levelgen.feature;
 
-import com.mojang.datafixers.Dynamic;
+import com.mojang.serialization.Codec;
 import java.util.Random;
-import java.util.function.Function;
 import net.minecraft.core.BlockPos;
 import net.minecraft.util.Mth;
-import net.minecraft.world.level.LevelAccessor;
+import net.minecraft.world.level.WorldGenLevel;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.chunk.ChunkGenerator;
-import net.minecraft.world.level.levelgen.ChunkGeneratorSettings;
 import net.minecraft.world.level.levelgen.feature.configurations.NoneFeatureConfiguration;
 
 public class IceSpikeFeature extends Feature<NoneFeatureConfiguration> {
-   public IceSpikeFeature(Function<Dynamic<?>, ? extends NoneFeatureConfiguration> var1) {
+   public IceSpikeFeature(Codec<NoneFeatureConfiguration> var1) {
       super(var1);
    }
 
-   public boolean place(LevelAccessor var1, ChunkGenerator<? extends ChunkGeneratorSettings> var2, Random var3, BlockPos var4, NoneFeatureConfiguration var5) {
+   public boolean place(WorldGenLevel var1, ChunkGenerator var2, Random var3, BlockPos var4, NoneFeatureConfiguration var5) {
       while(var1.isEmptyBlock(var4) && var4.getY() > 2) {
          var4 = var4.below();
       }
 
-      if (var1.getBlockState(var4).getBlock() != Blocks.SNOW_BLOCK) {
+      if (!var1.getBlockState(var4).is(Blocks.SNOW_BLOCK)) {
          return false;
       } else {
          var4 = var4.above(var3.nextInt(4));
          int var6 = var3.nextInt(4) + 7;
          int var7 = var6 / 4 + var3.nextInt(2);
