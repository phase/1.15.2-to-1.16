--- net/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration.java
+++ net/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration.java
@@ -1,26 +1,22 @@
 package net.minecraft.world.level.levelgen.feature.configurations;
 
-import com.google.common.collect.ImmutableMap;
-import com.mojang.datafixers.Dynamic;
-import com.mojang.datafixers.types.DynamicOps;
+import com.mojang.serialization.Codec;
+import com.mojang.serialization.codecs.RecordCodecBuilder;
 import net.minecraft.world.level.levelgen.feature.ConfiguredFeature;
 
 public class RandomBooleanFeatureConfiguration implements FeatureConfiguration {
+   public static final Codec<RandomBooleanFeatureConfiguration> CODEC = RecordCodecBuilder.create((var0) -> {
+      return var0.group(ConfiguredFeature.CODEC.fieldOf("feature_true").forGetter((var0x) -> {
+         return var0x.featureTrue;
+      }), ConfiguredFeature.CODEC.fieldOf("feature_false").forGetter((var0x) -> {
+         return var0x.featureFalse;
+      })).apply(var0, RandomBooleanFeatureConfiguration::new);
+   });
    public final ConfiguredFeature<?, ?> featureTrue;
    public final ConfiguredFeature<?, ?> featureFalse;
 
    public RandomBooleanFeatureConfiguration(ConfiguredFeature<?, ?> var1, ConfiguredFeature<?, ?> var2) {
       this.featureTrue = var1;
       this.featureFalse = var2;
    }
-
-   public <T> Dynamic<T> serialize(DynamicOps<T> var1) {
-      return new Dynamic(var1, var1.createMap(ImmutableMap.of(var1.createString("feature_true"), this.featureTrue.serialize(var1).getValue(), var1.createString("feature_false"), this.featureFalse.serialize(var1).getValue())));
-   }
-
-   public static <T> RandomBooleanFeatureConfiguration deserialize(Dynamic<T> var0) {
-      ConfiguredFeature var1 = ConfiguredFeature.deserialize(var0.get("feature_true").orElseEmptyMap());
-      ConfiguredFeature var2 = ConfiguredFeature.deserialize(var0.get("feature_false").orElseEmptyMap());
-      return new RandomBooleanFeatureConfiguration(var1, var2);
-   }
 }
