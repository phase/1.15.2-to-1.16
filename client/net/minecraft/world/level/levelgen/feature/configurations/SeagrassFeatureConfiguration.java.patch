--- net/minecraft/world/level/levelgen/feature/configurations/SeagrassFeatureConfiguration.java
+++ net/minecraft/world/level/levelgen/feature/configurations/SeagrassFeatureConfiguration.java
@@ -1,25 +1,21 @@
 package net.minecraft.world.level.levelgen.feature.configurations;
 
-import com.google.common.collect.ImmutableMap;
-import com.mojang.datafixers.Dynamic;
-import com.mojang.datafixers.types.DynamicOps;
+import com.mojang.serialization.Codec;
+import com.mojang.serialization.codecs.RecordCodecBuilder;
 
 public class SeagrassFeatureConfiguration implements FeatureConfiguration {
+   public static final Codec<SeagrassFeatureConfiguration> CODEC = RecordCodecBuilder.create((var0) -> {
+      return var0.group(Codec.INT.fieldOf("count").forGetter((var0x) -> {
+         return var0x.count;
+      }), Codec.DOUBLE.fieldOf("probability").forGetter((var0x) -> {
+         return var0x.tallSeagrassProbability;
+      })).apply(var0, SeagrassFeatureConfiguration::new);
+   });
    public final int count;
    public final double tallSeagrassProbability;
 
    public SeagrassFeatureConfiguration(int var1, double var2) {
       this.count = var1;
       this.tallSeagrassProbability = var2;
    }
-
-   public <T> Dynamic<T> serialize(DynamicOps<T> var1) {
-      return new Dynamic(var1, var1.createMap(ImmutableMap.of(var1.createString("count"), var1.createInt(this.count), var1.createString("tall_seagrass_probability"), var1.createDouble(this.tallSeagrassProbability))));
-   }
-
-   public static <T> SeagrassFeatureConfiguration deserialize(Dynamic<T> var0) {
-      int var1 = var0.get("count").asInt(0);
-      double var2 = var0.get("tall_seagrass_probability").asDouble(0.0D);
-      return new SeagrassFeatureConfiguration(var1, var2);
-   }
 }
