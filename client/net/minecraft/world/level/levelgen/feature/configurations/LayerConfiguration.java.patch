--- net/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration.java
+++ net/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration.java
@@ -1,27 +1,22 @@
 package net.minecraft.world.level.levelgen.feature.configurations;
 
-import com.google.common.collect.ImmutableMap;
-import com.mojang.datafixers.Dynamic;
-import com.mojang.datafixers.types.DynamicOps;
-import net.minecraft.world.level.block.Blocks;
+import com.mojang.serialization.Codec;
+import com.mojang.serialization.codecs.RecordCodecBuilder;
 import net.minecraft.world.level.block.state.BlockState;
 
 public class LayerConfiguration implements FeatureConfiguration {
+   public static final Codec<LayerConfiguration> CODEC = RecordCodecBuilder.create((var0) -> {
+      return var0.group(Codec.intRange(0, 255).fieldOf("height").forGetter((var0x) -> {
+         return var0x.height;
+      }), BlockState.CODEC.fieldOf("state").forGetter((var0x) -> {
+         return var0x.state;
+      })).apply(var0, LayerConfiguration::new);
+   });
    public final int height;
    public final BlockState state;
 
    public LayerConfiguration(int var1, BlockState var2) {
       this.height = var1;
       this.state = var2;
    }
-
-   public <T> Dynamic<T> serialize(DynamicOps<T> var1) {
-      return new Dynamic(var1, var1.createMap(ImmutableMap.of(var1.createString("height"), var1.createInt(this.height), var1.createString("state"), BlockState.serialize(var1, this.state).getValue())));
-   }
-
-   public static <T> LayerConfiguration deserialize(Dynamic<T> var0) {
-      int var1 = var0.get("height").asInt(0);
-      BlockState var2 = (BlockState)var0.get("state").map(BlockState::deserialize).orElse(Blocks.AIR.defaultBlockState());
-      return new LayerConfiguration(var1, var2);
-   }
 }
