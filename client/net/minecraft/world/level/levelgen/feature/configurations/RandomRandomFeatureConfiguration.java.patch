--- net/minecraft/world/level/levelgen/feature/configurations/RandomRandomFeatureConfiguration.java
+++ net/minecraft/world/level/levelgen/feature/configurations/RandomRandomFeatureConfiguration.java
@@ -1,29 +1,23 @@
 package net.minecraft.world.level.levelgen.feature.configurations;
 
-import com.google.common.collect.ImmutableMap;
-import com.mojang.datafixers.Dynamic;
-import com.mojang.datafixers.types.DynamicOps;
+import com.mojang.serialization.Codec;
+import com.mojang.serialization.codecs.RecordCodecBuilder;
 import java.util.List;
 import net.minecraft.world.level.levelgen.feature.ConfiguredFeature;
 
 public class RandomRandomFeatureConfiguration implements FeatureConfiguration {
+   public static final Codec<RandomRandomFeatureConfiguration> CODEC = RecordCodecBuilder.create((var0) -> {
+      return var0.group(ConfiguredFeature.CODEC.listOf().fieldOf("features").forGetter((var0x) -> {
+         return var0x.features;
+      }), Codec.INT.fieldOf("count").withDefault(0).forGetter((var0x) -> {
+         return var0x.count;
+      })).apply(var0, RandomRandomFeatureConfiguration::new);
+   });
    public final List<ConfiguredFeature<?, ?>> features;
    public final int count;
 
    public RandomRandomFeatureConfiguration(List<ConfiguredFeature<?, ?>> var1, int var2) {
       this.features = var1;
       this.count = var2;
    }
-
-   public <T> Dynamic<T> serialize(DynamicOps<T> var1) {
-      return new Dynamic(var1, var1.createMap(ImmutableMap.of(var1.createString("features"), var1.createList(this.features.stream().map((var1x) -> {
-         return var1x.serialize(var1).getValue();
-      })), var1.createString("count"), var1.createInt(this.count))));
-   }
-
-   public static <T> RandomRandomFeatureConfiguration deserialize(Dynamic<T> var0) {
-      List var1 = var0.get("features").asList(ConfiguredFeature::deserialize);
-      int var2 = var0.get("count").asInt(0);
-      return new RandomRandomFeatureConfiguration(var1, var2);
-   }
 }
