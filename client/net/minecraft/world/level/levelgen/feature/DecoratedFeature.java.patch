--- net/minecraft/world/level/levelgen/feature/DecoratedFeature.java
+++ net/minecraft/world/level/levelgen/feature/DecoratedFeature.java
@@ -1,24 +1,23 @@
 package net.minecraft.world.level.levelgen.feature;
 
-import com.mojang.datafixers.Dynamic;
+import com.mojang.serialization.Codec;
 import java.util.Random;
-import java.util.function.Function;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Registry;
-import net.minecraft.world.level.LevelAccessor;
+import net.minecraft.world.level.StructureFeatureManager;
+import net.minecraft.world.level.WorldGenLevel;
 import net.minecraft.world.level.chunk.ChunkGenerator;
-import net.minecraft.world.level.levelgen.ChunkGeneratorSettings;
 import net.minecraft.world.level.levelgen.feature.configurations.DecoratedFeatureConfiguration;
 
 public class DecoratedFeature extends Feature<DecoratedFeatureConfiguration> {
-   public DecoratedFeature(Function<Dynamic<?>, ? extends DecoratedFeatureConfiguration> var1) {
+   public DecoratedFeature(Codec<DecoratedFeatureConfiguration> var1) {
       super(var1);
    }
 
-   public boolean place(LevelAccessor var1, ChunkGenerator<? extends ChunkGeneratorSettings> var2, Random var3, BlockPos var4, DecoratedFeatureConfiguration var5) {
-      return var5.decorator.place(var1, var2, var3, var4, var5.feature);
+   public boolean place(WorldGenLevel var1, StructureFeatureManager var2, ChunkGenerator var3, Random var4, BlockPos var5, DecoratedFeatureConfiguration var6) {
+      return var6.decorator.place(var1, var2, var3, var4, var5, var6.feature);
    }
 
    public String toString() {
       return String.format("< %s [%s] >", this.getClass().getSimpleName(), Registry.FEATURE.getKey(this));
    }
