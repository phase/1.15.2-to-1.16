--- net/minecraft/world/level/levelgen/structure/NetherBridgePieces.java
+++ net/minecraft/world/level/levelgen/structure/NetherBridgePieces.java
@@ -8,11 +8,12 @@
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.level.ChunkPos;
-import net.minecraft.world.level.LevelAccessor;
+import net.minecraft.world.level.StructureFeatureManager;
+import net.minecraft.world.level.WorldGenLevel;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.FenceBlock;
 import net.minecraft.world.level.block.StairBlock;
 import net.minecraft.world.level.block.entity.BlockEntity;
 import net.minecraft.world.level.block.entity.SpawnerBlockEntity;
@@ -86,38 +87,38 @@
       public static NetherBridgePieces.CastleCorridorTBalconyPiece createPiece(List<StructurePiece> var0, int var1, int var2, int var3, Direction var4, int var5) {
          BoundingBox var6 = BoundingBox.orientBox(var1, var2, var3, -3, 0, 0, 9, 7, 9, var4);
          return isOkBox(var6) && StructurePiece.findCollisionPiece(var0, var6) == null ? new NetherBridgePieces.CastleCorridorTBalconyPiece(var5, var6, var4) : null;
       }
 
-      public boolean postProcess(LevelAccessor var1, ChunkGenerator<?> var2, Random var3, BoundingBox var4, ChunkPos var5) {
-         BlockState var6 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
-         BlockState var7 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.EAST, true);
-         this.generateBox(var1, var4, 0, 0, 0, 8, 1, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 0, 8, 5, 8, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 6, 0, 8, 6, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 0, 2, 5, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 6, 2, 0, 8, 5, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 1, 3, 0, 1, 4, 0, var7, var7, false);
-         this.generateBox(var1, var4, 7, 3, 0, 7, 4, 0, var7, var7, false);
-         this.generateBox(var1, var4, 0, 2, 4, 8, 2, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 1, 1, 4, 2, 2, 4, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
-         this.generateBox(var1, var4, 6, 1, 4, 7, 2, 4, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
-         this.generateBox(var1, var4, 1, 3, 8, 7, 3, 8, var7, var7, false);
-         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.EAST, true)).setValue(FenceBlock.SOUTH, true), 0, 3, 8, var4);
-         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.SOUTH, true), 8, 3, 8, var4);
-         this.generateBox(var1, var4, 0, 3, 6, 0, 3, 7, var6, var6, false);
-         this.generateBox(var1, var4, 8, 3, 6, 8, 3, 7, var6, var6, false);
-         this.generateBox(var1, var4, 0, 3, 4, 0, 5, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 8, 3, 4, 8, 5, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 1, 3, 5, 2, 5, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 6, 3, 5, 7, 5, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 1, 4, 5, 1, 5, 5, var7, var7, false);
-         this.generateBox(var1, var4, 7, 4, 5, 7, 5, 5, var7, var7, false);
+      public boolean postProcess(WorldGenLevel var1, StructureFeatureManager var2, ChunkGenerator var3, Random var4, BoundingBox var5, ChunkPos var6, BlockPos var7) {
+         BlockState var8 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
+         BlockState var9 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.EAST, true);
+         this.generateBox(var1, var5, 0, 0, 0, 8, 1, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 0, 8, 5, 8, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 6, 0, 8, 6, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 0, 2, 5, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 6, 2, 0, 8, 5, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 1, 3, 0, 1, 4, 0, var9, var9, false);
+         this.generateBox(var1, var5, 7, 3, 0, 7, 4, 0, var9, var9, false);
+         this.generateBox(var1, var5, 0, 2, 4, 8, 2, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 1, 1, 4, 2, 2, 4, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
+         this.generateBox(var1, var5, 6, 1, 4, 7, 2, 4, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
+         this.generateBox(var1, var5, 1, 3, 8, 7, 3, 8, var9, var9, false);
+         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.EAST, true)).setValue(FenceBlock.SOUTH, true), 0, 3, 8, var5);
+         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.SOUTH, true), 8, 3, 8, var5);
+         this.generateBox(var1, var5, 0, 3, 6, 0, 3, 7, var8, var8, false);
+         this.generateBox(var1, var5, 8, 3, 6, 8, 3, 7, var8, var8, false);
+         this.generateBox(var1, var5, 0, 3, 4, 0, 5, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 8, 3, 4, 8, 5, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 1, 3, 5, 2, 5, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 6, 3, 5, 7, 5, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 1, 4, 5, 1, 5, 5, var9, var9, false);
+         this.generateBox(var1, var5, 7, 4, 5, 7, 5, 5, var9, var9, false);
 
-         for(int var8 = 0; var8 <= 5; ++var8) {
-            for(int var9 = 0; var9 <= 8; ++var9) {
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var9, -1, var8, var4);
+         for(int var10 = 0; var10 <= 5; ++var10) {
+            for(int var11 = 0; var11 <= 8; ++var11) {
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var11, -1, var10, var5);
             }
          }
 
          return true;
       }
@@ -141,36 +142,36 @@
       public static NetherBridgePieces.CastleCorridorStairsPiece createPiece(List<StructurePiece> var0, int var1, int var2, int var3, Direction var4, int var5) {
          BoundingBox var6 = BoundingBox.orientBox(var1, var2, var3, -1, -7, 0, 5, 14, 10, var4);
          return isOkBox(var6) && StructurePiece.findCollisionPiece(var0, var6) == null ? new NetherBridgePieces.CastleCorridorStairsPiece(var5, var6, var4) : null;
       }
 
-      public boolean postProcess(LevelAccessor var1, ChunkGenerator<?> var2, Random var3, BoundingBox var4, ChunkPos var5) {
-         BlockState var6 = (BlockState)Blocks.NETHER_BRICK_STAIRS.defaultBlockState().setValue(StairBlock.FACING, Direction.SOUTH);
-         BlockState var7 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
+      public boolean postProcess(WorldGenLevel var1, StructureFeatureManager var2, ChunkGenerator var3, Random var4, BoundingBox var5, ChunkPos var6, BlockPos var7) {
+         BlockState var8 = (BlockState)Blocks.NETHER_BRICK_STAIRS.defaultBlockState().setValue(StairBlock.FACING, Direction.SOUTH);
+         BlockState var9 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
 
-         for(int var8 = 0; var8 <= 9; ++var8) {
-            int var9 = Math.max(1, 7 - var8);
-            int var10 = Math.min(Math.max(var9 + 5, 14 - var8), 13);
-            int var11 = var8;
-            this.generateBox(var1, var4, 0, 0, var8, 4, var9, var8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-            this.generateBox(var1, var4, 1, var9 + 1, var8, 3, var10 - 1, var8, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
-            if (var8 <= 6) {
-               this.placeBlock(var1, var6, 1, var9 + 1, var8, var4);
-               this.placeBlock(var1, var6, 2, var9 + 1, var8, var4);
-               this.placeBlock(var1, var6, 3, var9 + 1, var8, var4);
+         for(int var10 = 0; var10 <= 9; ++var10) {
+            int var11 = Math.max(1, 7 - var10);
+            int var12 = Math.min(Math.max(var11 + 5, 14 - var10), 13);
+            int var13 = var10;
+            this.generateBox(var1, var5, 0, 0, var10, 4, var11, var10, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+            this.generateBox(var1, var5, 1, var11 + 1, var10, 3, var12 - 1, var10, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
+            if (var10 <= 6) {
+               this.placeBlock(var1, var8, 1, var11 + 1, var10, var5);
+               this.placeBlock(var1, var8, 2, var11 + 1, var10, var5);
+               this.placeBlock(var1, var8, 3, var11 + 1, var10, var5);
             }
 
-            this.generateBox(var1, var4, 0, var10, var8, 4, var10, var8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-            this.generateBox(var1, var4, 0, var9 + 1, var8, 0, var10 - 1, var8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-            this.generateBox(var1, var4, 4, var9 + 1, var8, 4, var10 - 1, var8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-            if ((var8 & 1) == 0) {
-               this.generateBox(var1, var4, 0, var9 + 2, var8, 0, var9 + 3, var8, var7, var7, false);
-               this.generateBox(var1, var4, 4, var9 + 2, var8, 4, var9 + 3, var8, var7, var7, false);
+            this.generateBox(var1, var5, 0, var12, var10, 4, var12, var10, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+            this.generateBox(var1, var5, 0, var11 + 1, var10, 0, var12 - 1, var10, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+            this.generateBox(var1, var5, 4, var11 + 1, var10, 4, var12 - 1, var10, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+            if ((var10 & 1) == 0) {
+               this.generateBox(var1, var5, 0, var11 + 2, var10, 0, var11 + 3, var10, var9, var9, false);
+               this.generateBox(var1, var5, 4, var11 + 2, var10, 4, var11 + 3, var10, var9, var9, false);
             }
 
-            for(int var12 = 0; var12 <= 4; ++var12) {
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var12, -1, var11, var4);
+            for(int var14 = 0; var14 <= 4; ++var14) {
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var14, -1, var13, var5);
             }
          }
 
          return true;
       }
@@ -203,32 +204,32 @@
       public static NetherBridgePieces.CastleSmallCorridorLeftTurnPiece createPiece(List<StructurePiece> var0, Random var1, int var2, int var3, int var4, Direction var5, int var6) {
          BoundingBox var7 = BoundingBox.orientBox(var2, var3, var4, -1, 0, 0, 5, 7, 5, var5);
          return isOkBox(var7) && StructurePiece.findCollisionPiece(var0, var7) == null ? new NetherBridgePieces.CastleSmallCorridorLeftTurnPiece(var6, var1, var7, var5) : null;
       }
 
-      public boolean postProcess(LevelAccessor var1, ChunkGenerator<?> var2, Random var3, BoundingBox var4, ChunkPos var5) {
-         this.generateBox(var1, var4, 0, 0, 0, 4, 1, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 0, 4, 5, 4, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
-         BlockState var6 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.EAST, true);
-         BlockState var7 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
-         this.generateBox(var1, var4, 4, 2, 0, 4, 5, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 4, 3, 1, 4, 4, 1, var7, var7, false);
-         this.generateBox(var1, var4, 4, 3, 3, 4, 4, 3, var7, var7, false);
-         this.generateBox(var1, var4, 0, 2, 0, 0, 5, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 4, 3, 5, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 1, 3, 4, 1, 4, 4, var6, var6, false);
-         this.generateBox(var1, var4, 3, 3, 4, 3, 4, 4, var6, var6, false);
-         if (this.isNeedingChest && var4.isInside(new BlockPos(this.getWorldX(3, 3), this.getWorldY(2), this.getWorldZ(3, 3)))) {
+      public boolean postProcess(WorldGenLevel var1, StructureFeatureManager var2, ChunkGenerator var3, Random var4, BoundingBox var5, ChunkPos var6, BlockPos var7) {
+         this.generateBox(var1, var5, 0, 0, 0, 4, 1, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 0, 4, 5, 4, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
+         BlockState var8 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.EAST, true);
+         BlockState var9 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
+         this.generateBox(var1, var5, 4, 2, 0, 4, 5, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 4, 3, 1, 4, 4, 1, var9, var9, false);
+         this.generateBox(var1, var5, 4, 3, 3, 4, 4, 3, var9, var9, false);
+         this.generateBox(var1, var5, 0, 2, 0, 0, 5, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 4, 3, 5, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 1, 3, 4, 1, 4, 4, var8, var8, false);
+         this.generateBox(var1, var5, 3, 3, 4, 3, 4, 4, var8, var8, false);
+         if (this.isNeedingChest && var5.isInside(new BlockPos(this.getWorldX(3, 3), this.getWorldY(2), this.getWorldZ(3, 3)))) {
             this.isNeedingChest = false;
-            this.createChest(var1, var4, var3, 3, 2, 3, BuiltInLootTables.NETHER_BRIDGE);
+            this.createChest(var1, var5, var4, 3, 2, 3, BuiltInLootTables.NETHER_BRIDGE);
          }
 
-         this.generateBox(var1, var4, 0, 6, 0, 4, 6, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 6, 0, 4, 6, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
 
-         for(int var8 = 0; var8 <= 4; ++var8) {
-            for(int var9 = 0; var9 <= 4; ++var9) {
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var8, -1, var9, var4);
+         for(int var10 = 0; var10 <= 4; ++var10) {
+            for(int var11 = 0; var11 <= 4; ++var11) {
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var10, -1, var11, var5);
             }
          }
 
          return true;
       }
@@ -261,32 +262,32 @@
       public static NetherBridgePieces.CastleSmallCorridorRightTurnPiece createPiece(List<StructurePiece> var0, Random var1, int var2, int var3, int var4, Direction var5, int var6) {
          BoundingBox var7 = BoundingBox.orientBox(var2, var3, var4, -1, 0, 0, 5, 7, 5, var5);
          return isOkBox(var7) && StructurePiece.findCollisionPiece(var0, var7) == null ? new NetherBridgePieces.CastleSmallCorridorRightTurnPiece(var6, var1, var7, var5) : null;
       }
 
-      public boolean postProcess(LevelAccessor var1, ChunkGenerator<?> var2, Random var3, BoundingBox var4, ChunkPos var5) {
-         this.generateBox(var1, var4, 0, 0, 0, 4, 1, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 0, 4, 5, 4, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
-         BlockState var6 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.EAST, true);
-         BlockState var7 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
-         this.generateBox(var1, var4, 0, 2, 0, 0, 5, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 3, 1, 0, 4, 1, var7, var7, false);
-         this.generateBox(var1, var4, 0, 3, 3, 0, 4, 3, var7, var7, false);
-         this.generateBox(var1, var4, 4, 2, 0, 4, 5, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 1, 2, 4, 4, 5, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 1, 3, 4, 1, 4, 4, var6, var6, false);
-         this.generateBox(var1, var4, 3, 3, 4, 3, 4, 4, var6, var6, false);
-         if (this.isNeedingChest && var4.isInside(new BlockPos(this.getWorldX(1, 3), this.getWorldY(2), this.getWorldZ(1, 3)))) {
+      public boolean postProcess(WorldGenLevel var1, StructureFeatureManager var2, ChunkGenerator var3, Random var4, BoundingBox var5, ChunkPos var6, BlockPos var7) {
+         this.generateBox(var1, var5, 0, 0, 0, 4, 1, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 0, 4, 5, 4, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
+         BlockState var8 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.EAST, true);
+         BlockState var9 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
+         this.generateBox(var1, var5, 0, 2, 0, 0, 5, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 3, 1, 0, 4, 1, var9, var9, false);
+         this.generateBox(var1, var5, 0, 3, 3, 0, 4, 3, var9, var9, false);
+         this.generateBox(var1, var5, 4, 2, 0, 4, 5, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 1, 2, 4, 4, 5, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 1, 3, 4, 1, 4, 4, var8, var8, false);
+         this.generateBox(var1, var5, 3, 3, 4, 3, 4, 4, var8, var8, false);
+         if (this.isNeedingChest && var5.isInside(new BlockPos(this.getWorldX(1, 3), this.getWorldY(2), this.getWorldZ(1, 3)))) {
             this.isNeedingChest = false;
-            this.createChest(var1, var4, var3, 1, 2, 3, BuiltInLootTables.NETHER_BRIDGE);
+            this.createChest(var1, var5, var4, 1, 2, 3, BuiltInLootTables.NETHER_BRIDGE);
          }
 
-         this.generateBox(var1, var4, 0, 6, 0, 4, 6, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 6, 0, 4, 6, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
 
-         for(int var8 = 0; var8 <= 4; ++var8) {
-            for(int var9 = 0; var9 <= 4; ++var9) {
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var8, -1, var9, var4);
+         for(int var10 = 0; var10 <= 4; ++var10) {
+            for(int var11 = 0; var11 <= 4; ++var11) {
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var10, -1, var11, var5);
             }
          }
 
          return true;
       }
@@ -312,22 +313,22 @@
       public static NetherBridgePieces.CastleSmallCorridorCrossingPiece createPiece(List<StructurePiece> var0, int var1, int var2, int var3, Direction var4, int var5) {
          BoundingBox var6 = BoundingBox.orientBox(var1, var2, var3, -1, 0, 0, 5, 7, 5, var4);
          return isOkBox(var6) && StructurePiece.findCollisionPiece(var0, var6) == null ? new NetherBridgePieces.CastleSmallCorridorCrossingPiece(var5, var6, var4) : null;
       }
 
-      public boolean postProcess(LevelAccessor var1, ChunkGenerator<?> var2, Random var3, BoundingBox var4, ChunkPos var5) {
-         this.generateBox(var1, var4, 0, 0, 0, 4, 1, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 0, 4, 5, 4, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 0, 0, 5, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 4, 2, 0, 4, 5, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 4, 0, 5, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 4, 2, 4, 4, 5, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 6, 0, 4, 6, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+      public boolean postProcess(WorldGenLevel var1, StructureFeatureManager var2, ChunkGenerator var3, Random var4, BoundingBox var5, ChunkPos var6, BlockPos var7) {
+         this.generateBox(var1, var5, 0, 0, 0, 4, 1, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 0, 4, 5, 4, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 0, 0, 5, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 4, 2, 0, 4, 5, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 4, 0, 5, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 4, 2, 4, 4, 5, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 6, 0, 4, 6, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
 
-         for(int var6 = 0; var6 <= 4; ++var6) {
-            for(int var7 = 0; var7 <= 4; ++var7) {
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var6, -1, var7, var4);
+         for(int var8 = 0; var8 <= 4; ++var8) {
+            for(int var9 = 0; var9 <= 4; ++var9) {
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var8, -1, var9, var5);
             }
          }
 
          return true;
       }
@@ -351,25 +352,25 @@
       public static NetherBridgePieces.CastleSmallCorridorPiece createPiece(List<StructurePiece> var0, int var1, int var2, int var3, Direction var4, int var5) {
          BoundingBox var6 = BoundingBox.orientBox(var1, var2, var3, -1, 0, 0, 5, 7, 5, var4);
          return isOkBox(var6) && StructurePiece.findCollisionPiece(var0, var6) == null ? new NetherBridgePieces.CastleSmallCorridorPiece(var5, var6, var4) : null;
       }
 
-      public boolean postProcess(LevelAccessor var1, ChunkGenerator<?> var2, Random var3, BoundingBox var4, ChunkPos var5) {
-         this.generateBox(var1, var4, 0, 0, 0, 4, 1, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 0, 4, 5, 4, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
-         BlockState var6 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
-         this.generateBox(var1, var4, 0, 2, 0, 0, 5, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 4, 2, 0, 4, 5, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 3, 1, 0, 4, 1, var6, var6, false);
-         this.generateBox(var1, var4, 0, 3, 3, 0, 4, 3, var6, var6, false);
-         this.generateBox(var1, var4, 4, 3, 1, 4, 4, 1, var6, var6, false);
-         this.generateBox(var1, var4, 4, 3, 3, 4, 4, 3, var6, var6, false);
-         this.generateBox(var1, var4, 0, 6, 0, 4, 6, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+      public boolean postProcess(WorldGenLevel var1, StructureFeatureManager var2, ChunkGenerator var3, Random var4, BoundingBox var5, ChunkPos var6, BlockPos var7) {
+         this.generateBox(var1, var5, 0, 0, 0, 4, 1, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 0, 4, 5, 4, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
+         BlockState var8 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
+         this.generateBox(var1, var5, 0, 2, 0, 0, 5, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 4, 2, 0, 4, 5, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 3, 1, 0, 4, 1, var8, var8, false);
+         this.generateBox(var1, var5, 0, 3, 3, 0, 4, 3, var8, var8, false);
+         this.generateBox(var1, var5, 4, 3, 1, 4, 4, 1, var8, var8, false);
+         this.generateBox(var1, var5, 4, 3, 3, 4, 4, 3, var8, var8, false);
+         this.generateBox(var1, var5, 0, 6, 0, 4, 6, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
 
-         for(int var7 = 0; var7 <= 4; ++var7) {
-            for(int var8 = 0; var8 <= 4; ++var8) {
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var7, -1, var8, var4);
+         for(int var9 = 0; var9 <= 4; ++var9) {
+            for(int var10 = 0; var10 <= 4; ++var10) {
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var9, -1, var10, var5);
             }
          }
 
          return true;
       }
@@ -394,123 +395,123 @@
       public static NetherBridgePieces.CastleStalkRoom createPiece(List<StructurePiece> var0, int var1, int var2, int var3, Direction var4, int var5) {
          BoundingBox var6 = BoundingBox.orientBox(var1, var2, var3, -5, -3, 0, 13, 14, 13, var4);
          return isOkBox(var6) && StructurePiece.findCollisionPiece(var0, var6) == null ? new NetherBridgePieces.CastleStalkRoom(var5, var6, var4) : null;
       }
 
-      public boolean postProcess(LevelAccessor var1, ChunkGenerator<?> var2, Random var3, BoundingBox var4, ChunkPos var5) {
-         this.generateBox(var1, var4, 0, 3, 0, 12, 4, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 5, 0, 12, 13, 12, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 5, 0, 1, 12, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 11, 5, 0, 12, 12, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 2, 5, 11, 4, 12, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 8, 5, 11, 10, 12, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 5, 9, 11, 7, 12, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 2, 5, 0, 4, 12, 1, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 8, 5, 0, 10, 12, 1, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 5, 9, 0, 7, 12, 1, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 2, 11, 2, 10, 12, 10, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         BlockState var6 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.EAST, true);
-         BlockState var7 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
-         BlockState var8 = (BlockState)var7.setValue(FenceBlock.WEST, true);
-         BlockState var9 = (BlockState)var7.setValue(FenceBlock.EAST, true);
+      public boolean postProcess(WorldGenLevel var1, StructureFeatureManager var2, ChunkGenerator var3, Random var4, BoundingBox var5, ChunkPos var6, BlockPos var7) {
+         this.generateBox(var1, var5, 0, 3, 0, 12, 4, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 5, 0, 12, 13, 12, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 5, 0, 1, 12, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 11, 5, 0, 12, 12, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 2, 5, 11, 4, 12, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 8, 5, 11, 10, 12, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 5, 9, 11, 7, 12, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 2, 5, 0, 4, 12, 1, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 8, 5, 0, 10, 12, 1, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 5, 9, 0, 7, 12, 1, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 2, 11, 2, 10, 12, 10, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         BlockState var8 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.EAST, true);
+         BlockState var9 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
+         BlockState var10 = (BlockState)var9.setValue(FenceBlock.WEST, true);
+         BlockState var11 = (BlockState)var9.setValue(FenceBlock.EAST, true);
 
-         int var10;
-         for(var10 = 1; var10 <= 11; var10 += 2) {
-            this.generateBox(var1, var4, var10, 10, 0, var10, 11, 0, var6, var6, false);
-            this.generateBox(var1, var4, var10, 10, 12, var10, 11, 12, var6, var6, false);
-            this.generateBox(var1, var4, 0, 10, var10, 0, 11, var10, var7, var7, false);
-            this.generateBox(var1, var4, 12, 10, var10, 12, 11, var10, var7, var7, false);
-            this.placeBlock(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var10, 13, 0, var4);
-            this.placeBlock(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var10, 13, 12, var4);
-            this.placeBlock(var1, Blocks.NETHER_BRICKS.defaultBlockState(), 0, 13, var10, var4);
-            this.placeBlock(var1, Blocks.NETHER_BRICKS.defaultBlockState(), 12, 13, var10, var4);
-            if (var10 != 11) {
-               this.placeBlock(var1, var6, var10 + 1, 13, 0, var4);
-               this.placeBlock(var1, var6, var10 + 1, 13, 12, var4);
-               this.placeBlock(var1, var7, 0, 13, var10 + 1, var4);
-               this.placeBlock(var1, var7, 12, 13, var10 + 1, var4);
+         int var12;
+         for(var12 = 1; var12 <= 11; var12 += 2) {
+            this.generateBox(var1, var5, var12, 10, 0, var12, 11, 0, var8, var8, false);
+            this.generateBox(var1, var5, var12, 10, 12, var12, 11, 12, var8, var8, false);
+            this.generateBox(var1, var5, 0, 10, var12, 0, 11, var12, var9, var9, false);
+            this.generateBox(var1, var5, 12, 10, var12, 12, 11, var12, var9, var9, false);
+            this.placeBlock(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var12, 13, 0, var5);
+            this.placeBlock(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var12, 13, 12, var5);
+            this.placeBlock(var1, Blocks.NETHER_BRICKS.defaultBlockState(), 0, 13, var12, var5);
+            this.placeBlock(var1, Blocks.NETHER_BRICKS.defaultBlockState(), 12, 13, var12, var5);
+            if (var12 != 11) {
+               this.placeBlock(var1, var8, var12 + 1, 13, 0, var5);
+               this.placeBlock(var1, var8, var12 + 1, 13, 12, var5);
+               this.placeBlock(var1, var9, 0, 13, var12 + 1, var5);
+               this.placeBlock(var1, var9, 12, 13, var12 + 1, var5);
             }
          }
 
-         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.EAST, true), 0, 13, 0, var4);
-         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.SOUTH, true)).setValue(FenceBlock.EAST, true), 0, 13, 12, var4);
-         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.SOUTH, true)).setValue(FenceBlock.WEST, true), 12, 13, 12, var4);
-         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.WEST, true), 12, 13, 0, var4);
+         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.EAST, true), 0, 13, 0, var5);
+         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.SOUTH, true)).setValue(FenceBlock.EAST, true), 0, 13, 12, var5);
+         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.SOUTH, true)).setValue(FenceBlock.WEST, true), 12, 13, 12, var5);
+         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.WEST, true), 12, 13, 0, var5);
 
-         for(var10 = 3; var10 <= 9; var10 += 2) {
-            this.generateBox(var1, var4, 1, 7, var10, 1, 8, var10, var8, var8, false);
-            this.generateBox(var1, var4, 11, 7, var10, 11, 8, var10, var9, var9, false);
+         for(var12 = 3; var12 <= 9; var12 += 2) {
+            this.generateBox(var1, var5, 1, 7, var12, 1, 8, var12, var10, var10, false);
+            this.generateBox(var1, var5, 11, 7, var12, 11, 8, var12, var11, var11, false);
          }
 
-         BlockState var15 = (BlockState)Blocks.NETHER_BRICK_STAIRS.defaultBlockState().setValue(StairBlock.FACING, Direction.NORTH);
+         BlockState var17 = (BlockState)Blocks.NETHER_BRICK_STAIRS.defaultBlockState().setValue(StairBlock.FACING, Direction.NORTH);
 
-         int var11;
          int var13;
-         for(var11 = 0; var11 <= 6; ++var11) {
-            int var12 = var11 + 4;
+         int var15;
+         for(var13 = 0; var13 <= 6; ++var13) {
+            int var14 = var13 + 4;
 
-            for(var13 = 5; var13 <= 7; ++var13) {
-               this.placeBlock(var1, var15, var13, 5 + var11, var12, var4);
+            for(var15 = 5; var15 <= 7; ++var15) {
+               this.placeBlock(var1, var17, var15, 5 + var13, var14, var5);
             }
 
-            if (var12 >= 5 && var12 <= 8) {
-               this.generateBox(var1, var4, 5, 5, var12, 7, var11 + 4, var12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-            } else if (var12 >= 9 && var12 <= 10) {
-               this.generateBox(var1, var4, 5, 8, var12, 7, var11 + 4, var12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+            if (var14 >= 5 && var14 <= 8) {
+               this.generateBox(var1, var5, 5, 5, var14, 7, var13 + 4, var14, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+            } else if (var14 >= 9 && var14 <= 10) {
+               this.generateBox(var1, var5, 5, 8, var14, 7, var13 + 4, var14, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
             }
 
-            if (var11 >= 1) {
-               this.generateBox(var1, var4, 5, 6 + var11, var12, 7, 9 + var11, var12, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
+            if (var13 >= 1) {
+               this.generateBox(var1, var5, 5, 6 + var13, var14, 7, 9 + var13, var14, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
             }
          }
 
-         for(var11 = 5; var11 <= 7; ++var11) {
-            this.placeBlock(var1, var15, var11, 12, 11, var4);
+         for(var13 = 5; var13 <= 7; ++var13) {
+            this.placeBlock(var1, var17, var13, 12, 11, var5);
          }
 
-         this.generateBox(var1, var4, 5, 6, 7, 5, 7, 7, var9, var9, false);
-         this.generateBox(var1, var4, 7, 6, 7, 7, 7, 7, var8, var8, false);
-         this.generateBox(var1, var4, 5, 13, 12, 7, 13, 12, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
-         this.generateBox(var1, var4, 2, 5, 2, 3, 5, 3, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 2, 5, 9, 3, 5, 10, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 2, 5, 4, 2, 5, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 9, 5, 2, 10, 5, 3, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 9, 5, 9, 10, 5, 10, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 10, 5, 4, 10, 5, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         BlockState var16 = (BlockState)var15.setValue(StairBlock.FACING, Direction.EAST);
-         BlockState var17 = (BlockState)var15.setValue(StairBlock.FACING, Direction.WEST);
-         this.placeBlock(var1, var17, 4, 5, 2, var4);
-         this.placeBlock(var1, var17, 4, 5, 3, var4);
-         this.placeBlock(var1, var17, 4, 5, 9, var4);
-         this.placeBlock(var1, var17, 4, 5, 10, var4);
-         this.placeBlock(var1, var16, 8, 5, 2, var4);
-         this.placeBlock(var1, var16, 8, 5, 3, var4);
-         this.placeBlock(var1, var16, 8, 5, 9, var4);
-         this.placeBlock(var1, var16, 8, 5, 10, var4);
-         this.generateBox(var1, var4, 3, 4, 4, 4, 4, 8, Blocks.SOUL_SAND.defaultBlockState(), Blocks.SOUL_SAND.defaultBlockState(), false);
-         this.generateBox(var1, var4, 8, 4, 4, 9, 4, 8, Blocks.SOUL_SAND.defaultBlockState(), Blocks.SOUL_SAND.defaultBlockState(), false);
-         this.generateBox(var1, var4, 3, 5, 4, 4, 5, 8, Blocks.NETHER_WART.defaultBlockState(), Blocks.NETHER_WART.defaultBlockState(), false);
-         this.generateBox(var1, var4, 8, 5, 4, 9, 5, 8, Blocks.NETHER_WART.defaultBlockState(), Blocks.NETHER_WART.defaultBlockState(), false);
-         this.generateBox(var1, var4, 4, 2, 0, 8, 2, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 4, 12, 2, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 4, 0, 0, 8, 1, 3, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 4, 0, 9, 8, 1, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 0, 4, 3, 1, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 9, 0, 4, 12, 1, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 5, 6, 7, 5, 7, 7, var11, var11, false);
+         this.generateBox(var1, var5, 7, 6, 7, 7, 7, 7, var10, var10, false);
+         this.generateBox(var1, var5, 5, 13, 12, 7, 13, 12, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
+         this.generateBox(var1, var5, 2, 5, 2, 3, 5, 3, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 2, 5, 9, 3, 5, 10, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 2, 5, 4, 2, 5, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 9, 5, 2, 10, 5, 3, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 9, 5, 9, 10, 5, 10, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 10, 5, 4, 10, 5, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         BlockState var18 = (BlockState)var17.setValue(StairBlock.FACING, Direction.EAST);
+         BlockState var19 = (BlockState)var17.setValue(StairBlock.FACING, Direction.WEST);
+         this.placeBlock(var1, var19, 4, 5, 2, var5);
+         this.placeBlock(var1, var19, 4, 5, 3, var5);
+         this.placeBlock(var1, var19, 4, 5, 9, var5);
+         this.placeBlock(var1, var19, 4, 5, 10, var5);
+         this.placeBlock(var1, var18, 8, 5, 2, var5);
+         this.placeBlock(var1, var18, 8, 5, 3, var5);
+         this.placeBlock(var1, var18, 8, 5, 9, var5);
+         this.placeBlock(var1, var18, 8, 5, 10, var5);
+         this.generateBox(var1, var5, 3, 4, 4, 4, 4, 8, Blocks.SOUL_SAND.defaultBlockState(), Blocks.SOUL_SAND.defaultBlockState(), false);
+         this.generateBox(var1, var5, 8, 4, 4, 9, 4, 8, Blocks.SOUL_SAND.defaultBlockState(), Blocks.SOUL_SAND.defaultBlockState(), false);
+         this.generateBox(var1, var5, 3, 5, 4, 4, 5, 8, Blocks.NETHER_WART.defaultBlockState(), Blocks.NETHER_WART.defaultBlockState(), false);
+         this.generateBox(var1, var5, 8, 5, 4, 9, 5, 8, Blocks.NETHER_WART.defaultBlockState(), Blocks.NETHER_WART.defaultBlockState(), false);
+         this.generateBox(var1, var5, 4, 2, 0, 8, 2, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 4, 12, 2, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 4, 0, 0, 8, 1, 3, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 4, 0, 9, 8, 1, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 0, 4, 3, 1, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 9, 0, 4, 12, 1, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
 
-         int var14;
-         for(var13 = 4; var13 <= 8; ++var13) {
-            for(var14 = 0; var14 <= 2; ++var14) {
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var13, -1, var14, var4);
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var13, -1, 12 - var14, var4);
+         int var16;
+         for(var15 = 4; var15 <= 8; ++var15) {
+            for(var16 = 0; var16 <= 2; ++var16) {
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var15, -1, var16, var5);
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var15, -1, 12 - var16, var5);
             }
          }
 
-         for(var13 = 0; var13 <= 2; ++var13) {
-            for(var14 = 4; var14 <= 8; ++var14) {
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var13, -1, var14, var4);
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), 12 - var13, -1, var14, var4);
+         for(var15 = 0; var15 <= 2; ++var15) {
+            for(var16 = 4; var16 <= 8; ++var16) {
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var15, -1, var16, var5);
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), 12 - var15, -1, var16, var5);
             }
          }
 
          return true;
       }
@@ -534,83 +535,83 @@
       public static NetherBridgePieces.CastleEntrance createPiece(List<StructurePiece> var0, Random var1, int var2, int var3, int var4, Direction var5, int var6) {
          BoundingBox var7 = BoundingBox.orientBox(var2, var3, var4, -5, -3, 0, 13, 14, 13, var5);
          return isOkBox(var7) && StructurePiece.findCollisionPiece(var0, var7) == null ? new NetherBridgePieces.CastleEntrance(var6, var1, var7, var5) : null;
       }
 
-      public boolean postProcess(LevelAccessor var1, ChunkGenerator<?> var2, Random var3, BoundingBox var4, ChunkPos var5) {
-         this.generateBox(var1, var4, 0, 3, 0, 12, 4, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 5, 0, 12, 13, 12, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 5, 0, 1, 12, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 11, 5, 0, 12, 12, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 2, 5, 11, 4, 12, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 8, 5, 11, 10, 12, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 5, 9, 11, 7, 12, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 2, 5, 0, 4, 12, 1, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 8, 5, 0, 10, 12, 1, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 5, 9, 0, 7, 12, 1, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 2, 11, 2, 10, 12, 10, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 5, 8, 0, 7, 8, 0, Blocks.NETHER_BRICK_FENCE.defaultBlockState(), Blocks.NETHER_BRICK_FENCE.defaultBlockState(), false);
-         BlockState var6 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.EAST, true);
-         BlockState var7 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
+      public boolean postProcess(WorldGenLevel var1, StructureFeatureManager var2, ChunkGenerator var3, Random var4, BoundingBox var5, ChunkPos var6, BlockPos var7) {
+         this.generateBox(var1, var5, 0, 3, 0, 12, 4, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 5, 0, 12, 13, 12, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 5, 0, 1, 12, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 11, 5, 0, 12, 12, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 2, 5, 11, 4, 12, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 8, 5, 11, 10, 12, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 5, 9, 11, 7, 12, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 2, 5, 0, 4, 12, 1, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 8, 5, 0, 10, 12, 1, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 5, 9, 0, 7, 12, 1, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 2, 11, 2, 10, 12, 10, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 5, 8, 0, 7, 8, 0, Blocks.NETHER_BRICK_FENCE.defaultBlockState(), Blocks.NETHER_BRICK_FENCE.defaultBlockState(), false);
+         BlockState var8 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.EAST, true);
+         BlockState var9 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
 
-         int var8;
-         for(var8 = 1; var8 <= 11; var8 += 2) {
-            this.generateBox(var1, var4, var8, 10, 0, var8, 11, 0, var6, var6, false);
-            this.generateBox(var1, var4, var8, 10, 12, var8, 11, 12, var6, var6, false);
-            this.generateBox(var1, var4, 0, 10, var8, 0, 11, var8, var7, var7, false);
-            this.generateBox(var1, var4, 12, 10, var8, 12, 11, var8, var7, var7, false);
-            this.placeBlock(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var8, 13, 0, var4);
-            this.placeBlock(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var8, 13, 12, var4);
-            this.placeBlock(var1, Blocks.NETHER_BRICKS.defaultBlockState(), 0, 13, var8, var4);
-            this.placeBlock(var1, Blocks.NETHER_BRICKS.defaultBlockState(), 12, 13, var8, var4);
-            if (var8 != 11) {
-               this.placeBlock(var1, var6, var8 + 1, 13, 0, var4);
-               this.placeBlock(var1, var6, var8 + 1, 13, 12, var4);
-               this.placeBlock(var1, var7, 0, 13, var8 + 1, var4);
-               this.placeBlock(var1, var7, 12, 13, var8 + 1, var4);
+         int var10;
+         for(var10 = 1; var10 <= 11; var10 += 2) {
+            this.generateBox(var1, var5, var10, 10, 0, var10, 11, 0, var8, var8, false);
+            this.generateBox(var1, var5, var10, 10, 12, var10, 11, 12, var8, var8, false);
+            this.generateBox(var1, var5, 0, 10, var10, 0, 11, var10, var9, var9, false);
+            this.generateBox(var1, var5, 12, 10, var10, 12, 11, var10, var9, var9, false);
+            this.placeBlock(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var10, 13, 0, var5);
+            this.placeBlock(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var10, 13, 12, var5);
+            this.placeBlock(var1, Blocks.NETHER_BRICKS.defaultBlockState(), 0, 13, var10, var5);
+            this.placeBlock(var1, Blocks.NETHER_BRICKS.defaultBlockState(), 12, 13, var10, var5);
+            if (var10 != 11) {
+               this.placeBlock(var1, var8, var10 + 1, 13, 0, var5);
+               this.placeBlock(var1, var8, var10 + 1, 13, 12, var5);
+               this.placeBlock(var1, var9, 0, 13, var10 + 1, var5);
+               this.placeBlock(var1, var9, 12, 13, var10 + 1, var5);
             }
          }
 
-         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.EAST, true), 0, 13, 0, var4);
-         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.SOUTH, true)).setValue(FenceBlock.EAST, true), 0, 13, 12, var4);
-         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.SOUTH, true)).setValue(FenceBlock.WEST, true), 12, 13, 12, var4);
-         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.WEST, true), 12, 13, 0, var4);
+         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.EAST, true), 0, 13, 0, var5);
+         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.SOUTH, true)).setValue(FenceBlock.EAST, true), 0, 13, 12, var5);
+         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.SOUTH, true)).setValue(FenceBlock.WEST, true), 12, 13, 12, var5);
+         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.WEST, true), 12, 13, 0, var5);
 
-         for(var8 = 3; var8 <= 9; var8 += 2) {
-            this.generateBox(var1, var4, 1, 7, var8, 1, 8, var8, (BlockState)var7.setValue(FenceBlock.WEST, true), (BlockState)var7.setValue(FenceBlock.WEST, true), false);
-            this.generateBox(var1, var4, 11, 7, var8, 11, 8, var8, (BlockState)var7.setValue(FenceBlock.EAST, true), (BlockState)var7.setValue(FenceBlock.EAST, true), false);
+         for(var10 = 3; var10 <= 9; var10 += 2) {
+            this.generateBox(var1, var5, 1, 7, var10, 1, 8, var10, (BlockState)var9.setValue(FenceBlock.WEST, true), (BlockState)var9.setValue(FenceBlock.WEST, true), false);
+            this.generateBox(var1, var5, 11, 7, var10, 11, 8, var10, (BlockState)var9.setValue(FenceBlock.EAST, true), (BlockState)var9.setValue(FenceBlock.EAST, true), false);
          }
 
-         this.generateBox(var1, var4, 4, 2, 0, 8, 2, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 4, 12, 2, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 4, 0, 0, 8, 1, 3, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 4, 0, 9, 8, 1, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 0, 4, 3, 1, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 9, 0, 4, 12, 1, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 4, 2, 0, 8, 2, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 4, 12, 2, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 4, 0, 0, 8, 1, 3, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 4, 0, 9, 8, 1, 12, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 0, 4, 3, 1, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 9, 0, 4, 12, 1, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
 
-         int var9;
-         for(var8 = 4; var8 <= 8; ++var8) {
-            for(var9 = 0; var9 <= 2; ++var9) {
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var8, -1, var9, var4);
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var8, -1, 12 - var9, var4);
+         int var11;
+         for(var10 = 4; var10 <= 8; ++var10) {
+            for(var11 = 0; var11 <= 2; ++var11) {
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var10, -1, var11, var5);
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var10, -1, 12 - var11, var5);
             }
          }
 
-         for(var8 = 0; var8 <= 2; ++var8) {
-            for(var9 = 4; var9 <= 8; ++var9) {
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var8, -1, var9, var4);
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), 12 - var8, -1, var9, var4);
+         for(var10 = 0; var10 <= 2; ++var10) {
+            for(var11 = 4; var11 <= 8; ++var11) {
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var10, -1, var11, var5);
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), 12 - var10, -1, var11, var5);
             }
          }
 
-         this.generateBox(var1, var4, 5, 5, 5, 7, 5, 7, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 6, 1, 6, 6, 4, 6, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
-         this.placeBlock(var1, Blocks.NETHER_BRICKS.defaultBlockState(), 6, 0, 6, var4);
-         this.placeBlock(var1, Blocks.LAVA.defaultBlockState(), 6, 5, 6, var4);
-         BlockPos var10 = new BlockPos(this.getWorldX(6, 6), this.getWorldY(5), this.getWorldZ(6, 6));
-         if (var4.isInside(var10)) {
-            var1.getLiquidTicks().scheduleTick(var10, Fluids.LAVA, 0);
+         this.generateBox(var1, var5, 5, 5, 5, 7, 5, 7, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 6, 1, 6, 6, 4, 6, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
+         this.placeBlock(var1, Blocks.NETHER_BRICKS.defaultBlockState(), 6, 0, 6, var5);
+         this.placeBlock(var1, Blocks.LAVA.defaultBlockState(), 6, 5, 6, var5);
+         BlockPos var12 = new BlockPos(this.getWorldX(6, 6), this.getWorldY(5), this.getWorldZ(6, 6));
+         if (var5.isInside(var12)) {
+            var1.getLiquidTicks().scheduleTick(var12, Fluids.LAVA, 0);
          }
 
          return true;
       }
    }
@@ -637,55 +638,55 @@
       public static NetherBridgePieces.MonsterThrone createPiece(List<StructurePiece> var0, int var1, int var2, int var3, int var4, Direction var5) {
          BoundingBox var6 = BoundingBox.orientBox(var1, var2, var3, -2, 0, 0, 7, 8, 9, var5);
          return isOkBox(var6) && StructurePiece.findCollisionPiece(var0, var6) == null ? new NetherBridgePieces.MonsterThrone(var4, var6, var5) : null;
       }
 
-      public boolean postProcess(LevelAccessor var1, ChunkGenerator<?> var2, Random var3, BoundingBox var4, ChunkPos var5) {
-         this.generateBox(var1, var4, 0, 2, 0, 6, 7, 7, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
-         this.generateBox(var1, var4, 1, 0, 0, 5, 1, 7, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 1, 2, 1, 5, 2, 7, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 1, 3, 2, 5, 3, 7, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 1, 4, 3, 5, 4, 7, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 1, 2, 0, 1, 4, 2, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 5, 2, 0, 5, 4, 2, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 1, 5, 2, 1, 5, 3, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 5, 5, 2, 5, 5, 3, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 5, 3, 0, 5, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 6, 5, 3, 6, 5, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 1, 5, 8, 5, 5, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         BlockState var6 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.EAST, true);
-         BlockState var7 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
-         this.placeBlock(var1, (BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true), 1, 6, 3, var4);
-         this.placeBlock(var1, (BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.EAST, true), 5, 6, 3, var4);
-         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.EAST, true)).setValue(FenceBlock.NORTH, true), 0, 6, 3, var4);
-         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.NORTH, true), 6, 6, 3, var4);
-         this.generateBox(var1, var4, 0, 6, 4, 0, 6, 7, var7, var7, false);
-         this.generateBox(var1, var4, 6, 6, 4, 6, 6, 7, var7, var7, false);
-         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.EAST, true)).setValue(FenceBlock.SOUTH, true), 0, 6, 8, var4);
-         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.SOUTH, true), 6, 6, 8, var4);
-         this.generateBox(var1, var4, 1, 6, 8, 5, 6, 8, var6, var6, false);
-         this.placeBlock(var1, (BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.EAST, true), 1, 7, 8, var4);
-         this.generateBox(var1, var4, 2, 7, 8, 4, 7, 8, var6, var6, false);
-         this.placeBlock(var1, (BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true), 5, 7, 8, var4);
-         this.placeBlock(var1, (BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.EAST, true), 2, 8, 8, var4);
-         this.placeBlock(var1, var6, 3, 8, 8, var4);
-         this.placeBlock(var1, (BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true), 4, 8, 8, var4);
+      public boolean postProcess(WorldGenLevel var1, StructureFeatureManager var2, ChunkGenerator var3, Random var4, BoundingBox var5, ChunkPos var6, BlockPos var7) {
+         this.generateBox(var1, var5, 0, 2, 0, 6, 7, 7, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
+         this.generateBox(var1, var5, 1, 0, 0, 5, 1, 7, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 1, 2, 1, 5, 2, 7, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 1, 3, 2, 5, 3, 7, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 1, 4, 3, 5, 4, 7, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 1, 2, 0, 1, 4, 2, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 5, 2, 0, 5, 4, 2, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 1, 5, 2, 1, 5, 3, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 5, 5, 2, 5, 5, 3, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 5, 3, 0, 5, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 6, 5, 3, 6, 5, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 1, 5, 8, 5, 5, 8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         BlockState var8 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.EAST, true);
+         BlockState var9 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
+         this.placeBlock(var1, (BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true), 1, 6, 3, var5);
+         this.placeBlock(var1, (BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.EAST, true), 5, 6, 3, var5);
+         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.EAST, true)).setValue(FenceBlock.NORTH, true), 0, 6, 3, var5);
+         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.NORTH, true), 6, 6, 3, var5);
+         this.generateBox(var1, var5, 0, 6, 4, 0, 6, 7, var9, var9, false);
+         this.generateBox(var1, var5, 6, 6, 4, 6, 6, 7, var9, var9, false);
+         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.EAST, true)).setValue(FenceBlock.SOUTH, true), 0, 6, 8, var5);
+         this.placeBlock(var1, (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.SOUTH, true), 6, 6, 8, var5);
+         this.generateBox(var1, var5, 1, 6, 8, 5, 6, 8, var8, var8, false);
+         this.placeBlock(var1, (BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.EAST, true), 1, 7, 8, var5);
+         this.generateBox(var1, var5, 2, 7, 8, 4, 7, 8, var8, var8, false);
+         this.placeBlock(var1, (BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true), 5, 7, 8, var5);
+         this.placeBlock(var1, (BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.EAST, true), 2, 8, 8, var5);
+         this.placeBlock(var1, var8, 3, 8, 8, var5);
+         this.placeBlock(var1, (BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true), 4, 8, 8, var5);
          if (!this.hasPlacedSpawner) {
-            BlockPos var8 = new BlockPos(this.getWorldX(3, 5), this.getWorldY(5), this.getWorldZ(3, 5));
-            if (var4.isInside(var8)) {
+            BlockPos var10 = new BlockPos(this.getWorldX(3, 5), this.getWorldY(5), this.getWorldZ(3, 5));
+            if (var5.isInside(var10)) {
                this.hasPlacedSpawner = true;
-               var1.setBlock(var8, Blocks.SPAWNER.defaultBlockState(), 2);
-               BlockEntity var9 = var1.getBlockEntity(var8);
-               if (var9 instanceof SpawnerBlockEntity) {
-                  ((SpawnerBlockEntity)var9).getSpawner().setEntityId(EntityType.BLAZE);
+               var1.setBlock(var10, Blocks.SPAWNER.defaultBlockState(), 2);
+               BlockEntity var11 = var1.getBlockEntity(var10);
+               if (var11 instanceof SpawnerBlockEntity) {
+                  ((SpawnerBlockEntity)var11).getSpawner().setEntityId(EntityType.BLAZE);
                }
             }
          }
 
-         for(int var10 = 0; var10 <= 6; ++var10) {
-            for(int var11 = 0; var11 <= 6; ++var11) {
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var10, -1, var11, var4);
+         for(int var12 = 0; var12 <= 6; ++var12) {
+            for(int var13 = 0; var13 <= 6; ++var13) {
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var12, -1, var13, var5);
             }
          }
 
          return true;
       }
@@ -709,36 +710,36 @@
       public static NetherBridgePieces.StairsRoom createPiece(List<StructurePiece> var0, int var1, int var2, int var3, int var4, Direction var5) {
          BoundingBox var6 = BoundingBox.orientBox(var1, var2, var3, -2, 0, 0, 7, 11, 7, var5);
          return isOkBox(var6) && StructurePiece.findCollisionPiece(var0, var6) == null ? new NetherBridgePieces.StairsRoom(var4, var6, var5) : null;
       }
 
-      public boolean postProcess(LevelAccessor var1, ChunkGenerator<?> var2, Random var3, BoundingBox var4, ChunkPos var5) {
-         this.generateBox(var1, var4, 0, 0, 0, 6, 1, 6, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 0, 6, 10, 6, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 0, 1, 8, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 5, 2, 0, 6, 8, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 1, 0, 8, 6, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 6, 2, 1, 6, 8, 6, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 1, 2, 6, 5, 8, 6, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         BlockState var6 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.EAST, true);
-         BlockState var7 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
-         this.generateBox(var1, var4, 0, 3, 2, 0, 5, 4, var7, var7, false);
-         this.generateBox(var1, var4, 6, 3, 2, 6, 5, 2, var7, var7, false);
-         this.generateBox(var1, var4, 6, 3, 4, 6, 5, 4, var7, var7, false);
-         this.placeBlock(var1, Blocks.NETHER_BRICKS.defaultBlockState(), 5, 2, 5, var4);
-         this.generateBox(var1, var4, 4, 2, 5, 4, 3, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 3, 2, 5, 3, 4, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 2, 2, 5, 2, 5, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 1, 2, 5, 1, 6, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 1, 7, 1, 5, 7, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 6, 8, 2, 6, 8, 4, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
-         this.generateBox(var1, var4, 2, 6, 0, 4, 8, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 2, 5, 0, 4, 5, 0, var6, var6, false);
+      public boolean postProcess(WorldGenLevel var1, StructureFeatureManager var2, ChunkGenerator var3, Random var4, BoundingBox var5, ChunkPos var6, BlockPos var7) {
+         this.generateBox(var1, var5, 0, 0, 0, 6, 1, 6, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 0, 6, 10, 6, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 0, 1, 8, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 5, 2, 0, 6, 8, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 1, 0, 8, 6, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 6, 2, 1, 6, 8, 6, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 1, 2, 6, 5, 8, 6, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         BlockState var8 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.EAST, true);
+         BlockState var9 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
+         this.generateBox(var1, var5, 0, 3, 2, 0, 5, 4, var9, var9, false);
+         this.generateBox(var1, var5, 6, 3, 2, 6, 5, 2, var9, var9, false);
+         this.generateBox(var1, var5, 6, 3, 4, 6, 5, 4, var9, var9, false);
+         this.placeBlock(var1, Blocks.NETHER_BRICKS.defaultBlockState(), 5, 2, 5, var5);
+         this.generateBox(var1, var5, 4, 2, 5, 4, 3, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 3, 2, 5, 3, 4, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 2, 2, 5, 2, 5, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 1, 2, 5, 1, 6, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 1, 7, 1, 5, 7, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 6, 8, 2, 6, 8, 4, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
+         this.generateBox(var1, var5, 2, 6, 0, 4, 8, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 2, 5, 0, 4, 5, 0, var8, var8, false);
 
-         for(int var8 = 0; var8 <= 6; ++var8) {
-            for(int var9 = 0; var9 <= 6; ++var9) {
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var8, -1, var9, var4);
+         for(int var10 = 0; var10 <= 6; ++var10) {
+            for(int var11 = 0; var11 <= 6; ++var11) {
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var10, -1, var11, var5);
             }
          }
 
          return true;
       }
@@ -764,35 +765,35 @@
       public static NetherBridgePieces.RoomCrossing createPiece(List<StructurePiece> var0, int var1, int var2, int var3, Direction var4, int var5) {
          BoundingBox var6 = BoundingBox.orientBox(var1, var2, var3, -2, 0, 0, 7, 9, 7, var4);
          return isOkBox(var6) && StructurePiece.findCollisionPiece(var0, var6) == null ? new NetherBridgePieces.RoomCrossing(var5, var6, var4) : null;
       }
 
-      public boolean postProcess(LevelAccessor var1, ChunkGenerator<?> var2, Random var3, BoundingBox var4, ChunkPos var5) {
-         this.generateBox(var1, var4, 0, 0, 0, 6, 1, 6, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 0, 6, 7, 6, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 0, 1, 6, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 6, 1, 6, 6, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 5, 2, 0, 6, 6, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 5, 2, 6, 6, 6, 6, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 0, 0, 6, 1, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 5, 0, 6, 6, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 6, 2, 0, 6, 6, 1, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 6, 2, 5, 6, 6, 6, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         BlockState var6 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.EAST, true);
-         BlockState var7 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
-         this.generateBox(var1, var4, 2, 6, 0, 4, 6, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 2, 5, 0, 4, 5, 0, var6, var6, false);
-         this.generateBox(var1, var4, 2, 6, 6, 4, 6, 6, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 2, 5, 6, 4, 5, 6, var6, var6, false);
-         this.generateBox(var1, var4, 0, 6, 2, 0, 6, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 5, 2, 0, 5, 4, var7, var7, false);
-         this.generateBox(var1, var4, 6, 6, 2, 6, 6, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 6, 5, 2, 6, 5, 4, var7, var7, false);
+      public boolean postProcess(WorldGenLevel var1, StructureFeatureManager var2, ChunkGenerator var3, Random var4, BoundingBox var5, ChunkPos var6, BlockPos var7) {
+         this.generateBox(var1, var5, 0, 0, 0, 6, 1, 6, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 0, 6, 7, 6, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 0, 1, 6, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 6, 1, 6, 6, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 5, 2, 0, 6, 6, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 5, 2, 6, 6, 6, 6, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 0, 0, 6, 1, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 5, 0, 6, 6, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 6, 2, 0, 6, 6, 1, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 6, 2, 5, 6, 6, 6, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         BlockState var8 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.WEST, true)).setValue(FenceBlock.EAST, true);
+         BlockState var9 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
+         this.generateBox(var1, var5, 2, 6, 0, 4, 6, 0, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 2, 5, 0, 4, 5, 0, var8, var8, false);
+         this.generateBox(var1, var5, 2, 6, 6, 4, 6, 6, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 2, 5, 6, 4, 5, 6, var8, var8, false);
+         this.generateBox(var1, var5, 0, 6, 2, 0, 6, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 5, 2, 0, 5, 4, var9, var9, false);
+         this.generateBox(var1, var5, 6, 6, 2, 6, 6, 4, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 6, 5, 2, 6, 5, 4, var9, var9, false);
 
-         for(int var8 = 0; var8 <= 6; ++var8) {
-            for(int var9 = 0; var9 <= 6; ++var9) {
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var8, -1, var9, var4);
+         for(int var10 = 0; var10 <= 6; ++var10) {
+            for(int var11 = 0; var11 <= 6; ++var11) {
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var10, -1, var11, var5);
             }
          }
 
          return true;
       }
@@ -833,46 +834,46 @@
       public static NetherBridgePieces.BridgeCrossing createPiece(List<StructurePiece> var0, int var1, int var2, int var3, Direction var4, int var5) {
          BoundingBox var6 = BoundingBox.orientBox(var1, var2, var3, -8, -3, 0, 19, 10, 19, var4);
          return isOkBox(var6) && StructurePiece.findCollisionPiece(var0, var6) == null ? new NetherBridgePieces.BridgeCrossing(var5, var6, var4) : null;
       }
 
-      public boolean postProcess(LevelAccessor var1, ChunkGenerator<?> var2, Random var3, BoundingBox var4, ChunkPos var5) {
-         this.generateBox(var1, var4, 7, 3, 0, 11, 4, 18, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 3, 7, 18, 4, 11, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 8, 5, 0, 10, 7, 18, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 5, 8, 18, 7, 10, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
-         this.generateBox(var1, var4, 7, 5, 0, 7, 5, 7, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 7, 5, 11, 7, 5, 18, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 11, 5, 0, 11, 5, 7, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 11, 5, 11, 11, 5, 18, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 5, 7, 7, 5, 7, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 11, 5, 7, 18, 5, 7, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 5, 11, 7, 5, 11, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 11, 5, 11, 18, 5, 11, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 7, 2, 0, 11, 2, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 7, 2, 13, 11, 2, 18, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 7, 0, 0, 11, 1, 3, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 7, 0, 15, 11, 1, 18, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+      public boolean postProcess(WorldGenLevel var1, StructureFeatureManager var2, ChunkGenerator var3, Random var4, BoundingBox var5, ChunkPos var6, BlockPos var7) {
+         this.generateBox(var1, var5, 7, 3, 0, 11, 4, 18, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 3, 7, 18, 4, 11, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 8, 5, 0, 10, 7, 18, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 5, 8, 18, 7, 10, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
+         this.generateBox(var1, var5, 7, 5, 0, 7, 5, 7, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 7, 5, 11, 7, 5, 18, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 11, 5, 0, 11, 5, 7, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 11, 5, 11, 11, 5, 18, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 5, 7, 7, 5, 7, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 11, 5, 7, 18, 5, 7, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 5, 11, 7, 5, 11, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 11, 5, 11, 18, 5, 11, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 7, 2, 0, 11, 2, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 7, 2, 13, 11, 2, 18, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 7, 0, 0, 11, 1, 3, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 7, 0, 15, 11, 1, 18, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
 
-         int var6;
-         int var7;
-         for(var6 = 7; var6 <= 11; ++var6) {
-            for(var7 = 0; var7 <= 2; ++var7) {
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var6, -1, var7, var4);
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var6, -1, 18 - var7, var4);
+         int var8;
+         int var9;
+         for(var8 = 7; var8 <= 11; ++var8) {
+            for(var9 = 0; var9 <= 2; ++var9) {
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var8, -1, var9, var5);
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var8, -1, 18 - var9, var5);
             }
          }
 
-         this.generateBox(var1, var4, 0, 2, 7, 5, 2, 11, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 13, 2, 7, 18, 2, 11, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 0, 7, 3, 1, 11, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 15, 0, 7, 18, 1, 11, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 7, 5, 2, 11, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 13, 2, 7, 18, 2, 11, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 0, 7, 3, 1, 11, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 15, 0, 7, 18, 1, 11, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
 
-         for(var6 = 0; var6 <= 2; ++var6) {
-            for(var7 = 7; var7 <= 11; ++var7) {
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var6, -1, var7, var4);
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), 18 - var6, -1, var7, var4);
+         for(var8 = 0; var8 <= 2; ++var8) {
+            for(var9 = 7; var9 <= 11; ++var9) {
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var8, -1, var9, var5);
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), 18 - var8, -1, var9, var5);
             }
          }
 
          return true;
       }
@@ -901,37 +902,37 @@
       protected void addAdditionalSaveData(CompoundTag var1) {
          super.addAdditionalSaveData(var1);
          var1.putInt("Seed", this.selfSeed);
       }
 
-      public boolean postProcess(LevelAccessor var1, ChunkGenerator<?> var2, Random var3, BoundingBox var4, ChunkPos var5) {
-         Random var6 = new Random((long)this.selfSeed);
+      public boolean postProcess(WorldGenLevel var1, StructureFeatureManager var2, ChunkGenerator var3, Random var4, BoundingBox var5, ChunkPos var6, BlockPos var7) {
+         Random var8 = new Random((long)this.selfSeed);
 
-         int var7;
-         int var8;
          int var9;
-         for(var7 = 0; var7 <= 4; ++var7) {
-            for(var8 = 3; var8 <= 4; ++var8) {
-               var9 = var6.nextInt(8);
-               this.generateBox(var1, var4, var7, var8, 0, var7, var8, var9, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         int var10;
+         int var11;
+         for(var9 = 0; var9 <= 4; ++var9) {
+            for(var10 = 3; var10 <= 4; ++var10) {
+               var11 = var8.nextInt(8);
+               this.generateBox(var1, var5, var9, var10, 0, var9, var10, var11, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
             }
          }
 
-         var7 = var6.nextInt(8);
-         this.generateBox(var1, var4, 0, 5, 0, 0, 5, var7, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         var7 = var6.nextInt(8);
-         this.generateBox(var1, var4, 4, 5, 0, 4, 5, var7, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         var9 = var8.nextInt(8);
+         this.generateBox(var1, var5, 0, 5, 0, 0, 5, var9, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         var9 = var8.nextInt(8);
+         this.generateBox(var1, var5, 4, 5, 0, 4, 5, var9, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
 
-         for(var7 = 0; var7 <= 4; ++var7) {
-            var8 = var6.nextInt(5);
-            this.generateBox(var1, var4, var7, 2, 0, var7, 2, var8, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         for(var9 = 0; var9 <= 4; ++var9) {
+            var10 = var8.nextInt(5);
+            this.generateBox(var1, var5, var9, 2, 0, var9, 2, var10, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
          }
 
-         for(var7 = 0; var7 <= 4; ++var7) {
-            for(var8 = 0; var8 <= 1; ++var8) {
-               var9 = var6.nextInt(3);
-               this.generateBox(var1, var4, var7, var8, 0, var7, var8, var9, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         for(var9 = 0; var9 <= 4; ++var9) {
+            for(var10 = 0; var10 <= 1; ++var10) {
+               var11 = var8.nextInt(3);
+               this.generateBox(var1, var5, var9, var10, 0, var9, var10, var11, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
             }
          }
 
          return true;
       }
@@ -955,38 +956,38 @@
       public static NetherBridgePieces.BridgeStraight createPiece(List<StructurePiece> var0, Random var1, int var2, int var3, int var4, Direction var5, int var6) {
          BoundingBox var7 = BoundingBox.orientBox(var2, var3, var4, -1, -3, 0, 5, 10, 19, var5);
          return isOkBox(var7) && StructurePiece.findCollisionPiece(var0, var7) == null ? new NetherBridgePieces.BridgeStraight(var6, var1, var7, var5) : null;
       }
 
-      public boolean postProcess(LevelAccessor var1, ChunkGenerator<?> var2, Random var3, BoundingBox var4, ChunkPos var5) {
-         this.generateBox(var1, var4, 0, 3, 0, 4, 4, 18, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 1, 5, 0, 3, 7, 18, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 5, 0, 0, 5, 18, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 4, 5, 0, 4, 5, 18, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 0, 4, 2, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 2, 13, 4, 2, 18, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 0, 0, 4, 1, 3, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
-         this.generateBox(var1, var4, 0, 0, 15, 4, 1, 18, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+      public boolean postProcess(WorldGenLevel var1, StructureFeatureManager var2, ChunkGenerator var3, Random var4, BoundingBox var5, ChunkPos var6, BlockPos var7) {
+         this.generateBox(var1, var5, 0, 3, 0, 4, 4, 18, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 1, 5, 0, 3, 7, 18, Blocks.AIR.defaultBlockState(), Blocks.AIR.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 5, 0, 0, 5, 18, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 4, 5, 0, 4, 5, 18, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 0, 4, 2, 5, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 2, 13, 4, 2, 18, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 0, 0, 4, 1, 3, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
+         this.generateBox(var1, var5, 0, 0, 15, 4, 1, 18, Blocks.NETHER_BRICKS.defaultBlockState(), Blocks.NETHER_BRICKS.defaultBlockState(), false);
 
-         for(int var6 = 0; var6 <= 4; ++var6) {
-            for(int var7 = 0; var7 <= 2; ++var7) {
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var6, -1, var7, var4);
-               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var6, -1, 18 - var7, var4);
+         for(int var8 = 0; var8 <= 4; ++var8) {
+            for(int var9 = 0; var9 <= 2; ++var9) {
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var8, -1, var9, var5);
+               this.fillColumnDown(var1, Blocks.NETHER_BRICKS.defaultBlockState(), var8, -1, 18 - var9, var5);
             }
          }
 
-         BlockState var9 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
-         BlockState var10 = (BlockState)var9.setValue(FenceBlock.EAST, true);
-         BlockState var8 = (BlockState)var9.setValue(FenceBlock.WEST, true);
-         this.generateBox(var1, var4, 0, 1, 1, 0, 4, 1, var10, var10, false);
-         this.generateBox(var1, var4, 0, 3, 4, 0, 4, 4, var10, var10, false);
-         this.generateBox(var1, var4, 0, 3, 14, 0, 4, 14, var10, var10, false);
-         this.generateBox(var1, var4, 0, 1, 17, 0, 4, 17, var10, var10, false);
-         this.generateBox(var1, var4, 4, 1, 1, 4, 4, 1, var8, var8, false);
-         this.generateBox(var1, var4, 4, 3, 4, 4, 4, 4, var8, var8, false);
-         this.generateBox(var1, var4, 4, 3, 14, 4, 4, 14, var8, var8, false);
-         this.generateBox(var1, var4, 4, 1, 17, 4, 4, 17, var8, var8, false);
+         BlockState var11 = (BlockState)((BlockState)Blocks.NETHER_BRICK_FENCE.defaultBlockState().setValue(FenceBlock.NORTH, true)).setValue(FenceBlock.SOUTH, true);
+         BlockState var12 = (BlockState)var11.setValue(FenceBlock.EAST, true);
+         BlockState var10 = (BlockState)var11.setValue(FenceBlock.WEST, true);
+         this.generateBox(var1, var5, 0, 1, 1, 0, 4, 1, var12, var12, false);
+         this.generateBox(var1, var5, 0, 3, 4, 0, 4, 4, var12, var12, false);
+         this.generateBox(var1, var5, 0, 3, 14, 0, 4, 14, var12, var12, false);
+         this.generateBox(var1, var5, 0, 1, 17, 0, 4, 17, var12, var12, false);
+         this.generateBox(var1, var5, 4, 1, 1, 4, 4, 1, var10, var10, false);
+         this.generateBox(var1, var5, 4, 3, 4, 4, 4, 4, var10, var10, false);
+         this.generateBox(var1, var5, 4, 3, 14, 4, 4, 14, var10, var10, false);
+         this.generateBox(var1, var5, 4, 1, 17, 4, 4, 17, var10, var10, false);
          return true;
       }
    }
 
    public static class StartPiece extends NetherBridgePieces.BridgeCrossing {
