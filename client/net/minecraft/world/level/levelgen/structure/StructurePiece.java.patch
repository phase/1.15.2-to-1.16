--- net/minecraft/world/level/levelgen/structure/StructurePiece.java
+++ net/minecraft/world/level/levelgen/structure/StructurePiece.java
@@ -13,10 +13,12 @@
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.ChunkPos;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.LevelReader;
+import net.minecraft.world.level.StructureFeatureManager;
+import net.minecraft.world.level.WorldGenLevel;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.DispenserBlock;
 import net.minecraft.world.level.block.HorizontalDirectionalBlock;
 import net.minecraft.world.level.block.Mirror;
@@ -70,11 +72,11 @@
    protected abstract void addAdditionalSaveData(CompoundTag var1);
 
    public void addChildren(StructurePiece var1, List<StructurePiece> var2, Random var3) {
    }
 
-   public abstract boolean postProcess(LevelAccessor var1, ChunkGenerator<?> var2, Random var3, BoundingBox var4, ChunkPos var5);
+   public abstract boolean postProcess(WorldGenLevel var1, StructureFeatureManager var2, ChunkGenerator var3, Random var4, BoundingBox var5, ChunkPos var6, BlockPos var7);
 
    public BoundingBox getBoundingBox() {
       return this.boundingBox;
    }
 
@@ -356,11 +358,11 @@
 
       while(var4.hasNext()) {
          Direction var5 = (Direction)var4.next();
          BlockPos var6 = var1.relative(var5);
          BlockState var7 = var0.getBlockState(var6);
-         if (var7.getBlock() == Blocks.CHEST) {
+         if (var7.is(Blocks.CHEST)) {
             return var2;
          }
 
          if (var7.isSolidRender(var0, var6)) {
             if (var3 != null) {
@@ -395,11 +397,11 @@
          return (BlockState)var2.setValue(HorizontalDirectionalBlock.FACING, var8);
       }
    }
 
    protected boolean createChest(LevelAccessor var1, BoundingBox var2, Random var3, BlockPos var4, ResourceLocation var5, @Nullable BlockState var6) {
-      if (var2.isInside(var4) && var1.getBlockState(var4).getBlock() != Blocks.CHEST) {
+      if (var2.isInside(var4) && !var1.getBlockState(var4).is(Blocks.CHEST)) {
          if (var6 == null) {
             var6 = reorient(var1, var4, Blocks.CHEST.defaultBlockState());
          }
 
          var1.setBlock(var4, var6, 2);
@@ -414,11 +416,11 @@
       }
    }
 
    protected boolean createDispenser(LevelAccessor var1, BoundingBox var2, Random var3, int var4, int var5, int var6, Direction var7, ResourceLocation var8) {
       BlockPos var9 = new BlockPos(this.getWorldX(var4, var6), this.getWorldY(var5), this.getWorldZ(var4, var6));
-      if (var2.isInside(var9) && var1.getBlockState(var9).getBlock() != Blocks.DISPENSER) {
+      if (var2.isInside(var9) && !var1.getBlockState(var9).is(Blocks.DISPENSER)) {
          this.placeBlock(var1, (BlockState)Blocks.DISPENSER.defaultBlockState().setValue(DispenserBlock.FACING, var7), var4, var5, var6, var2);
          BlockEntity var10 = var1.getBlockEntity(var9);
          if (var10 instanceof DispenserBlockEntity) {
             ((DispenserBlockEntity)var10).setLootTable(var8, var3.nextLong());
          }
