--- net/minecraft/world/level/levelgen/structure/IglooPieces.java
+++ net/minecraft/world/level/levelgen/structure/IglooPieces.java
@@ -7,20 +7,21 @@
 import net.minecraft.core.BlockPos;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.world.level.ChunkPos;
 import net.minecraft.world.level.LevelAccessor;
+import net.minecraft.world.level.StructureFeatureManager;
+import net.minecraft.world.level.WorldGenLevel;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.Mirror;
 import net.minecraft.world.level.block.Rotation;
 import net.minecraft.world.level.block.entity.BlockEntity;
 import net.minecraft.world.level.block.entity.ChestBlockEntity;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.chunk.ChunkGenerator;
 import net.minecraft.world.level.levelgen.Heightmap;
 import net.minecraft.world.level.levelgen.feature.StructurePieceType;
-import net.minecraft.world.level.levelgen.feature.configurations.NoneFeatureConfiguration;
 import net.minecraft.world.level.levelgen.structure.templatesystem.BlockIgnoreProcessor;
 import net.minecraft.world.level.levelgen.structure.templatesystem.StructureManager;
 import net.minecraft.world.level.levelgen.structure.templatesystem.StructurePlaceSettings;
 import net.minecraft.world.level.levelgen.structure.templatesystem.StructureTemplate;
 import net.minecraft.world.level.storage.loot.BuiltInLootTables;
@@ -30,17 +31,17 @@
    private static final ResourceLocation STRUCTURE_LOCATION_LADDER = new ResourceLocation("igloo/middle");
    private static final ResourceLocation STRUCTURE_LOCATION_LABORATORY = new ResourceLocation("igloo/bottom");
    private static final Map<ResourceLocation, BlockPos> PIVOTS;
    private static final Map<ResourceLocation, BlockPos> OFFSETS;
 
-   public static void addPieces(StructureManager var0, BlockPos var1, Rotation var2, List<StructurePiece> var3, Random var4, NoneFeatureConfiguration var5) {
+   public static void addPieces(StructureManager var0, BlockPos var1, Rotation var2, List<StructurePiece> var3, Random var4) {
       if (var4.nextDouble() < 0.5D) {
-         int var6 = var4.nextInt(8) + 4;
-         var3.add(new IglooPieces.IglooPiece(var0, STRUCTURE_LOCATION_LABORATORY, var1, var2, var6 * 3));
+         int var5 = var4.nextInt(8) + 4;
+         var3.add(new IglooPieces.IglooPiece(var0, STRUCTURE_LOCATION_LABORATORY, var1, var2, var5 * 3));
 
-         for(int var7 = 0; var7 < var6 - 1; ++var7) {
-            var3.add(new IglooPieces.IglooPiece(var0, STRUCTURE_LOCATION_LADDER, var1, var2, var7 * 3));
+         for(int var6 = 0; var6 < var5 - 1; ++var6) {
+            var3.add(new IglooPieces.IglooPiece(var0, STRUCTURE_LOCATION_LADDER, var1, var2, var6 * 3));
          }
       }
 
       var3.add(new IglooPieces.IglooPiece(var0, STRUCTURE_LOCATION_IGLOO, var1, var2, 0));
    }
@@ -91,26 +92,26 @@
             }
 
          }
       }
 
-      public boolean postProcess(LevelAccessor var1, ChunkGenerator<?> var2, Random var3, BoundingBox var4, ChunkPos var5) {
-         StructurePlaceSettings var6 = (new StructurePlaceSettings()).setRotation(this.rotation).setMirror(Mirror.NONE).setRotationPivot((BlockPos)IglooPieces.PIVOTS.get(this.templateLocation)).addProcessor(BlockIgnoreProcessor.STRUCTURE_BLOCK);
-         BlockPos var7 = (BlockPos)IglooPieces.OFFSETS.get(this.templateLocation);
-         BlockPos var8 = this.templatePosition.offset(StructureTemplate.calculateRelativePosition(var6, new BlockPos(3 - var7.getX(), 0, 0 - var7.getZ())));
-         int var9 = var1.getHeight(Heightmap.Types.WORLD_SURFACE_WG, var8.getX(), var8.getZ());
-         BlockPos var10 = this.templatePosition;
-         this.templatePosition = this.templatePosition.offset(0, var9 - 90 - 1, 0);
-         boolean var11 = super.postProcess(var1, var2, var3, var4, var5);
+      public boolean postProcess(WorldGenLevel var1, StructureFeatureManager var2, ChunkGenerator var3, Random var4, BoundingBox var5, ChunkPos var6, BlockPos var7) {
+         StructurePlaceSettings var8 = (new StructurePlaceSettings()).setRotation(this.rotation).setMirror(Mirror.NONE).setRotationPivot((BlockPos)IglooPieces.PIVOTS.get(this.templateLocation)).addProcessor(BlockIgnoreProcessor.STRUCTURE_BLOCK);
+         BlockPos var9 = (BlockPos)IglooPieces.OFFSETS.get(this.templateLocation);
+         BlockPos var10 = this.templatePosition.offset(StructureTemplate.calculateRelativePosition(var8, new BlockPos(3 - var9.getX(), 0, 0 - var9.getZ())));
+         int var11 = var1.getHeight(Heightmap.Types.WORLD_SURFACE_WG, var10.getX(), var10.getZ());
+         BlockPos var12 = this.templatePosition;
+         this.templatePosition = this.templatePosition.offset(0, var11 - 90 - 1, 0);
+         boolean var13 = super.postProcess(var1, var2, var3, var4, var5, var6, var7);
          if (this.templateLocation.equals(IglooPieces.STRUCTURE_LOCATION_IGLOO)) {
-            BlockPos var12 = this.templatePosition.offset(StructureTemplate.calculateRelativePosition(var6, new BlockPos(3, 0, 5)));
-            BlockState var13 = var1.getBlockState(var12.below());
-            if (!var13.isAir() && var13.getBlock() != Blocks.LADDER) {
-               var1.setBlock(var12, Blocks.SNOW_BLOCK.defaultBlockState(), 3);
+            BlockPos var14 = this.templatePosition.offset(StructureTemplate.calculateRelativePosition(var8, new BlockPos(3, 0, 5)));
+            BlockState var15 = var1.getBlockState(var14.below());
+            if (!var15.isAir() && !var15.is(Blocks.LADDER)) {
+               var1.setBlock(var14, Blocks.SNOW_BLOCK.defaultBlockState(), 3);
             }
          }
 
-         this.templatePosition = var10;
-         return var11;
+         this.templatePosition = var12;
+         return var13;
       }
    }
 }
