--- net/minecraft/world/level/levelgen/structure/NetherFossilFeature.java
+++ net/minecraft/world/level/levelgen/structure/NetherFossilFeature.java
@@ -1,0 +1,53 @@
+package net.minecraft.world.level.levelgen.structure;
+
+import com.mojang.serialization.Codec;
+import net.minecraft.core.BlockPos;
+import net.minecraft.core.Direction;
+import net.minecraft.world.level.BlockGetter;
+import net.minecraft.world.level.ChunkPos;
+import net.minecraft.world.level.biome.Biome;
+import net.minecraft.world.level.block.Blocks;
+import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.level.chunk.ChunkGenerator;
+import net.minecraft.world.level.levelgen.feature.StructureFeature;
+import net.minecraft.world.level.levelgen.feature.configurations.NoneFeatureConfiguration;
+import net.minecraft.world.level.levelgen.structure.templatesystem.StructureManager;
+
+public class NetherFossilFeature extends StructureFeature<NoneFeatureConfiguration> {
+   public NetherFossilFeature(Codec<NoneFeatureConfiguration> var1) {
+      super(var1);
+   }
+
+   public StructureFeature.StructureStartFactory<NoneFeatureConfiguration> getStartFactory() {
+      return NetherFossilFeature.FeatureStart::new;
+   }
+
+   public static class FeatureStart extends BeardedStructureStart<NoneFeatureConfiguration> {
+      public FeatureStart(StructureFeature<NoneFeatureConfiguration> var1, int var2, int var3, BoundingBox var4, int var5, long var6) {
+         super(var1, var2, var3, var4, var5, var6);
+      }
+
+      public void generatePieces(ChunkGenerator var1, StructureManager var2, int var3, int var4, Biome var5, NoneFeatureConfiguration var6) {
+         ChunkPos var7 = new ChunkPos(var3, var4);
+         int var8 = var7.getMinBlockX() + this.random.nextInt(16);
+         int var9 = var7.getMinBlockZ() + this.random.nextInt(16);
+         int var10 = var1.getSeaLevel();
+         int var11 = var10 + this.random.nextInt(var1.getGenDepth() - 2 - var10);
+         BlockGetter var12 = var1.getBaseColumn(var8, var9);
+
+         for(BlockPos.MutableBlockPos var13 = new BlockPos.MutableBlockPos(var8, var11, var9); var11 > var10; --var11) {
+            BlockState var14 = var12.getBlockState(var13);
+            var13.move(Direction.DOWN);
+            BlockState var15 = var12.getBlockState(var13);
+            if (var14.isAir() && (var15.is(Blocks.SOUL_SAND) || var15.isFaceSturdy(var12, var13, Direction.UP))) {
+               break;
+            }
+         }
+
+         if (var11 > var10) {
+            NetherFossilPieces.addPieces(var2, this.pieces, this.random, new BlockPos(var8, var11, var9));
+            this.calculateBoundingBox();
+         }
+      }
+   }
+}
