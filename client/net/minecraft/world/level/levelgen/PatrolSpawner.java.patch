--- net/minecraft/world/level/levelgen/PatrolSpawner.java
+++ net/minecraft/world/level/levelgen/PatrolSpawner.java
@@ -7,17 +7,17 @@
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.SpawnGroupData;
 import net.minecraft.world.entity.monster.PatrollingMonster;
 import net.minecraft.world.entity.player.Player;
+import net.minecraft.world.level.CustomSpawner;
 import net.minecraft.world.level.GameRules;
-import net.minecraft.world.level.Level;
 import net.minecraft.world.level.NaturalSpawner;
 import net.minecraft.world.level.biome.Biome;
 import net.minecraft.world.level.block.state.BlockState;
 
-public class PatrolSpawner {
+public class PatrolSpawner implements CustomSpawner {
    private int nextTick;
 
    public PatrolSpawner() {
    }
 
@@ -43,16 +43,16 @@
                      return 0;
                   } else {
                      Player var8 = (Player)var1.players().get(var4.nextInt(var7));
                      if (var8.isSpectator()) {
                         return 0;
-                     } else if (var1.isVillage(var8.getCommandSenderBlockPosition())) {
+                     } else if (var1.isCloseToVillage(var8.blockPosition(), 2)) {
                         return 0;
                      } else {
                         int var9 = (24 + var4.nextInt(24)) * (var4.nextBoolean() ? -1 : 1);
                         int var10 = (24 + var4.nextInt(24)) * (var4.nextBoolean() ? -1 : 1);
-                        BlockPos.MutableBlockPos var11 = (new BlockPos.MutableBlockPos(var8)).move(var9, 0, var10);
+                        BlockPos.MutableBlockPos var11 = var8.blockPosition().mutable().move(var9, 0, var10);
                         if (!var1.hasChunksAt(var11.getX() - 10, var11.getY() - 10, var11.getZ() - 10, var11.getX() + 10, var11.getY() + 10, var11.getZ() + 10)) {
                            return 0;
                         } else {
                            Biome var12 = var1.getBiome(var11);
                            Biome.BiomeCategory var13 = var12.getBiomeCategory();
@@ -88,13 +88,13 @@
             }
          }
       }
    }
 
-   private boolean spawnPatrolMember(Level var1, BlockPos var2, Random var3, boolean var4) {
+   private boolean spawnPatrolMember(ServerLevel var1, BlockPos var2, Random var3, boolean var4) {
       BlockState var5 = var1.getBlockState(var2);
-      if (!NaturalSpawner.isValidEmptySpawnBlock(var1, var2, var5, var5.getFluidState())) {
+      if (!NaturalSpawner.isValidEmptySpawnBlock(var1, var2, var5, var5.getFluidState(), EntityType.PILLAGER)) {
          return false;
       } else if (!PatrollingMonster.checkPatrollingMonsterSpawnRules(EntityType.PILLAGER, var1, MobSpawnType.PATROL, var2, var3)) {
          return false;
       } else {
          PatrollingMonster var6 = (PatrollingMonster)EntityType.PILLAGER.create(var1);
