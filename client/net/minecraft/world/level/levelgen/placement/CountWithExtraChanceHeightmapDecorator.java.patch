--- net/minecraft/world/level/levelgen/placement/CountWithExtraChanceHeightmapDecorator.java
+++ net/minecraft/world/level/levelgen/placement/CountWithExtraChanceHeightmapDecorator.java
@@ -1,32 +1,0 @@
-package net.minecraft.world.level.levelgen.placement;
-
-import com.mojang.datafixers.Dynamic;
-import java.util.Random;
-import java.util.function.Function;
-import java.util.stream.IntStream;
-import java.util.stream.Stream;
-import net.minecraft.core.BlockPos;
-import net.minecraft.world.level.LevelAccessor;
-import net.minecraft.world.level.chunk.ChunkGenerator;
-import net.minecraft.world.level.levelgen.ChunkGeneratorSettings;
-import net.minecraft.world.level.levelgen.Heightmap;
-
-public class CountWithExtraChanceHeightmapDecorator extends FeatureDecorator<FrequencyWithExtraChanceDecoratorConfiguration> {
-   public CountWithExtraChanceHeightmapDecorator(Function<Dynamic<?>, ? extends FrequencyWithExtraChanceDecoratorConfiguration> var1) {
-      super(var1);
-   }
-
-   public Stream<BlockPos> getPositions(LevelAccessor var1, ChunkGenerator<? extends ChunkGeneratorSettings> var2, Random var3, FrequencyWithExtraChanceDecoratorConfiguration var4, BlockPos var5) {
-      int var6 = var4.count;
-      if (var3.nextFloat() < var4.extraChance) {
-         var6 += var4.extraCount;
-      }
-
-      return IntStream.range(0, var6).mapToObj((var3x) -> {
-         int var4 = var3.nextInt(16) + var5.getX();
-         int var5x = var3.nextInt(16) + var5.getZ();
-         int var6 = var1.getHeight(Heightmap.Types.MOTION_BLOCKING, var4, var5x);
-         return new BlockPos(var4, var6, var5x);
-      });
-   }
-}
