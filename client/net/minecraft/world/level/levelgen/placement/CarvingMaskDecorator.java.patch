--- net/minecraft/world/level/levelgen/placement/CarvingMaskDecorator.java
+++ net/minecraft/world/level/levelgen/placement/CarvingMaskDecorator.java
@@ -1,30 +1,29 @@
 package net.minecraft.world.level.levelgen.placement;
 
-import com.mojang.datafixers.Dynamic;
+import com.mojang.serialization.Codec;
 import java.util.BitSet;
 import java.util.Random;
-import java.util.function.Function;
 import java.util.stream.IntStream;
 import java.util.stream.Stream;
 import net.minecraft.core.BlockPos;
 import net.minecraft.world.level.ChunkPos;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.chunk.ChunkAccess;
 import net.minecraft.world.level.chunk.ChunkGenerator;
-import net.minecraft.world.level.levelgen.ChunkGeneratorSettings;
+import net.minecraft.world.level.chunk.ProtoChunk;
 
 public class CarvingMaskDecorator extends FeatureDecorator<CarvingMaskDecoratorConfiguration> {
-   public CarvingMaskDecorator(Function<Dynamic<?>, ? extends CarvingMaskDecoratorConfiguration> var1) {
+   public CarvingMaskDecorator(Codec<CarvingMaskDecoratorConfiguration> var1) {
       super(var1);
    }
 
-   public Stream<BlockPos> getPositions(LevelAccessor var1, ChunkGenerator<? extends ChunkGeneratorSettings> var2, Random var3, CarvingMaskDecoratorConfiguration var4, BlockPos var5) {
+   public Stream<BlockPos> getPositions(LevelAccessor var1, ChunkGenerator var2, Random var3, CarvingMaskDecoratorConfiguration var4, BlockPos var5) {
       ChunkAccess var6 = var1.getChunk(var5);
       ChunkPos var7 = var6.getPos();
-      BitSet var8 = var6.getCarvingMask(var4.step);
-      return IntStream.range(0, var8.length()).filter((var3x) -> {
+      BitSet var8 = ((ProtoChunk)var6).getCarvingMask(var4.step);
+      return var8 == null ? Stream.empty() : IntStream.range(0, var8.length()).filter((var3x) -> {
          return var8.get(var3x) && var3.nextFloat() < var4.probability;
       }).mapToObj((var1x) -> {
          int var2 = var1x & 15;
          int var3 = var1x >> 4 & 15;
          int var4 = var1x >> 8;
