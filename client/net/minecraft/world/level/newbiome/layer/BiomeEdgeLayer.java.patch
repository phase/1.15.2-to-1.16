--- net/minecraft/world/level/newbiome/layer/BiomeEdgeLayer.java
+++ net/minecraft/world/level/newbiome/layer/BiomeEdgeLayer.java
@@ -1,32 +1,32 @@
 package net.minecraft.world.level.newbiome.layer;
 
-import net.minecraft.core.Registry;
+import net.minecraft.data.BuiltinRegistries;
 import net.minecraft.world.level.biome.Biome;
 import net.minecraft.world.level.biome.Biomes;
 import net.minecraft.world.level.newbiome.context.Context;
 import net.minecraft.world.level.newbiome.layer.traits.CastleTransformer;
 
 public enum BiomeEdgeLayer implements CastleTransformer {
    INSTANCE;
 
-   private static final int DESERT = Registry.BIOME.getId(Biomes.DESERT);
-   private static final int MOUNTAINS = Registry.BIOME.getId(Biomes.MOUNTAINS);
-   private static final int WOODED_MOUNTAINS = Registry.BIOME.getId(Biomes.WOODED_MOUNTAINS);
-   private static final int SNOWY_TUNDRA = Registry.BIOME.getId(Biomes.SNOWY_TUNDRA);
-   private static final int JUNGLE = Registry.BIOME.getId(Biomes.JUNGLE);
-   private static final int BAMBOO_JUNGLE = Registry.BIOME.getId(Biomes.BAMBOO_JUNGLE);
-   private static final int JUNGLE_EDGE = Registry.BIOME.getId(Biomes.JUNGLE_EDGE);
-   private static final int BADLANDS = Registry.BIOME.getId(Biomes.BADLANDS);
-   private static final int BADLANDS_PLATEAU = Registry.BIOME.getId(Biomes.BADLANDS_PLATEAU);
-   private static final int WOODED_BADLANDS_PLATEAU = Registry.BIOME.getId(Biomes.WOODED_BADLANDS_PLATEAU);
-   private static final int PLAINS = Registry.BIOME.getId(Biomes.PLAINS);
-   private static final int GIANT_TREE_TAIGA = Registry.BIOME.getId(Biomes.GIANT_TREE_TAIGA);
-   private static final int MOUNTAIN_EDGE = Registry.BIOME.getId(Biomes.MOUNTAIN_EDGE);
-   private static final int SWAMP = Registry.BIOME.getId(Biomes.SWAMP);
-   private static final int TAIGA = Registry.BIOME.getId(Biomes.TAIGA);
-   private static final int SNOWY_TAIGA = Registry.BIOME.getId(Biomes.SNOWY_TAIGA);
+   private static final int DESERT = BuiltinRegistries.BIOME.getId(Biomes.DESERT);
+   private static final int MOUNTAINS = BuiltinRegistries.BIOME.getId(Biomes.MOUNTAINS);
+   private static final int WOODED_MOUNTAINS = BuiltinRegistries.BIOME.getId(Biomes.WOODED_MOUNTAINS);
+   private static final int SNOWY_TUNDRA = BuiltinRegistries.BIOME.getId(Biomes.SNOWY_TUNDRA);
+   private static final int JUNGLE = BuiltinRegistries.BIOME.getId(Biomes.JUNGLE);
+   private static final int BAMBOO_JUNGLE = BuiltinRegistries.BIOME.getId(Biomes.BAMBOO_JUNGLE);
+   private static final int JUNGLE_EDGE = BuiltinRegistries.BIOME.getId(Biomes.JUNGLE_EDGE);
+   private static final int BADLANDS = BuiltinRegistries.BIOME.getId(Biomes.BADLANDS);
+   private static final int BADLANDS_PLATEAU = BuiltinRegistries.BIOME.getId(Biomes.BADLANDS_PLATEAU);
+   private static final int WOODED_BADLANDS_PLATEAU = BuiltinRegistries.BIOME.getId(Biomes.WOODED_BADLANDS_PLATEAU);
+   private static final int PLAINS = BuiltinRegistries.BIOME.getId(Biomes.PLAINS);
+   private static final int GIANT_TREE_TAIGA = BuiltinRegistries.BIOME.getId(Biomes.GIANT_TREE_TAIGA);
+   private static final int MOUNTAIN_EDGE = BuiltinRegistries.BIOME.getId(Biomes.MOUNTAIN_EDGE);
+   private static final int SWAMP = BuiltinRegistries.BIOME.getId(Biomes.SWAMP);
+   private static final int TAIGA = BuiltinRegistries.BIOME.getId(Biomes.TAIGA);
+   private static final int SNOWY_TAIGA = BuiltinRegistries.BIOME.getId(Biomes.SNOWY_TAIGA);
 
    private BiomeEdgeLayer() {
    }
 
    public int apply(Context var1, int var2, int var3, int var4, int var5, int var6) {
@@ -82,12 +82,12 @@
 
    private boolean isValidTemperatureEdge(int var1, int var2) {
       if (Layers.isSame(var1, var2)) {
          return true;
       } else {
-         Biome var3 = (Biome)Registry.BIOME.byId(var1);
-         Biome var4 = (Biome)Registry.BIOME.byId(var2);
+         Biome var3 = (Biome)BuiltinRegistries.BIOME.byId(var1);
+         Biome var4 = (Biome)BuiltinRegistries.BIOME.byId(var2);
          if (var3 != null && var4 != null) {
             Biome.BiomeTempCategory var5 = var3.getTemperatureCategory();
             Biome.BiomeTempCategory var6 = var4.getTemperatureCategory();
             return var5 == var6 || var5 == Biome.BiomeTempCategory.MEDIUM || var6 == Biome.BiomeTempCategory.MEDIUM;
          } else {
