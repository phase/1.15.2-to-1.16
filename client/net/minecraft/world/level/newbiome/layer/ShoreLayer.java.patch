--- net/minecraft/world/level/newbiome/layer/ShoreLayer.java
+++ net/minecraft/world/level/newbiome/layer/ShoreLayer.java
@@ -1,44 +1,44 @@
 package net.minecraft.world.level.newbiome.layer;
 
-import net.minecraft.core.Registry;
+import net.minecraft.data.BuiltinRegistries;
 import net.minecraft.world.level.biome.Biome;
 import net.minecraft.world.level.biome.Biomes;
 import net.minecraft.world.level.newbiome.context.Context;
 import net.minecraft.world.level.newbiome.layer.traits.CastleTransformer;
 
 public enum ShoreLayer implements CastleTransformer {
    INSTANCE;
 
-   private static final int BEACH = Registry.BIOME.getId(Biomes.BEACH);
-   private static final int SNOWY_BEACH = Registry.BIOME.getId(Biomes.SNOWY_BEACH);
-   private static final int DESERT = Registry.BIOME.getId(Biomes.DESERT);
-   private static final int MOUNTAINS = Registry.BIOME.getId(Biomes.MOUNTAINS);
-   private static final int WOODED_MOUNTAINS = Registry.BIOME.getId(Biomes.WOODED_MOUNTAINS);
-   private static final int FOREST = Registry.BIOME.getId(Biomes.FOREST);
-   private static final int JUNGLE = Registry.BIOME.getId(Biomes.JUNGLE);
-   private static final int JUNGLE_EDGE = Registry.BIOME.getId(Biomes.JUNGLE_EDGE);
-   private static final int JUNGLE_HILLS = Registry.BIOME.getId(Biomes.JUNGLE_HILLS);
-   private static final int BADLANDS = Registry.BIOME.getId(Biomes.BADLANDS);
-   private static final int WOODED_BADLANDS_PLATEAU = Registry.BIOME.getId(Biomes.WOODED_BADLANDS_PLATEAU);
-   private static final int BADLANDS_PLATEAU = Registry.BIOME.getId(Biomes.BADLANDS_PLATEAU);
-   private static final int ERODED_BADLANDS = Registry.BIOME.getId(Biomes.ERODED_BADLANDS);
-   private static final int MODIFIED_WOODED_BADLANDS_PLATEAU = Registry.BIOME.getId(Biomes.MODIFIED_WOODED_BADLANDS_PLATEAU);
-   private static final int MODIFIED_BADLANDS_PLATEAU = Registry.BIOME.getId(Biomes.MODIFIED_BADLANDS_PLATEAU);
-   private static final int MUSHROOM_FIELDS = Registry.BIOME.getId(Biomes.MUSHROOM_FIELDS);
-   private static final int MUSHROOM_FIELD_SHORE = Registry.BIOME.getId(Biomes.MUSHROOM_FIELD_SHORE);
-   private static final int RIVER = Registry.BIOME.getId(Biomes.RIVER);
-   private static final int MOUNTAIN_EDGE = Registry.BIOME.getId(Biomes.MOUNTAIN_EDGE);
-   private static final int STONE_SHORE = Registry.BIOME.getId(Biomes.STONE_SHORE);
-   private static final int SWAMP = Registry.BIOME.getId(Biomes.SWAMP);
-   private static final int TAIGA = Registry.BIOME.getId(Biomes.TAIGA);
+   private static final int BEACH = BuiltinRegistries.BIOME.getId(Biomes.BEACH);
+   private static final int SNOWY_BEACH = BuiltinRegistries.BIOME.getId(Biomes.SNOWY_BEACH);
+   private static final int DESERT = BuiltinRegistries.BIOME.getId(Biomes.DESERT);
+   private static final int MOUNTAINS = BuiltinRegistries.BIOME.getId(Biomes.MOUNTAINS);
+   private static final int WOODED_MOUNTAINS = BuiltinRegistries.BIOME.getId(Biomes.WOODED_MOUNTAINS);
+   private static final int FOREST = BuiltinRegistries.BIOME.getId(Biomes.FOREST);
+   private static final int JUNGLE = BuiltinRegistries.BIOME.getId(Biomes.JUNGLE);
+   private static final int JUNGLE_EDGE = BuiltinRegistries.BIOME.getId(Biomes.JUNGLE_EDGE);
+   private static final int JUNGLE_HILLS = BuiltinRegistries.BIOME.getId(Biomes.JUNGLE_HILLS);
+   private static final int BADLANDS = BuiltinRegistries.BIOME.getId(Biomes.BADLANDS);
+   private static final int WOODED_BADLANDS_PLATEAU = BuiltinRegistries.BIOME.getId(Biomes.WOODED_BADLANDS_PLATEAU);
+   private static final int BADLANDS_PLATEAU = BuiltinRegistries.BIOME.getId(Biomes.BADLANDS_PLATEAU);
+   private static final int ERODED_BADLANDS = BuiltinRegistries.BIOME.getId(Biomes.ERODED_BADLANDS);
+   private static final int MODIFIED_WOODED_BADLANDS_PLATEAU = BuiltinRegistries.BIOME.getId(Biomes.MODIFIED_WOODED_BADLANDS_PLATEAU);
+   private static final int MODIFIED_BADLANDS_PLATEAU = BuiltinRegistries.BIOME.getId(Biomes.MODIFIED_BADLANDS_PLATEAU);
+   private static final int MUSHROOM_FIELDS = BuiltinRegistries.BIOME.getId(Biomes.MUSHROOM_FIELDS);
+   private static final int MUSHROOM_FIELD_SHORE = BuiltinRegistries.BIOME.getId(Biomes.MUSHROOM_FIELD_SHORE);
+   private static final int RIVER = BuiltinRegistries.BIOME.getId(Biomes.RIVER);
+   private static final int MOUNTAIN_EDGE = BuiltinRegistries.BIOME.getId(Biomes.MOUNTAIN_EDGE);
+   private static final int STONE_SHORE = BuiltinRegistries.BIOME.getId(Biomes.STONE_SHORE);
+   private static final int SWAMP = BuiltinRegistries.BIOME.getId(Biomes.SWAMP);
+   private static final int TAIGA = BuiltinRegistries.BIOME.getId(Biomes.TAIGA);
 
    private ShoreLayer() {
    }
 
    public int apply(Context var1, int var2, int var3, int var4, int var5, int var6) {
-      Biome var7 = (Biome)Registry.BIOME.byId(var6);
+      Biome var7 = (Biome)BuiltinRegistries.BIOME.byId(var6);
       if (var6 == MUSHROOM_FIELDS) {
          if (Layers.isShallowOcean(var2) || Layers.isShallowOcean(var3) || Layers.isShallowOcean(var4) || Layers.isShallowOcean(var5)) {
             return MUSHROOM_FIELD_SHORE;
          }
       } else if (var7 != null && var7.getBiomeCategory() == Biome.BiomeCategory.JUNGLE) {
@@ -67,11 +67,11 @@
 
       return var6;
    }
 
    private static boolean isJungleCompatible(int var0) {
-      if (Registry.BIOME.byId(var0) != null && ((Biome)Registry.BIOME.byId(var0)).getBiomeCategory() == Biome.BiomeCategory.JUNGLE) {
+      if (BuiltinRegistries.BIOME.byId(var0) != null && ((Biome)BuiltinRegistries.BIOME.byId(var0)).getBiomeCategory() == Biome.BiomeCategory.JUNGLE) {
          return true;
       } else {
          return var0 == JUNGLE_EDGE || var0 == JUNGLE || var0 == JUNGLE_HILLS || var0 == FOREST || var0 == TAIGA || Layers.isOcean(var0);
       }
    }
