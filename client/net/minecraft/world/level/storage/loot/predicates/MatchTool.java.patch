--- net/minecraft/world/level/storage/loot/predicates/MatchTool.java
+++ net/minecraft/world/level/storage/loot/predicates/MatchTool.java
@@ -4,11 +4,10 @@
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonSerializationContext;
 import java.util.Set;
 import net.minecraft.advancements.critereon.ItemPredicate;
-import net.minecraft.resources.ResourceLocation;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.storage.loot.LootContext;
 import net.minecraft.world.level.storage.loot.parameters.LootContextParam;
 import net.minecraft.world.level.storage.loot.parameters.LootContextParams;
 
@@ -17,10 +16,14 @@
 
    public MatchTool(ItemPredicate var1) {
       this.predicate = var1;
    }
 
+   public LootItemConditionType getType() {
+      return LootItemConditions.MATCH_TOOL;
+   }
+
    public Set<LootContextParam<?>> getReferencedContextParams() {
       return ImmutableSet.of(LootContextParams.TOOL);
    }
 
    public boolean test(LootContext var1) {
@@ -32,13 +35,12 @@
       return () -> {
          return new MatchTool(var0.build());
       };
    }
 
-   public static class Serializer extends LootItemCondition.Serializer<MatchTool> {
-      protected Serializer() {
-         super(new ResourceLocation("match_tool"), MatchTool.class);
+   public static class Serializer implements net.minecraft.world.level.storage.loot.Serializer<MatchTool> {
+      public Serializer() {
       }
 
       public void serialize(JsonObject var1, MatchTool var2, JsonSerializationContext var3) {
          var1.add("predicate", var2.predicate.serializeToJson());
       }
