--- net/minecraft/world/level/storage/loot/predicates/ConditionReference.java
+++ net/minecraft/world/level/storage/loot/predicates/ConditionReference.java
@@ -12,14 +12,18 @@
 
 public class ConditionReference implements LootItemCondition {
    private static final Logger LOGGER = LogManager.getLogger();
    private final ResourceLocation name;
 
-   public ConditionReference(ResourceLocation var1) {
+   private ConditionReference(ResourceLocation var1) {
       this.name = var1;
    }
 
+   public LootItemConditionType getType() {
+      return LootItemConditions.REFERENCE;
+   }
+
    public void validate(ValidationContext var1) {
       if (var1.hasVisitedCondition(this.name)) {
          var1.reportProblem("Condition " + this.name + " is recursively called");
       } else {
          LootItemCondition.super.validate(var1);
@@ -48,13 +52,12 @@
          LOGGER.warn("Detected infinite loop in loot tables");
          return false;
       }
    }
 
-   public static class Serializer extends LootItemCondition.Serializer<ConditionReference> {
-      protected Serializer() {
-         super(new ResourceLocation("reference"), ConditionReference.class);
+   public static class Serializer implements net.minecraft.world.level.storage.loot.Serializer<ConditionReference> {
+      public Serializer() {
       }
 
       public void serialize(JsonObject var1, ConditionReference var2, JsonSerializationContext var3) {
          var1.addProperty("name", var2.name.toString());
       }
