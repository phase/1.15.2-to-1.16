--- net/minecraft/world/level/storage/loot/functions/LimitCount.java
+++ net/minecraft/world/level/storage/loot/functions/LimitCount.java
@@ -1,11 +1,10 @@
 package net.minecraft.world.level.storage.loot.functions;
 
 import com.google.gson.JsonDeserializationContext;
 import com.google.gson.JsonObject;
 import com.google.gson.JsonSerializationContext;
-import net.minecraft.resources.ResourceLocation;
 import net.minecraft.util.GsonHelper;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.storage.loot.IntLimiter;
 import net.minecraft.world.level.storage.loot.LootContext;
 import net.minecraft.world.level.storage.loot.predicates.LootItemCondition;
@@ -16,10 +15,14 @@
    private LimitCount(LootItemCondition[] var1, IntLimiter var2) {
       super(var1);
       this.limiter = var2;
    }
 
+   public LootItemFunctionType getType() {
+      return LootItemFunctions.LIMIT_COUNT;
+   }
+
    public ItemStack run(ItemStack var1, LootContext var2) {
       int var3 = this.limiter.applyAsInt(var1.getCount());
       var1.setCount(var3);
       return var1;
    }
@@ -29,12 +32,11 @@
          return new LimitCount(var1, var0);
       });
    }
 
    public static class Serializer extends LootItemConditionalFunction.Serializer<LimitCount> {
-      protected Serializer() {
-         super(new ResourceLocation("limit_count"), LimitCount.class);
+      public Serializer() {
       }
 
       public void serialize(JsonObject var1, LimitCount var2, JsonSerializationContext var3) {
          super.serialize(var1, (LootItemConditionalFunction)var2, var3);
          var1.add("limit", var3.serialize(var2.limiter));
