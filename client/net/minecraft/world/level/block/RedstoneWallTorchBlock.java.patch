--- net/minecraft/world/level/block/RedstoneWallTorchBlock.java
+++ net/minecraft/world/level/block/RedstoneWallTorchBlock.java
@@ -2,16 +2,16 @@
 
 import java.util.Random;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
-import net.minecraft.core.particles.DustParticleOptions;
-import net.minecraft.world.item.BlockPlaceContext;
+import net.minecraft.world.item.context.BlockPlaceContext;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.LevelReader;
+import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.StateDefinition;
 import net.minecraft.world.level.block.state.properties.BooleanProperty;
 import net.minecraft.world.level.block.state.properties.DirectionProperty;
 import net.minecraft.world.phys.shapes.CollisionContext;
@@ -19,11 +19,11 @@
 
 public class RedstoneWallTorchBlock extends RedstoneTorchBlock {
    public static final DirectionProperty FACING;
    public static final BooleanProperty LIT;
 
-   protected RedstoneWallTorchBlock(Block.Properties var1) {
+   protected RedstoneWallTorchBlock(BlockBehaviour.Properties var1) {
       super(var1);
       this.registerDefaultState((BlockState)((BlockState)((BlockState)this.stateDefinition.any()).setValue(FACING, Direction.NORTH)).setValue(LIT, true));
    }
 
    public String getDescriptionId() {
@@ -53,11 +53,11 @@
          Direction var5 = ((Direction)var1.getValue(FACING)).getOpposite();
          double var6 = 0.27D;
          double var8 = (double)var3.getX() + 0.5D + (var4.nextDouble() - 0.5D) * 0.2D + 0.27D * (double)var5.getStepX();
          double var10 = (double)var3.getY() + 0.7D + (var4.nextDouble() - 0.5D) * 0.2D + 0.22D;
          double var12 = (double)var3.getZ() + 0.5D + (var4.nextDouble() - 0.5D) * 0.2D + 0.27D * (double)var5.getStepZ();
-         var2.addParticle(DustParticleOptions.REDSTONE, var8, var10, var12, 0.0D, 0.0D, 0.0D);
+         var2.addParticle(this.flameParticle, var8, var10, var12, 0.0D, 0.0D, 0.0D);
       }
    }
 
    protected boolean hasNeighborSignal(Level var1, BlockPos var2, BlockState var3) {
       Direction var4 = ((Direction)var3.getValue(FACING)).getOpposite();
