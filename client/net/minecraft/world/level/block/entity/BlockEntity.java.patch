--- net/minecraft/world/level/block/entity/BlockEntity.java
+++ net/minecraft/world/level/block/entity/BlockEntity.java
@@ -43,12 +43,12 @@
 
    public boolean hasLevel() {
       return this.level != null;
    }
 
-   public void load(CompoundTag var1) {
-      this.worldPosition = new BlockPos(var1.getInt("x"), var1.getInt("y"), var1.getInt("z"));
+   public void load(BlockState var1, CompoundTag var2) {
+      this.worldPosition = new BlockPos(var2.getInt("x"), var2.getInt("y"), var2.getInt("z"));
    }
 
    public CompoundTag save(CompoundTag var1) {
       return this.saveMetadata(var1);
    }
@@ -65,29 +65,29 @@
          return var1;
       }
    }
 
    @Nullable
-   public static BlockEntity loadStatic(CompoundTag var0) {
-      String var1 = var0.getString("id");
-      return (BlockEntity)Registry.BLOCK_ENTITY_TYPE.getOptional(new ResourceLocation(var1)).map((var1x) -> {
+   public static BlockEntity loadStatic(BlockState var0, CompoundTag var1) {
+      String var2 = var1.getString("id");
+      return (BlockEntity)Registry.BLOCK_ENTITY_TYPE.getOptional(new ResourceLocation(var2)).map((var1x) -> {
          try {
             return var1x.create();
          } catch (Throwable var3) {
-            LOGGER.error("Failed to create block entity {}", var1, var3);
+            LOGGER.error("Failed to create block entity {}", var2, var3);
             return null;
          }
-      }).map((var2) -> {
+      }).map((var3) -> {
          try {
-            var2.load(var0);
-            return var2;
-         } catch (Throwable var4) {
-            LOGGER.error("Failed to load data for block entity {}", var1, var4);
+            var3.load(var0, var1);
+            return var3;
+         } catch (Throwable var5) {
+            LOGGER.error("Failed to load data for block entity {}", var2, var5);
             return null;
          }
       }).orElseGet(() -> {
-         LOGGER.warn("Skipping BlockEntity with id {}", var1);
+         LOGGER.warn("Skipping BlockEntity with id {}", var2);
          return null;
       });
    }
 
    public void setChanged() {
@@ -99,19 +99,12 @@
          }
       }
 
    }
 
-   public double distanceToSqr(double var1, double var3, double var5) {
-      double var7 = (double)this.worldPosition.getX() + 0.5D - var1;
-      double var9 = (double)this.worldPosition.getY() + 0.5D - var3;
-      double var11 = (double)this.worldPosition.getZ() + 0.5D - var5;
-      return var7 * var7 + var9 * var9 + var11 * var11;
-   }
-
    public double getViewDistance() {
-      return 4096.0D;
+      return 64.0D;
    }
 
    public BlockPos getBlockPos() {
       return this.worldPosition;
    }
