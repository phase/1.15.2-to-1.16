--- net/minecraft/world/level/block/NetherPortalBlock.java
+++ net/minecraft/world/level/block/NetherPortalBlock.java
@@ -9,19 +9,21 @@
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.network.chat.Component;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.sounds.SoundSource;
+import net.minecraft.tags.BlockTags;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.GameRules;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
+import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.StateDefinition;
 import net.minecraft.world.level.block.state.pattern.BlockInWorld;
 import net.minecraft.world.level.block.state.pattern.BlockPattern;
 import net.minecraft.world.level.block.state.properties.BlockStateProperties;
@@ -32,11 +34,11 @@
 public class NetherPortalBlock extends Block {
    public static final EnumProperty<Direction.Axis> AXIS;
    protected static final VoxelShape X_AXIS_AABB;
    protected static final VoxelShape Z_AXIS_AABB;
 
-   public NetherPortalBlock(Block.Properties var1) {
+   public NetherPortalBlock(BlockBehaviour.Properties var1) {
       super(var1);
       this.registerDefaultState((BlockState)((BlockState)this.stateDefinition.any()).setValue(AXIS, Direction.Axis.X));
    }
 
    public VoxelShape getShape(BlockState var1, BlockGetter var2, BlockPos var3, CollisionContext var4) {
@@ -47,52 +49,52 @@
       default:
          return X_AXIS_AABB;
       }
    }
 
-   public void tick(BlockState var1, ServerLevel var2, BlockPos var3, Random var4) {
-      if (var2.dimension.isNaturalDimension() && var2.getGameRules().getBoolean(GameRules.RULE_DOMOBSPAWNING) && var4.nextInt(2000) < var2.getDifficulty().getId()) {
-         while(var2.getBlockState(var3).getBlock() == this) {
+   public void randomTick(BlockState var1, ServerLevel var2, BlockPos var3, Random var4) {
+      if (var2.dimensionType().natural() && var2.getGameRules().getBoolean(GameRules.RULE_DOMOBSPAWNING) && var4.nextInt(2000) < var2.getDifficulty().getId()) {
+         while(var2.getBlockState(var3).is(this)) {
             var3 = var3.below();
          }
 
-         if (var2.getBlockState(var3).isValidSpawn(var2, var3, EntityType.ZOMBIE_PIGMAN)) {
-            Entity var5 = EntityType.ZOMBIE_PIGMAN.spawn(var2, (CompoundTag)null, (Component)null, (Player)null, var3.above(), MobSpawnType.STRUCTURE, false, false);
+         if (var2.getBlockState(var3).isValidSpawn(var2, var3, EntityType.ZOMBIFIED_PIGLIN)) {
+            Entity var5 = EntityType.ZOMBIFIED_PIGLIN.spawn(var2, (CompoundTag)null, (Component)null, (Player)null, var3.above(), MobSpawnType.STRUCTURE, false, false);
             if (var5 != null) {
                var5.changingDimensionDelay = var5.getDimensionChangingDelay();
             }
          }
       }
 
    }
 
-   public boolean trySpawnPortal(LevelAccessor var1, BlockPos var2) {
-      NetherPortalBlock.PortalShape var3 = this.isPortal(var1, var2);
-      if (var3 != null) {
-         var3.createPortalBlocks();
+   public static boolean trySpawnPortal(LevelAccessor var0, BlockPos var1) {
+      NetherPortalBlock.PortalShape var2 = isPortal(var0, var1);
+      if (var2 != null) {
+         var2.createPortalBlocks();
          return true;
       } else {
          return false;
       }
    }
 
    @Nullable
-   public NetherPortalBlock.PortalShape isPortal(LevelAccessor var1, BlockPos var2) {
-      NetherPortalBlock.PortalShape var3 = new NetherPortalBlock.PortalShape(var1, var2, Direction.Axis.X);
-      if (var3.isValid() && var3.numPortalBlocks == 0) {
-         return var3;
+   public static NetherPortalBlock.PortalShape isPortal(LevelAccessor var0, BlockPos var1) {
+      NetherPortalBlock.PortalShape var2 = new NetherPortalBlock.PortalShape(var0, var1, Direction.Axis.X);
+      if (var2.isValid() && var2.numPortalBlocks == 0) {
+         return var2;
       } else {
-         NetherPortalBlock.PortalShape var4 = new NetherPortalBlock.PortalShape(var1, var2, Direction.Axis.Z);
-         return var4.isValid() && var4.numPortalBlocks == 0 ? var4 : null;
+         NetherPortalBlock.PortalShape var3 = new NetherPortalBlock.PortalShape(var0, var1, Direction.Axis.Z);
+         return var3.isValid() && var3.numPortalBlocks == 0 ? var3 : null;
       }
    }
 
    public BlockState updateShape(BlockState var1, Direction var2, BlockState var3, LevelAccessor var4, BlockPos var5, BlockPos var6) {
       Direction.Axis var7 = var2.getAxis();
       Direction.Axis var8 = (Direction.Axis)var1.getValue(AXIS);
       boolean var9 = var8 != var7 && var7.isHorizontal();
-      return !var9 && var3.getBlock() != this && !(new NetherPortalBlock.PortalShape(var4, var5, var8)).isComplete() ? Blocks.AIR.defaultBlockState() : super.updateShape(var1, var2, var3, var4, var5, var6);
+      return !var9 && !var3.is(this) && !(new NetherPortalBlock.PortalShape(var4, var5, var8)).isComplete() ? Blocks.AIR.defaultBlockState() : super.updateShape(var1, var2, var3, var4, var5, var6);
    }
 
    public void entityInside(BlockState var1, Level var2, BlockPos var3, Entity var4) {
       if (!var4.isPassenger() && !var4.isVehicle() && var4.canChangeDimensions()) {
          var4.handleInsidePortal(var3);
@@ -111,11 +113,11 @@
          double var10 = (double)var3.getZ() + (double)var4.nextFloat();
          double var12 = ((double)var4.nextFloat() - 0.5D) * 0.5D;
          double var14 = ((double)var4.nextFloat() - 0.5D) * 0.5D;
          double var16 = ((double)var4.nextFloat() - 0.5D) * 0.5D;
          int var18 = var4.nextInt(2) * 2 - 1;
-         if (var2.getBlockState(var3.west()).getBlock() != this && var2.getBlockState(var3.east()).getBlock() != this) {
+         if (!var2.getBlockState(var3.west()).is(this) && !var2.getBlockState(var3.east()).is(this)) {
             var6 = (double)var3.getX() + 0.5D + 0.25D * (double)var18;
             var12 = (double)(var4.nextFloat() * 2.0F * (float)var18);
          } else {
             var10 = (double)var3.getZ() + 0.5D + 0.25D * (double)var18;
             var16 = (double)(var4.nextFloat() * 2.0F * (float)var18);
@@ -248,17 +250,16 @@
 
       protected int getDistanceUntilEdge(BlockPos var1, Direction var2) {
          int var3;
          for(var3 = 0; var3 < 22; ++var3) {
             BlockPos var4 = var1.relative(var2, var3);
-            if (!this.isEmpty(this.level.getBlockState(var4)) || this.level.getBlockState(var4.below()).getBlock() != Blocks.OBSIDIAN) {
+            if (!this.isEmpty(this.level.getBlockState(var4)) || !this.level.getBlockState(var4.below()).is(Blocks.OBSIDIAN)) {
                break;
             }
          }
 
-         Block var5 = this.level.getBlockState(var1.relative(var2, var3)).getBlock();
-         return var5 == Blocks.OBSIDIAN ? var3 : 0;
+         return this.level.getBlockState(var1.relative(var2, var3)).is(Blocks.OBSIDIAN) ? var3 : 0;
       }
 
       public int getHeight() {
          return this.height;
       }
@@ -276,31 +277,26 @@
                BlockState var3 = this.level.getBlockState(var2);
                if (!this.isEmpty(var3)) {
                   break label56;
                }
 
-               Block var4 = var3.getBlock();
-               if (var4 == Blocks.NETHER_PORTAL) {
+               if (var3.is(Blocks.NETHER_PORTAL)) {
                   ++this.numPortalBlocks;
                }
 
                if (var1 == 0) {
-                  var4 = this.level.getBlockState(var2.relative(this.leftDir)).getBlock();
-                  if (var4 != Blocks.OBSIDIAN) {
+                  if (!this.level.getBlockState(var2.relative(this.leftDir)).is(Blocks.OBSIDIAN)) {
                      break label56;
                   }
-               } else if (var1 == this.width - 1) {
-                  var4 = this.level.getBlockState(var2.relative(this.rightDir)).getBlock();
-                  if (var4 != Blocks.OBSIDIAN) {
-                     break label56;
-                  }
+               } else if (var1 == this.width - 1 && !this.level.getBlockState(var2.relative(this.rightDir)).is(Blocks.OBSIDIAN)) {
+                  break label56;
                }
             }
          }
 
          for(var1 = 0; var1 < this.width; ++var1) {
-            if (this.level.getBlockState(this.bottomLeft.relative(this.rightDir, var1).above(this.height)).getBlock() != Blocks.OBSIDIAN) {
+            if (!this.level.getBlockState(this.bottomLeft.relative(this.rightDir, var1).above(this.height)).is(Blocks.OBSIDIAN)) {
                this.height = 0;
                break;
             }
          }
 
@@ -313,12 +309,11 @@
             return 0;
          }
       }
 
       protected boolean isEmpty(BlockState var1) {
-         Block var2 = var1.getBlock();
-         return var1.isAir() || var2 == Blocks.FIRE || var2 == Blocks.NETHER_PORTAL;
+         return var1.isAir() || var1.is(BlockTags.FIRE) || var1.is(Blocks.NETHER_PORTAL);
       }
 
       public boolean isValid() {
          return this.bottomLeft != null && this.width >= 2 && this.width <= 21 && this.height >= 3 && this.height <= 21;
       }
