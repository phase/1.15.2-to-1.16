--- net/minecraft/world/level/block/CrossCollisionBlock.java
+++ net/minecraft/world/level/block/CrossCollisionBlock.java
@@ -1,14 +1,16 @@
 package net.minecraft.world.level.block;
 
+import com.google.common.collect.UnmodifiableIterator;
 import it.unimi.dsi.fastutil.objects.Object2IntMap;
 import it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;
 import java.util.Map;
 import net.minecraft.Util;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.world.level.BlockGetter;
+import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.properties.BlockStateProperties;
 import net.minecraft.world.level.block.state.properties.BooleanProperty;
 import net.minecraft.world.level.material.FluidState;
 import net.minecraft.world.level.material.Fluids;
@@ -26,14 +28,21 @@
    protected static final Map<Direction, BooleanProperty> PROPERTY_BY_DIRECTION;
    protected final VoxelShape[] collisionShapeByIndex;
    protected final VoxelShape[] shapeByIndex;
    private final Object2IntMap<BlockState> stateToIndex = new Object2IntOpenHashMap();
 
-   protected CrossCollisionBlock(float var1, float var2, float var3, float var4, float var5, Block.Properties var6) {
+   protected CrossCollisionBlock(float var1, float var2, float var3, float var4, float var5, BlockBehaviour.Properties var6) {
       super(var6);
       this.collisionShapeByIndex = this.makeShapes(var1, var2, var5, 0.0F, var5);
       this.shapeByIndex = this.makeShapes(var1, var2, var3, 0.0F, var4);
+      UnmodifiableIterator var7 = this.stateDefinition.getPossibleStates().iterator();
+
+      while(var7.hasNext()) {
+         BlockState var8 = (BlockState)var7.next();
+         this.getAABBIndex(var8);
+      }
+
    }
 
    protected VoxelShape[] makeShapes(float var1, float var2, float var3, float var4, float var5) {
       float var6 = 8.0F - var1;
       float var7 = 8.0F + var1;
