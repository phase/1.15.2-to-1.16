--- net/minecraft/world/level/block/KelpPlantBlock.java
+++ net/minecraft/world/level/block/KelpPlantBlock.java
@@ -1,67 +1,31 @@
 package net.minecraft.world.level.block;
 
-import java.util.Random;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
-import net.minecraft.server.level.ServerLevel;
-import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.LevelAccessor;
-import net.minecraft.world.level.LevelReader;
+import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.material.Fluid;
 import net.minecraft.world.level.material.FluidState;
 import net.minecraft.world.level.material.Fluids;
+import net.minecraft.world.phys.shapes.Shapes;
 
-public class KelpPlantBlock extends Block implements LiquidBlockContainer {
-   private final KelpBlock top;
+public class KelpPlantBlock extends GrowingPlantBodyBlock implements LiquidBlockContainer {
+   protected KelpPlantBlock(BlockBehaviour.Properties var1) {
+      super(var1, Direction.UP, Shapes.block(), true);
+   }
 
-   protected KelpPlantBlock(KelpBlock var1, Block.Properties var2) {
-      super(var2);
-      this.top = var1;
+   protected GrowingPlantHeadBlock getHeadBlock() {
+      return (GrowingPlantHeadBlock)Blocks.KELP;
    }
 
    public FluidState getFluidState(BlockState var1) {
       return Fluids.WATER.getSource(false);
    }
 
-   public void tick(BlockState var1, ServerLevel var2, BlockPos var3, Random var4) {
-      if (!var1.canSurvive(var2, var3)) {
-         var2.destroyBlock(var3, true);
-      }
-
-      super.tick(var1, var2, var3, var4);
-   }
-
-   public BlockState updateShape(BlockState var1, Direction var2, BlockState var3, LevelAccessor var4, BlockPos var5, BlockPos var6) {
-      if (var2 == Direction.DOWN && !var1.canSurvive(var4, var5)) {
-         var4.getBlockTicks().scheduleTick(var5, this, 1);
-      }
-
-      if (var2 == Direction.UP) {
-         Block var7 = var3.getBlock();
-         if (var7 != this && var7 != this.top) {
-            return this.top.getStateForPlacement(var4);
-         }
-      }
-
-      var4.getLiquidTicks().scheduleTick(var5, Fluids.WATER, Fluids.WATER.getTickDelay(var4));
-      return super.updateShape(var1, var2, var3, var4, var5, var6);
-   }
-
-   public boolean canSurvive(BlockState var1, LevelReader var2, BlockPos var3) {
-      BlockPos var4 = var3.below();
-      BlockState var5 = var2.getBlockState(var4);
-      Block var6 = var5.getBlock();
-      return var6 != Blocks.MAGMA_BLOCK && (var6 == this || var5.isFaceSturdy(var2, var4, Direction.UP));
-   }
-
-   public ItemStack getCloneItemStack(BlockGetter var1, BlockPos var2, BlockState var3) {
-      return new ItemStack(Blocks.KELP);
-   }
-
    public boolean canPlaceLiquid(BlockGetter var1, BlockPos var2, BlockState var3, Fluid var4) {
       return false;
    }
 
    public boolean placeLiquid(LevelAccessor var1, BlockPos var2, BlockState var3, FluidState var4) {
