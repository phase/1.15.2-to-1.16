--- net/minecraft/world/level/block/StructureBlock.java
+++ net/minecraft/world/level/block/StructureBlock.java
@@ -10,32 +10,33 @@
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.entity.BlockEntity;
 import net.minecraft.world.level.block.entity.StructureBlockEntity;
+import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.StateDefinition;
 import net.minecraft.world.level.block.state.properties.BlockStateProperties;
 import net.minecraft.world.level.block.state.properties.EnumProperty;
 import net.minecraft.world.level.block.state.properties.StructureMode;
 import net.minecraft.world.phys.BlockHitResult;
 
 public class StructureBlock extends BaseEntityBlock {
    public static final EnumProperty<StructureMode> MODE;
 
-   protected StructureBlock(Block.Properties var1) {
+   protected StructureBlock(BlockBehaviour.Properties var1) {
       super(var1);
    }
 
    public BlockEntity newBlockEntity(BlockGetter var1) {
       return new StructureBlockEntity();
    }
 
    public InteractionResult use(BlockState var1, Level var2, BlockPos var3, Player var4, InteractionHand var5, BlockHitResult var6) {
       BlockEntity var7 = var2.getBlockEntity(var3);
       if (var7 instanceof StructureBlockEntity) {
-         return ((StructureBlockEntity)var7).usedBy(var4) ? InteractionResult.SUCCESS : InteractionResult.PASS;
+         return ((StructureBlockEntity)var7).usedBy(var4) ? InteractionResult.sidedSuccess(var2.isClientSide) : InteractionResult.PASS;
       } else {
          return InteractionResult.PASS;
       }
    }
 
