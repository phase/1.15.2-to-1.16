--- net/minecraft/world/level/block/CommandBlock.java
+++ net/minecraft/world/level/block/CommandBlock.java
@@ -13,13 +13,13 @@
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.level.BaseCommandBlock;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.GameRules;
 import net.minecraft.world.level.Level;
-import net.minecraft.world.level.LevelReader;
 import net.minecraft.world.level.block.entity.BlockEntity;
 import net.minecraft.world.level.block.entity.CommandBlockEntity;
+import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.StateDefinition;
 import net.minecraft.world.level.block.state.properties.BlockStateProperties;
 import net.minecraft.world.level.block.state.properties.BooleanProperty;
 import net.minecraft.world.level.block.state.properties.DirectionProperty;
@@ -30,11 +30,11 @@
 public class CommandBlock extends BaseEntityBlock {
    private static final Logger LOGGER = LogManager.getLogger();
    public static final DirectionProperty FACING;
    public static final BooleanProperty CONDITIONAL;
 
-   public CommandBlock(Block.Properties var1) {
+   public CommandBlock(BlockBehaviour.Properties var1) {
       super(var1);
       this.registerDefaultState((BlockState)((BlockState)((BlockState)this.stateDefinition.any()).setValue(FACING, Direction.NORTH)).setValue(CONDITIONAL, false));
    }
 
    public BlockEntity newBlockEntity(BlockGetter var1) {
@@ -52,11 +52,11 @@
             boolean var10 = var8.isPowered();
             var8.setPowered(var9);
             if (!var10 && !var8.isAutomatic() && var8.getMode() != CommandBlockEntity.Mode.SEQUENCE) {
                if (var9) {
                   var8.markConditionMet();
-                  var2.getBlockTicks().scheduleTick(var3, this, this.getTickDelay(var2));
+                  var2.getBlockTicks().scheduleTick(var3, this, 1);
                }
 
             }
          }
       }
@@ -77,11 +77,11 @@
             } else if (var6.isConditional()) {
                var7.setSuccessCount(0);
             }
 
             if (var6.isPowered() || var6.isAutomatic()) {
-               var2.getBlockTicks().scheduleTick(var3, this, this.getTickDelay(var2));
+               var2.getBlockTicks().scheduleTick(var3, this, 1);
             }
          } else if (var9 == CommandBlockEntity.Mode.REDSTONE) {
             if (var10) {
                this.execute(var1, var2, var3, var7, var8);
             } else if (var6.isConditional()) {
@@ -102,19 +102,15 @@
       }
 
       executeChain(var2, var3, (Direction)var1.getValue(FACING));
    }
 
-   public int getTickDelay(LevelReader var1) {
-      return 1;
-   }
-
    public InteractionResult use(BlockState var1, Level var2, BlockPos var3, Player var4, InteractionHand var5, BlockHitResult var6) {
       BlockEntity var7 = var2.getBlockEntity(var3);
       if (var7 instanceof CommandBlockEntity && var4.canUseGameMasterBlocks()) {
          var4.openCommandBlock((CommandBlockEntity)var7);
-         return InteractionResult.SUCCESS;
+         return InteractionResult.sidedSuccess(var2.isClientSide);
       } else {
          return InteractionResult.PASS;
       }
    }
 
@@ -170,20 +166,20 @@
    public BlockState getStateForPlacement(BlockPlaceContext var1) {
       return (BlockState)this.defaultBlockState().setValue(FACING, var1.getNearestLookingDirection().getOpposite());
    }
 
    private static void executeChain(Level var0, BlockPos var1, Direction var2) {
-      BlockPos.MutableBlockPos var3 = new BlockPos.MutableBlockPos(var1);
+      BlockPos.MutableBlockPos var3 = var1.mutable();
       GameRules var4 = var0.getGameRules();
 
       int var5;
       BlockState var6;
       for(var5 = var4.getInt(GameRules.RULE_MAX_COMMAND_CHAIN_LENGTH); var5-- > 0; var2 = (Direction)var6.getValue(FACING)) {
          var3.move(var2);
          var6 = var0.getBlockState(var3);
          Block var7 = var6.getBlock();
-         if (var7 != Blocks.CHAIN_COMMAND_BLOCK) {
+         if (!var6.is(Blocks.CHAIN_COMMAND_BLOCK)) {
             break;
          }
 
          BlockEntity var8 = var0.getBlockEntity(var3);
          if (!(var8 instanceof CommandBlockEntity)) {
