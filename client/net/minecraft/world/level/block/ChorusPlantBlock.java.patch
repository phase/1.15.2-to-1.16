--- net/minecraft/world/level/block/ChorusPlantBlock.java
+++ net/minecraft/world/level/block/ChorusPlantBlock.java
@@ -3,21 +3,22 @@
 import java.util.Iterator;
 import java.util.Random;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.server.level.ServerLevel;
-import net.minecraft.world.item.BlockPlaceContext;
+import net.minecraft.world.item.context.BlockPlaceContext;
 import net.minecraft.world.level.BlockGetter;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.LevelReader;
+import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.level.block.state.StateDefinition;
 import net.minecraft.world.level.block.state.properties.Property;
 import net.minecraft.world.level.pathfinder.PathComputationType;
 
 public class ChorusPlantBlock extends PipeBlock {
-   protected ChorusPlantBlock(Block.Properties var1) {
+   protected ChorusPlantBlock(BlockBehaviour.Properties var1) {
       super(0.3125F, var1);
       this.registerDefaultState((BlockState)((BlockState)((BlockState)((BlockState)((BlockState)((BlockState)((BlockState)this.stateDefinition.any()).setValue(NORTH, false)).setValue(EAST, false)).setValue(SOUTH, false)).setValue(WEST, false)).setValue(UP, false)).setValue(DOWN, false));
    }
 
    public BlockState getStateForPlacement(BlockPlaceContext var1) {
@@ -37,13 +38,12 @@
    public BlockState updateShape(BlockState var1, Direction var2, BlockState var3, LevelAccessor var4, BlockPos var5, BlockPos var6) {
       if (!var1.canSurvive(var4, var5)) {
          var4.getBlockTicks().scheduleTick(var5, this, 1);
          return super.updateShape(var1, var2, var3, var4, var5, var6);
       } else {
-         Block var7 = var3.getBlock();
-         boolean var8 = var7 == this || var7 == Blocks.CHORUS_FLOWER || var2 == Direction.DOWN && var7 == Blocks.END_STONE;
-         return (BlockState)var1.setValue((Property)PROPERTY_BY_DIRECTION.get(var2), var8);
+         boolean var7 = var3.getBlock() == this || var3.is(Blocks.CHORUS_FLOWER) || var2 == Direction.DOWN && var3.is(Blocks.END_STONE);
+         return (BlockState)var1.setValue((Property)PROPERTY_BY_DIRECTION.get(var2), var7);
       }
    }
 
    public void tick(BlockState var1, ServerLevel var2, BlockPos var3, Random var4) {
       if (!var1.canSurvive(var2, var3)) {
