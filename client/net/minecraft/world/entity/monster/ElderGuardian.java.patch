--- net/minecraft/world/entity/monster/ElderGuardian.java
+++ net/minecraft/world/entity/monster/ElderGuardian.java
@@ -1,20 +1,21 @@
 package net.minecraft.world.entity.monster;
 
 import java.util.Iterator;
 import java.util.List;
-import net.minecraft.core.BlockPos;
 import net.minecraft.network.protocol.game.ClientboundGameEventPacket;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.effect.MobEffect;
 import net.minecraft.world.effect.MobEffectInstance;
 import net.minecraft.world.effect.MobEffects;
 import net.minecraft.world.entity.EntityType;
+import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
+import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.level.Level;
 
 public class ElderGuardian extends Guardian {
    public static final float ELDER_SIZE_SCALE;
 
@@ -25,15 +26,12 @@
          this.randomStrollGoal.setInterval(400);
       }
 
    }
 
-   protected void registerAttributes() {
-      super.registerAttributes();
-      this.getAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).setBaseValue(0.30000001192092896D);
-      this.getAttribute(SharedMonsterAttributes.ATTACK_DAMAGE).setBaseValue(8.0D);
-      this.getAttribute(SharedMonsterAttributes.MAX_HEALTH).setBaseValue(80.0D);
+   public static AttributeSupplier.Builder createAttributes() {
+      return Guardian.createAttributes().add(Attributes.MOVEMENT_SPEED, 0.30000001192092896D).add(Attributes.ATTACK_DAMAGE, 8.0D).add(Attributes.MAX_HEALTH, 80.0D);
    }
 
    public int getAttackDuration() {
       return 60;
    }
@@ -65,28 +63,28 @@
          boolean var4 = true;
          boolean var5 = true;
          boolean var6 = true;
          Iterator var7 = var3.iterator();
 
-         label28:
+         label33:
          while(true) {
             ServerPlayer var8;
             do {
                if (!var7.hasNext()) {
-                  break label28;
+                  break label33;
                }
 
                var8 = (ServerPlayer)var7.next();
             } while(var8.hasEffect(var2) && var8.getEffect(var2).getAmplifier() >= 2 && var8.getEffect(var2).getDuration() >= 1200);
 
-            var8.connection.send(new ClientboundGameEventPacket(10, 0.0F));
+            var8.connection.send(new ClientboundGameEventPacket(10, this.isSilent() ? 0.0F : 1.0F));
             var8.addEffect(new MobEffectInstance(var2, 6000, 2));
          }
       }
 
       if (!this.hasRestriction()) {
-         this.restrictTo(new BlockPos(this), 16);
+         this.restrictTo(this.blockPosition(), 16);
       }
 
    }
 
    static {
