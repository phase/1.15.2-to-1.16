--- net/minecraft/world/entity/monster/Silverfish.java
+++ net/minecraft/world/entity/monster/Silverfish.java
@@ -11,10 +11,12 @@
 import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.MobType;
 import net.minecraft.world.entity.Pose;
+import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
+import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.entity.ai.goal.FloatGoal;
 import net.minecraft.world.entity.ai.goal.Goal;
 import net.minecraft.world.entity.ai.goal.MeleeAttackGoal;
 import net.minecraft.world.entity.ai.goal.RandomStrollGoal;
 import net.minecraft.world.entity.ai.goal.target.HurtByTargetGoal;
@@ -43,23 +45,20 @@
       this.goalSelector.addGoal(5, new Silverfish.SilverfishMergeWithStoneGoal(this));
       this.targetSelector.addGoal(1, (new HurtByTargetGoal(this, new Class[0])).setAlertOthers());
       this.targetSelector.addGoal(2, new NearestAttackableTargetGoal(this, Player.class, true));
    }
 
-   public double getRidingHeight() {
+   public double getMyRidingOffset() {
       return 0.1D;
    }
 
    protected float getStandingEyeHeight(Pose var1, EntityDimensions var2) {
-      return 0.1F;
+      return 0.13F;
    }
 
-   protected void registerAttributes() {
-      super.registerAttributes();
-      this.getAttribute(SharedMonsterAttributes.MAX_HEALTH).setBaseValue(8.0D);
-      this.getAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).setBaseValue(0.25D);
-      this.getAttribute(SharedMonsterAttributes.ATTACK_DAMAGE).setBaseValue(1.0D);
+   public static AttributeSupplier.Builder createAttributes() {
+      return Monster.createMonsterAttributes().add(Attributes.MAX_HEALTH, 8.0D).add(Attributes.MOVEMENT_SPEED, 0.25D).add(Attributes.ATTACK_DAMAGE, 1.0D);
    }
 
    protected boolean isMovementNoisy() {
       return false;
    }
@@ -134,11 +133,11 @@
          } else if (!this.mob.getNavigation().isDone()) {
             return false;
          } else {
             Random var1 = this.mob.getRandom();
             if (this.mob.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING) && var1.nextInt(10) == 0) {
-               this.selectedDirection = Direction.getRandomFace(var1);
+               this.selectedDirection = Direction.getRandom(var1);
                BlockPos var2 = (new BlockPos(this.mob.getX(), this.mob.getY() + 0.5D, this.mob.getZ())).relative(this.selectedDirection);
                BlockState var3 = this.mob.level.getBlockState(var2);
                if (InfestedBlock.isCompatibleHostBlock(var3)) {
                   this.doMerge = true;
                   return true;
@@ -193,11 +192,11 @@
       public void tick() {
          --this.lookForFriends;
          if (this.lookForFriends <= 0) {
             Level var1 = this.silverfish.level;
             Random var2 = this.silverfish.getRandom();
-            BlockPos var3 = new BlockPos(this.silverfish);
+            BlockPos var3 = this.silverfish.blockPosition();
 
             for(int var4 = 0; var4 <= 5 && var4 >= -5; var4 = (var4 <= 0 ? 1 : 0) - var4) {
                for(int var5 = 0; var5 <= 10 && var5 >= -10; var5 = (var5 <= 0 ? 1 : 0) - var5) {
                   for(int var6 = 0; var6 <= 10 && var6 >= -10; var6 = (var6 <= 0 ? 1 : 0) - var6) {
                      BlockPos var7 = var3.offset(var5, var4, var6);
