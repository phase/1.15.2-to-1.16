--- net/minecraft/world/entity/monster/Creeper.java
+++ net/minecraft/world/entity/monster/Creeper.java
@@ -8,16 +8,20 @@
 import net.minecraft.network.syncher.SynchedEntityData;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.util.Mth;
 import net.minecraft.world.InteractionHand;
+import net.minecraft.world.InteractionResult;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.effect.MobEffectInstance;
 import net.minecraft.world.entity.AreaEffectCloud;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
+import net.minecraft.world.entity.LightningBolt;
 import net.minecraft.world.entity.PowerableMob;
+import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
+import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.entity.ai.goal.AvoidEntityGoal;
 import net.minecraft.world.entity.ai.goal.FloatGoal;
 import net.minecraft.world.entity.ai.goal.LookAtPlayerGoal;
 import net.minecraft.world.entity.ai.goal.MeleeAttackGoal;
 import net.minecraft.world.entity.ai.goal.RandomLookAroundGoal;
@@ -25,11 +29,10 @@
 import net.minecraft.world.entity.ai.goal.WaterAvoidingRandomStrollGoal;
 import net.minecraft.world.entity.ai.goal.target.HurtByTargetGoal;
 import net.minecraft.world.entity.ai.goal.target.NearestAttackableTargetGoal;
 import net.minecraft.world.entity.animal.Cat;
 import net.minecraft.world.entity.animal.Ocelot;
-import net.minecraft.world.entity.global.LightningBolt;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.level.Explosion;
 import net.minecraft.world.level.GameRules;
@@ -60,13 +63,12 @@
       this.goalSelector.addGoal(6, new RandomLookAroundGoal(this));
       this.targetSelector.addGoal(1, new NearestAttackableTargetGoal(this, Player.class, true));
       this.targetSelector.addGoal(2, new HurtByTargetGoal(this, new Class[0]));
    }
 
-   protected void registerAttributes() {
-      super.registerAttributes();
-      this.getAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).setBaseValue(0.25D);
+   public static AttributeSupplier.Builder createAttributes() {
+      return Monster.createMonsterAttributes().add(Attributes.MOVEMENT_SPEED, 0.25D);
    }
 
    public int getMaxFallDistance() {
       return this.getTarget() == null ? 3 : 3 + (int)(this.getHealth() - 1.0F);
    }
@@ -186,22 +188,22 @@
    public void thunderHit(LightningBolt var1) {
       super.thunderHit(var1);
       this.entityData.set(DATA_IS_POWERED, true);
    }
 
-   protected boolean mobInteract(Player var1, InteractionHand var2) {
+   protected InteractionResult mobInteract(Player var1, InteractionHand var2) {
       ItemStack var3 = var1.getItemInHand(var2);
       if (var3.getItem() == Items.FLINT_AND_STEEL) {
          this.level.playSound(var1, this.getX(), this.getY(), this.getZ(), SoundEvents.FLINTANDSTEEL_USE, this.getSoundSource(), 1.0F, this.random.nextFloat() * 0.4F + 0.8F);
          if (!this.level.isClientSide) {
             this.ignite();
             var3.hurtAndBreak(1, var1, (var1x) -> {
                var1x.broadcastBreakEvent(var2);
             });
          }
 
-         return true;
+         return InteractionResult.sidedSuccess(this.level.isClientSide);
       } else {
          return super.mobInteract(var1, var2);
       }
    }
 
