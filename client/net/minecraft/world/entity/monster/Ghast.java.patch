--- net/minecraft/world/entity/monster/Ghast.java
+++ net/minecraft/world/entity/monster/Ghast.java
@@ -15,12 +15,15 @@
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.FlyingMob;
 import net.minecraft.world.entity.LivingEntity;
+import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.Pose;
+import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
+import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.entity.ai.control.MoveControl;
 import net.minecraft.world.entity.ai.goal.Goal;
 import net.minecraft.world.entity.ai.goal.target.NearestAttackableTargetGoal;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.entity.projectile.LargeFireball;
@@ -78,14 +81,12 @@
    protected void defineSynchedData() {
       super.defineSynchedData();
       this.entityData.define(DATA_IS_CHARGING, false);
    }
 
-   protected void registerAttributes() {
-      super.registerAttributes();
-      this.getAttribute(SharedMonsterAttributes.MAX_HEALTH).setBaseValue(10.0D);
-      this.getAttribute(SharedMonsterAttributes.FOLLOW_RANGE).setBaseValue(100.0D);
+   public static AttributeSupplier.Builder createAttributes() {
+      return Mob.createMobAttributes().add(Attributes.MAX_HEALTH, 10.0D).add(Attributes.FOLLOW_RANGE, 100.0D);
    }
 
    public SoundSource getSoundSource() {
       return SoundSource.HOSTILE;
    }
@@ -101,11 +102,11 @@
    protected SoundEvent getDeathSound() {
       return SoundEvents.GHAST_DEATH;
    }
 
    protected float getSoundVolume() {
-      return 10.0F;
+      return 5.0F;
    }
 
    public static boolean checkGhastSpawnRules(EntityType<Ghast> var0, LevelAccessor var1, MobSpawnType var2, BlockPos var3, Random var4) {
       return var1.getDifficulty() != Difficulty.PEACEFUL && var4.nextInt(20) == 0 && checkMobSpawnRules(var0, var1, var2, var3, var4);
    }
@@ -159,21 +160,24 @@
          LivingEntity var1 = this.ghast.getTarget();
          double var2 = 64.0D;
          if (var1.distanceToSqr(this.ghast) < 4096.0D && this.ghast.canSee(var1)) {
             Level var4 = this.ghast.level;
             ++this.chargeTime;
-            if (this.chargeTime == 10) {
-               var4.levelEvent((Player)null, 1015, new BlockPos(this.ghast), 0);
+            if (this.chargeTime == 10 && !this.ghast.isSilent()) {
+               var4.levelEvent((Player)null, 1015, this.ghast.blockPosition(), 0);
             }
 
             if (this.chargeTime == 20) {
                double var5 = 4.0D;
                Vec3 var7 = this.ghast.getViewVector(1.0F);
                double var8 = var1.getX() - (this.ghast.getX() + var7.x * 4.0D);
                double var10 = var1.getY(0.5D) - (0.5D + this.ghast.getY(0.5D));
                double var12 = var1.getZ() - (this.ghast.getZ() + var7.z * 4.0D);
-               var4.levelEvent((Player)null, 1016, new BlockPos(this.ghast), 0);
+               if (!this.ghast.isSilent()) {
+                  var4.levelEvent((Player)null, 1016, this.ghast.blockPosition(), 0);
+               }
+
                LargeFireball var14 = new LargeFireball(var4, this.ghast, var8, var10, var12);
                var14.explosionPower = this.ghast.getExplosionPower();
                var14.setPos(this.ghast.getX() + var7.x * 4.0D, this.ghast.getY(0.5D) + 0.5D, var14.getZ() + var7.z * 4.0D);
                var4.addFreshEntity(var14);
                this.chargeTime = -40;
