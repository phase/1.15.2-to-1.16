--- net/minecraft/world/entity/monster/WitherSkeleton.java
+++ net/minecraft/world/entity/monster/WitherSkeleton.java
@@ -14,23 +14,31 @@
 import net.minecraft.world.entity.EquipmentSlot;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.Pose;
 import net.minecraft.world.entity.SpawnGroupData;
+import net.minecraft.world.entity.ai.attributes.Attributes;
+import net.minecraft.world.entity.ai.goal.target.NearestAttackableTargetGoal;
+import net.minecraft.world.entity.monster.piglin.AbstractPiglin;
 import net.minecraft.world.entity.projectile.AbstractArrow;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.level.Level;
-import net.minecraft.world.level.LevelAccessor;
+import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.pathfinder.BlockPathTypes;
 
 public class WitherSkeleton extends AbstractSkeleton {
    public WitherSkeleton(EntityType<? extends WitherSkeleton> var1, Level var2) {
       super(var1, var2);
       this.setPathfindingMalus(BlockPathTypes.LAVA, 8.0F);
    }
 
+   protected void registerGoals() {
+      this.targetSelector.addGoal(3, new NearestAttackableTargetGoal(this, AbstractPiglin.class, true));
+      super.registerGoals();
+   }
+
    protected SoundEvent getAmbientSound() {
       return SoundEvents.WITHER_SKELETON_AMBIENT;
    }
 
    protected SoundEvent getHurtSound(DamageSource var1) {
@@ -64,13 +72,13 @@
 
    protected void populateDefaultEquipmentEnchantments(DifficultyInstance var1) {
    }
 
    @Nullable
-   public SpawnGroupData finalizeSpawn(LevelAccessor var1, DifficultyInstance var2, MobSpawnType var3, @Nullable SpawnGroupData var4, @Nullable CompoundTag var5) {
+   public SpawnGroupData finalizeSpawn(ServerLevelAccessor var1, DifficultyInstance var2, MobSpawnType var3, @Nullable SpawnGroupData var4, @Nullable CompoundTag var5) {
       SpawnGroupData var6 = super.finalizeSpawn(var1, var2, var3, var4, var5);
-      this.getAttribute(SharedMonsterAttributes.ATTACK_DAMAGE).setBaseValue(4.0D);
+      this.getAttribute(Attributes.ATTACK_DAMAGE).setBaseValue(4.0D);
       this.reassessWeaponGoal();
       return var6;
    }
 
    protected float getStandingEyeHeight(Pose var1, EntityDimensions var2) {
