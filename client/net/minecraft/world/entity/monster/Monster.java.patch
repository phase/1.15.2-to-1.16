--- net/minecraft/world/entity/monster/Monster.java
+++ net/minecraft/world/entity/monster/Monster.java
@@ -7,12 +7,15 @@
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.sounds.SoundSource;
 import net.minecraft.world.Difficulty;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.EntityType;
+import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.PathfinderMob;
+import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
+import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.item.ProjectileWeaponItem;
 import net.minecraft.world.level.Level;
@@ -91,19 +94,22 @@
 
    public static boolean checkAnyLightMonsterSpawnRules(EntityType<? extends Monster> var0, LevelAccessor var1, MobSpawnType var2, BlockPos var3, Random var4) {
       return var1.getDifficulty() != Difficulty.PEACEFUL && checkMobSpawnRules(var0, var1, var2, var3, var4);
    }
 
-   protected void registerAttributes() {
-      super.registerAttributes();
-      this.getAttributes().registerAttribute(SharedMonsterAttributes.ATTACK_DAMAGE);
+   public static AttributeSupplier.Builder createMonsterAttributes() {
+      return Mob.createMobAttributes().add(Attributes.ATTACK_DAMAGE);
    }
 
    protected boolean shouldDropExperience() {
       return true;
    }
 
+   protected boolean shouldDropLoot() {
+      return true;
+   }
+
    public boolean isPreventingPlayerRest(Player var1) {
       return true;
    }
 
    public ItemStack getProjectile(ItemStack var1) {
