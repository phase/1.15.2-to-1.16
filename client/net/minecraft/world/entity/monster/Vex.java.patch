--- net/minecraft/world/entity/monster/Vex.java
+++ net/minecraft/world/entity/monster/Vex.java
@@ -18,10 +18,12 @@
 import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.MoverType;
 import net.minecraft.world.entity.PathfinderMob;
 import net.minecraft.world.entity.SpawnGroupData;
+import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
+import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.entity.ai.control.MoveControl;
 import net.minecraft.world.entity.ai.goal.FloatGoal;
 import net.minecraft.world.entity.ai.goal.Goal;
 import net.minecraft.world.entity.ai.goal.LookAtPlayerGoal;
 import net.minecraft.world.entity.ai.goal.target.HurtByTargetGoal;
@@ -77,14 +79,12 @@
       this.targetSelector.addGoal(1, (new HurtByTargetGoal(this, new Class[]{Raider.class})).setAlertOthers());
       this.targetSelector.addGoal(2, new Vex.VexCopyOwnerTargetGoal(this));
       this.targetSelector.addGoal(3, new NearestAttackableTargetGoal(this, Player.class, true));
    }
 
-   protected void registerAttributes() {
-      super.registerAttributes();
-      this.getAttribute(SharedMonsterAttributes.MAX_HEALTH).setBaseValue(14.0D);
-      this.getAttribute(SharedMonsterAttributes.ATTACK_DAMAGE).setBaseValue(4.0D);
+   public static AttributeSupplier.Builder createAttributes() {
+      return Monster.createMonsterAttributes().add(Attributes.MAX_HEALTH, 14.0D).add(Attributes.ATTACK_DAMAGE, 4.0D);
    }
 
    protected void defineSynchedData() {
       super.defineSynchedData();
       this.entityData.define(DATA_FLAGS_ID, (byte)0);
@@ -226,11 +226,11 @@
       }
 
       public void tick() {
          BlockPos var1 = Vex.this.getBoundOrigin();
          if (var1 == null) {
-            var1 = new BlockPos(Vex.this);
+            var1 = Vex.this.blockPosition();
          }
 
          for(int var2 = 0; var2 < 3; ++var2) {
             BlockPos var3 = var1.offset(Vex.this.random.nextInt(15) - 7, Vex.this.random.nextInt(11) - 5, Vex.this.random.nextInt(15) - 7);
             if (Vex.this.level.isEmptyBlock(var3)) {
