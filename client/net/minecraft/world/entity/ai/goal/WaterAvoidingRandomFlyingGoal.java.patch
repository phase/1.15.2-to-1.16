--- net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal.java
+++ net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal.java
@@ -2,12 +2,12 @@
 
 import java.util.Iterator;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
-import net.minecraft.core.Vec3i;
 import net.minecraft.tags.BlockTags;
+import net.minecraft.tags.Tag;
 import net.minecraft.util.Mth;
 import net.minecraft.world.entity.PathfinderMob;
 import net.minecraft.world.entity.ai.util.RandomPos;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.LeavesBlock;
@@ -32,11 +32,11 @@
       return var1 == null ? super.getPosition() : var1;
    }
 
    @Nullable
    private Vec3 getTreePos() {
-      BlockPos var1 = new BlockPos(this.mob);
+      BlockPos var1 = this.mob.blockPosition();
       BlockPos.MutableBlockPos var2 = new BlockPos.MutableBlockPos();
       BlockPos.MutableBlockPos var3 = new BlockPos.MutableBlockPos();
       Iterable var4 = BlockPos.betweenClosed(Mth.floor(this.mob.getX() - 3.0D), Mth.floor(this.mob.getY() - 6.0D), Mth.floor(this.mob.getZ() - 3.0D), Mth.floor(this.mob.getX() + 3.0D), Mth.floor(this.mob.getY() + 6.0D), Mth.floor(this.mob.getZ() + 3.0D));
       Iterator var5 = var4.iterator();
 
@@ -49,12 +49,12 @@
             }
 
             var6 = (BlockPos)var5.next();
          } while(var1.equals(var6));
 
-         Block var7 = this.mob.level.getBlockState(var3.set((Vec3i)var6).move(Direction.DOWN)).getBlock();
-         var8 = var7 instanceof LeavesBlock || var7.is(BlockTags.LOGS);
-      } while(!var8 || !this.mob.level.isEmptyBlock(var6) || !this.mob.level.isEmptyBlock(var2.set((Vec3i)var6).move(Direction.UP)));
+         Block var7 = this.mob.level.getBlockState(var3.setWithOffset(var6, Direction.DOWN)).getBlock();
+         var8 = var7 instanceof LeavesBlock || var7.is((Tag)BlockTags.LOGS);
+      } while(!var8 || !this.mob.level.isEmptyBlock(var6) || !this.mob.level.isEmptyBlock(var2.setWithOffset(var6, Direction.UP)));
 
-      return new Vec3(var6);
+      return Vec3.atBottomCenterOf(var6);
    }
 }
