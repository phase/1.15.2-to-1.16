--- net/minecraft/world/entity/ai/goal/DolphinJumpGoal.java
+++ net/minecraft/world/entity/ai/goal/DolphinJumpGoal.java
@@ -26,11 +26,11 @@
          return false;
       } else {
          Direction var1 = this.dolphin.getMotionDirection();
          int var2 = var1.getStepX();
          int var3 = var1.getStepZ();
-         BlockPos var4 = new BlockPos(this.dolphin);
+         BlockPos var4 = this.dolphin.blockPosition();
          int[] var5 = STEPS_TO_CHECK;
          int var6 = var5.length;
 
          for(int var7 = 0; var7 < var6; ++var7) {
             int var8 = var5[var7];
@@ -52,11 +52,11 @@
       return this.dolphin.level.getBlockState(var1.offset(var2 * var4, 1, var3 * var4)).isAir() && this.dolphin.level.getBlockState(var1.offset(var2 * var4, 2, var3 * var4)).isAir();
    }
 
    public boolean canContinueToUse() {
       double var1 = this.dolphin.getDeltaMovement().y;
-      return (var1 * var1 >= 0.029999999329447746D || this.dolphin.xRot == 0.0F || Math.abs(this.dolphin.xRot) >= 10.0F || !this.dolphin.isInWater()) && !this.dolphin.onGround;
+      return (var1 * var1 >= 0.029999999329447746D || this.dolphin.xRot == 0.0F || Math.abs(this.dolphin.xRot) >= 10.0F || !this.dolphin.isInWater()) && !this.dolphin.isOnGround();
    }
 
    public boolean isInterruptable() {
       return false;
    }
@@ -72,11 +72,11 @@
    }
 
    public void tick() {
       boolean var1 = this.breached;
       if (!var1) {
-         FluidState var2 = this.dolphin.level.getFluidState(new BlockPos(this.dolphin));
+         FluidState var2 = this.dolphin.level.getFluidState(this.dolphin.blockPosition());
          this.breached = var2.is(FluidTags.WATER);
       }
 
       if (this.breached && !var1) {
          this.dolphin.playSound(SoundEvents.DOLPHIN_JUMP, 1.0F, 1.0F);
