--- net/minecraft/world/entity/AgableMob.java
+++ net/minecraft/world/entity/AgableMob.java
@@ -5,15 +5,10 @@
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.network.syncher.EntityDataAccessor;
 import net.minecraft.network.syncher.EntityDataSerializers;
 import net.minecraft.network.syncher.SynchedEntityData;
 import net.minecraft.world.DifficultyInstance;
-import net.minecraft.world.InteractionHand;
-import net.minecraft.world.entity.player.Player;
-import net.minecraft.world.item.Item;
-import net.minecraft.world.item.ItemStack;
-import net.minecraft.world.item.SpawnEggItem;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
 
 public abstract class AgableMob extends PathfinderMob {
    private static final EntityDataAccessor<Boolean> DATA_BABY_ID;
@@ -40,45 +35,19 @@
    }
 
    @Nullable
    public abstract AgableMob getBreedOffspring(AgableMob var1);
 
-   protected void onOffspringSpawnedFromEgg(Player var1, AgableMob var2) {
-   }
-
-   public boolean mobInteract(Player var1, InteractionHand var2) {
-      ItemStack var3 = var1.getItemInHand(var2);
-      Item var4 = var3.getItem();
-      if (var4 instanceof SpawnEggItem && ((SpawnEggItem)var4).spawnsEntity(var3.getTag(), this.getType())) {
-         if (!this.level.isClientSide) {
-            AgableMob var5 = this.getBreedOffspring(this);
-            if (var5 != null) {
-               var5.setAge(-24000);
-               var5.moveTo(this.getX(), this.getY(), this.getZ(), 0.0F, 0.0F);
-               this.level.addFreshEntity(var5);
-               if (var3.hasCustomHoverName()) {
-                  var5.setCustomName(var3.getHoverName());
-               }
-
-               this.onOffspringSpawnedFromEgg(var1, var5);
-               if (!var1.abilities.instabuild) {
-                  var3.shrink(1);
-               }
-            }
-         }
-
-         return true;
-      } else {
-         return false;
-      }
-   }
-
    protected void defineSynchedData() {
       super.defineSynchedData();
       this.entityData.define(DATA_BABY_ID, false);
    }
 
+   public boolean canBreed() {
+      return false;
+   }
+
    public int getAge() {
       if (this.level.isClientSide) {
          return (Boolean)this.entityData.get(DATA_BABY_ID) ? -1 : 1;
       } else {
          return this.age;
@@ -170,10 +139,14 @@
 
    public boolean isBaby() {
       return this.getAge() < 0;
    }
 
+   public void setBaby(boolean var1) {
+      this.setAge(var1 ? -24000 : 0);
+   }
+
    static {
       DATA_BABY_ID = SynchedEntityData.defineId(AgableMob.class, EntityDataSerializers.BOOLEAN);
    }
 
    public static class AgableMobGroupData implements SpawnGroupData {
