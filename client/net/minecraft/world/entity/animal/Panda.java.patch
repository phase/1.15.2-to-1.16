--- net/minecraft/world/entity/animal/Panda.java
+++ net/minecraft/world/entity/animal/Panda.java
@@ -7,32 +7,35 @@
 import java.util.List;
 import java.util.Random;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
-import net.minecraft.core.Vec3i;
 import net.minecraft.core.particles.ItemParticleOption;
 import net.minecraft.core.particles.ParticleTypes;
 import net.minecraft.nbt.CompoundTag;
 import net.minecraft.network.syncher.EntityDataAccessor;
 import net.minecraft.network.syncher.EntityDataSerializers;
 import net.minecraft.network.syncher.SynchedEntityData;
+import net.minecraft.server.level.ServerLevel;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.util.Mth;
 import net.minecraft.world.DifficultyInstance;
 import net.minecraft.world.InteractionHand;
+import net.minecraft.world.InteractionResult;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.AgableMob;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntitySelector;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.EquipmentSlot;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.SpawnGroupData;
+import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
+import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.entity.ai.control.MoveControl;
 import net.minecraft.world.entity.ai.goal.AvoidEntityGoal;
 import net.minecraft.world.entity.ai.goal.BreedGoal;
 import net.minecraft.world.entity.ai.goal.FloatGoal;
 import net.minecraft.world.entity.ai.goal.FollowParentGoal;
@@ -45,20 +48,18 @@
 import net.minecraft.world.entity.ai.goal.WaterAvoidingRandomStrollGoal;
 import net.minecraft.world.entity.ai.goal.target.HurtByTargetGoal;
 import net.minecraft.world.entity.ai.targeting.TargetingConditions;
 import net.minecraft.world.entity.item.ItemEntity;
 import net.minecraft.world.entity.monster.Monster;
-import net.minecraft.world.entity.monster.SharedMonsterAttributes;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.Item;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
-import net.minecraft.world.item.SpawnEggItem;
 import net.minecraft.world.item.crafting.Ingredient;
 import net.minecraft.world.level.GameRules;
 import net.minecraft.world.level.Level;
-import net.minecraft.world.level.LevelAccessor;
+import net.minecraft.world.level.ServerLevelAccessor;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
 import net.minecraft.world.phys.Vec3;
 
 public class Panda extends Animal {
@@ -227,18 +228,18 @@
       this.setMainGene(Panda.Gene.byName(var1.getString("MainGene")));
       this.setHiddenGene(Panda.Gene.byName(var1.getString("HiddenGene")));
    }
 
    @Nullable
-   public AgableMob getBreedOffspring(AgableMob var1) {
-      Panda var2 = (Panda)EntityType.PANDA.create(this.level);
-      if (var1 instanceof Panda) {
-         var2.setGeneFromParents(this, (Panda)var1);
+   public AgableMob getBreedOffspring(ServerLevel var1, AgableMob var2) {
+      Panda var3 = (Panda)EntityType.PANDA.create(var1);
+      if (var2 instanceof Panda) {
+         var3.setGeneFromParents(this, (Panda)var2);
       }
 
-      var2.setAttributes();
-      return var2;
+      var3.setAttributes();
+      return var3;
    }
 
    protected void registerGoals() {
       this.goalSelector.addGoal(0, new FloatGoal(this));
       this.goalSelector.addGoal(2, new Panda.PandaPanicGoal(this, 2.0D));
@@ -257,14 +258,12 @@
       this.goalSelector.addGoal(13, new FollowParentGoal(this, 1.25D));
       this.goalSelector.addGoal(14, new WaterAvoidingRandomStrollGoal(this, 1.0D));
       this.targetSelector.addGoal(1, (new Panda.PandaHurtByTargetGoal(this, new Class[0])).setAlertOthers(new Class[0]));
    }
 
-   protected void registerAttributes() {
-      super.registerAttributes();
-      this.getAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).setBaseValue(0.15000000596046448D);
-      this.getAttributes().registerAttribute(SharedMonsterAttributes.ATTACK_DAMAGE).setBaseValue(6.0D);
+   public static AttributeSupplier.Builder createAttributes() {
+      return Mob.createMobAttributes().add(Attributes.MOVEMENT_SPEED, 0.15000000596046448D).add(Attributes.ATTACK_DAMAGE, 6.0D);
    }
 
    public Panda.Gene getVariant() {
       return Panda.Gene.getVariantFromGenes(this.getMainGene(), this.getHiddenGene());
    }
@@ -489,10 +488,11 @@
 
    }
 
    protected void pickUpItem(ItemEntity var1) {
       if (this.getItemBySlot(EquipmentSlot.MAINHAND).isEmpty() && PANDA_ITEMS.test(var1)) {
+         this.onItemPickup(var1);
          ItemStack var2 = var1.getItem();
          this.setItemSlot(EquipmentSlot.MAINHAND, var2);
          this.handDropChances[EquipmentSlot.MAINHAND.getIndex()] = 2.0F;
          this.take(var1, var2.getCount());
          var1.remove();
@@ -504,17 +504,16 @@
       this.sit(false);
       return super.hurt(var1, var2);
    }
 
    @Nullable
-   public SpawnGroupData finalizeSpawn(LevelAccessor var1, DifficultyInstance var2, MobSpawnType var3, @Nullable SpawnGroupData var4, @Nullable CompoundTag var5) {
+   public SpawnGroupData finalizeSpawn(ServerLevelAccessor var1, DifficultyInstance var2, MobSpawnType var3, @Nullable SpawnGroupData var4, @Nullable CompoundTag var5) {
       this.setMainGene(Panda.Gene.getRandom(this.random));
       this.setHiddenGene(Panda.Gene.getRandom(this.random));
       this.setAttributes();
       if (var4 == null) {
-         var4 = new AgableMob.AgableMobGroupData();
-         ((AgableMob.AgableMobGroupData)var4).setBabySpawnChance(0.2F);
+         var4 = new AgableMob.AgableMobGroupData(0.2F);
       }
 
       return super.finalizeSpawn(var1, var2, var3, (SpawnGroupData)var4, var5);
    }
 
@@ -549,15 +548,15 @@
       return this.random.nextBoolean() ? this.getMainGene() : this.getHiddenGene();
    }
 
    public void setAttributes() {
       if (this.isWeak()) {
-         this.getAttribute(SharedMonsterAttributes.MAX_HEALTH).setBaseValue(10.0D);
+         this.getAttribute(Attributes.MAX_HEALTH).setBaseValue(10.0D);
       }
 
       if (this.isLazy()) {
-         this.getAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).setBaseValue(0.07000000029802322D);
+         this.getAttribute(Attributes.MOVEMENT_SPEED).setBaseValue(0.07000000029802322D);
       }
 
    }
 
    private void tryToSit() {
@@ -567,19 +566,17 @@
          this.sit(true);
       }
 
    }
 
-   public boolean mobInteract(Player var1, InteractionHand var2) {
+   public InteractionResult mobInteract(Player var1, InteractionHand var2) {
       ItemStack var3 = var1.getItemInHand(var2);
-      if (var3.getItem() instanceof SpawnEggItem) {
-         return super.mobInteract(var1, var2);
-      } else if (this.isScared()) {
-         return false;
+      if (this.isScared()) {
+         return InteractionResult.PASS;
       } else if (this.isOnBack()) {
          this.setOnBack(false);
-         return true;
+         return InteractionResult.sidedSuccess(this.level.isClientSide);
       } else if (this.isFood(var3)) {
          if (this.getTarget() != null) {
             this.gotBamboo = true;
          }
 
@@ -589,11 +586,11 @@
          } else if (!this.level.isClientSide && this.getAge() == 0 && this.canFallInLove()) {
             this.usePlayerItem(var1, var3);
             this.setInLove(var1);
          } else {
             if (this.level.isClientSide || this.isSitting() || this.isInWater()) {
-               return false;
+               return InteractionResult.PASS;
             }
 
             this.tryToSit();
             this.eat(true);
             ItemStack var4 = this.getItemBySlot(EquipmentSlot.MAINHAND);
@@ -603,14 +600,13 @@
 
             this.setItemSlot(EquipmentSlot.MAINHAND, new ItemStack(var3.getItem(), 1));
             this.usePlayerItem(var1, var3);
          }
 
-         var1.swing(var2, true);
-         return true;
+         return InteractionResult.SUCCESS;
       } else {
-         return false;
+         return InteractionResult.PASS;
       }
    }
 
    @Nullable
    protected SoundEvent getAmbientSound() {
@@ -849,19 +845,19 @@
             return false;
          }
       }
 
       private boolean canFindBamboo() {
-         BlockPos var1 = new BlockPos(this.panda);
+         BlockPos var1 = this.panda.blockPosition();
          BlockPos.MutableBlockPos var2 = new BlockPos.MutableBlockPos();
 
          for(int var3 = 0; var3 < 3; ++var3) {
             for(int var4 = 0; var4 < 8; ++var4) {
                for(int var5 = 0; var5 <= var4; var5 = var5 > 0 ? -var5 : 1 - var5) {
                   for(int var6 = var5 < var4 && var5 > -var4 ? var4 : 0; var6 <= var4; var6 = var6 > 0 ? -var6 : 1 - var6) {
-                     var2.set((Vec3i)var1).move(var5, var3, var6);
-                     if (this.level.getBlockState(var2).getBlock() == Blocks.BAMBOO) {
+                     var2.setWithOffset(var1, var5, var3, var6);
+                     if (this.level.getBlockState(var2).is(Blocks.BAMBOO)) {
                         return true;
                      }
                   }
                }
             }
@@ -923,11 +919,11 @@
 
                if ((double)Math.abs(var5) > 0.5D) {
                   var3 = (int)((float)var3 + var5 / Math.abs(var5));
                }
 
-               if (this.panda.level.getBlockState((new BlockPos(this.panda)).offset(var2, -1, var3)).isAir()) {
+               if (this.panda.level.getBlockState(this.panda.blockPosition().offset(var2, -1, var3)).isAir()) {
                   return true;
                } else if (this.panda.isPlayful() && this.panda.random.nextInt(60) == 1) {
                   return true;
                } else {
                   return this.panda.random.nextInt(500) == 1;
