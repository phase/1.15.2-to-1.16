--- net/minecraft/world/entity/animal/horse/Llama.java
+++ net/minecraft/world/entity/animal/horse/Llama.java
@@ -19,10 +19,12 @@
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.MobSpawnType;
 import net.minecraft.world.entity.SpawnGroupData;
+import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
+import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.entity.ai.goal.BreedGoal;
 import net.minecraft.world.entity.ai.goal.FloatGoal;
 import net.minecraft.world.entity.ai.goal.FollowParentGoal;
 import net.minecraft.world.entity.ai.goal.LlamaFollowCaravanGoal;
 import net.minecraft.world.entity.ai.goal.LookAtPlayerGoal;
@@ -34,25 +36,26 @@
 import net.minecraft.world.entity.ai.goal.target.HurtByTargetGoal;
 import net.minecraft.world.entity.ai.goal.target.NearestAttackableTargetGoal;
 import net.minecraft.world.entity.animal.Animal;
 import net.minecraft.world.entity.animal.Wolf;
 import net.minecraft.world.entity.monster.RangedAttackMob;
-import net.minecraft.world.entity.monster.SharedMonsterAttributes;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.entity.projectile.LlamaSpit;
 import net.minecraft.world.item.DyeColor;
 import net.minecraft.world.item.Item;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
+import net.minecraft.world.item.crafting.Ingredient;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.WoolCarpetBlock;
 import net.minecraft.world.level.block.state.BlockState;
 
 public class Llama extends AbstractChestedHorse implements RangedAttackMob {
+   private static final Ingredient FOOD_ITEMS;
    private static final EntityDataAccessor<Integer> DATA_STRENGTH_ID;
    private static final EntityDataAccessor<Integer> DATA_SWAG_ID;
    private static final EntityDataAccessor<Integer> DATA_VARIANT_ID;
    private boolean didSpit;
    @Nullable
@@ -97,11 +100,11 @@
       this.setVariant(var1.getInt("Variant"));
       if (var1.contains("DecorItem", 10)) {
          this.inventory.setItem(1, ItemStack.of(var1.getCompound("DecorItem")));
       }
 
-      this.updateEquipment();
+      this.updateContainerEquipment();
    }
 
    protected void registerGoals() {
       this.goalSelector.addGoal(0, new FloatGoal(this));
       this.goalSelector.addGoal(1, new RunAroundLikeCrazyGoal(this, 1.2D));
@@ -115,13 +118,12 @@
       this.goalSelector.addGoal(8, new RandomLookAroundGoal(this));
       this.targetSelector.addGoal(1, new Llama.LlamaHurtByTargetGoal(this));
       this.targetSelector.addGoal(2, new Llama.LlamaAttackWolfGoal(this));
    }
 
-   protected void registerAttributes() {
-      super.registerAttributes();
-      this.getAttribute(SharedMonsterAttributes.FOLLOW_RANGE).setBaseValue(40.0D);
+   public static AttributeSupplier.Builder createAttributes() {
+      return createBaseChestedHorseAttributes().add(Attributes.FOLLOW_RANGE, 40.0D);
    }
 
    protected void defineSynchedData() {
       super.defineSynchedData();
       this.entityData.define(DATA_STRENGTH_ID, 0);
@@ -144,22 +146,26 @@
    public void positionRider(Entity var1) {
       if (this.hasPassenger(var1)) {
          float var2 = Mth.cos(this.yBodyRot * 0.017453292F);
          float var3 = Mth.sin(this.yBodyRot * 0.017453292F);
          float var4 = 0.3F;
-         var1.setPos(this.getX() + (double)(0.3F * var3), this.getY() + this.getRideHeight() + var1.getRidingHeight(), this.getZ() - (double)(0.3F * var2));
+         var1.setPos(this.getX() + (double)(0.3F * var3), this.getY() + this.getPassengersRidingOffset() + var1.getMyRidingOffset(), this.getZ() - (double)(0.3F * var2));
       }
    }
 
-   public double getRideHeight() {
+   public double getPassengersRidingOffset() {
       return (double)this.getBbHeight() * 0.67D;
    }
 
    public boolean canBeControlledByRider() {
       return false;
    }
 
+   public boolean isFood(ItemStack var1) {
+      return FOOD_ITEMS.test(var1);
+   }
+
    protected boolean handleEating(Player var1, ItemStack var2) {
       byte var3 = 0;
       byte var4 = 0;
       float var5 = 0.0F;
       boolean var6 = false;
@@ -198,18 +204,21 @@
             this.modifyTemper(var4);
          }
       }
 
       if (var6 && !this.isSilent()) {
-         this.level.playSound((Player)null, this.getX(), this.getY(), this.getZ(), SoundEvents.LLAMA_EAT, this.getSoundSource(), 1.0F, 1.0F + (this.random.nextFloat() - this.random.nextFloat()) * 0.2F);
+         SoundEvent var8 = this.getEatingSound();
+         if (var8 != null) {
+            this.level.playSound((Player)null, this.getX(), this.getY(), this.getZ(), this.getEatingSound(), this.getSoundSource(), 1.0F, 1.0F + (this.random.nextFloat() - this.random.nextFloat()) * 0.2F);
+         }
       }
 
       return var6;
    }
 
    protected boolean isImmobile() {
-      return this.getHealth() <= 0.0F || this.isEating();
+      return this.isDeadOrDying() || this.isEating();
    }
 
    @Nullable
    public SpawnGroupData finalizeSpawn(LevelAccessor var1, DifficultyInstance var2, MobSpawnType var3, @Nullable SpawnGroupData var4, @Nullable CompoundTag var5) {
       this.setRandomStrength();
@@ -239,10 +248,15 @@
 
    protected SoundEvent getDeathSound() {
       return SoundEvents.LLAMA_DEATH;
    }
 
+   @Nullable
+   protected SoundEvent getEatingSound() {
+      return SoundEvents.LLAMA_EAT;
+   }
+
    protected void playStepSound(BlockPos var1, BlockState var2) {
       this.playSound(SoundEvents.LLAMA_STEP, 0.15F, 1.0F);
    }
 
    protected void playChestEquipsSound() {
@@ -259,20 +273,24 @@
 
    public int getInventoryColumns() {
       return this.getStrength();
    }
 
-   public boolean wearsArmor() {
+   public boolean canWearArmor() {
       return true;
    }
 
+   public boolean isWearingArmor() {
+      return !this.inventory.getItem(1).isEmpty();
+   }
+
    public boolean isArmor(ItemStack var1) {
       Item var2 = var1.getItem();
       return ItemTags.CARPETS.contains(var2);
    }
 
-   public boolean canBeSaddled() {
+   public boolean isSaddleable() {
       return false;
    }
 
    public void containerChanged(Container var1) {
       DyeColor var2 = this.getSwag();
@@ -282,13 +300,13 @@
          this.playSound(SoundEvents.LLAMA_SWAG, 0.5F, 1.0F);
       }
 
    }
 
-   protected void updateEquipment() {
+   protected void updateContainerEquipment() {
       if (!this.level.isClientSide) {
-         super.updateEquipment();
+         super.updateContainerEquipment();
          this.setSwag(getDyeColor(this.inventory.getItem(1)));
       }
    }
 
    private void setSwag(@Nullable DyeColor var1) {
@@ -338,11 +356,14 @@
       double var3 = var1.getX() - this.getX();
       double var5 = var1.getY(0.3333333333333333D) - var2.getY();
       double var7 = var1.getZ() - this.getZ();
       float var9 = Mth.sqrt(var3 * var3 + var7 * var7) * 0.2F;
       var2.shoot(var3, var5 + (double)var9, var7, 1.5F, 10.0F);
-      this.level.playSound((Player)null, this.getX(), this.getY(), this.getZ(), SoundEvents.LLAMA_SPIT, this.getSoundSource(), 1.0F, 1.0F + (this.random.nextFloat() - this.random.nextFloat()) * 0.2F);
+      if (!this.isSilent()) {
+         this.level.playSound((Player)null, this.getX(), this.getY(), this.getZ(), SoundEvents.LLAMA_SPIT, this.getSoundSource(), 1.0F, 1.0F + (this.random.nextFloat() - this.random.nextFloat()) * 0.2F);
+      }
+
       this.level.addFreshEntity(var2);
       this.didSpit = true;
    }
 
    private void setDidSpit(boolean var1) {
@@ -415,10 +436,11 @@
    public void performRangedAttack(LivingEntity var1, float var2) {
       this.spit(var1);
    }
 
    static {
+      FOOD_ITEMS = Ingredient.of(Items.WHEAT, Blocks.HAY_BLOCK.asItem());
       DATA_STRENGTH_ID = SynchedEntityData.defineId(Llama.class, EntityDataSerializers.INT);
       DATA_SWAG_ID = SynchedEntityData.defineId(Llama.class, EntityDataSerializers.INT);
       DATA_VARIANT_ID = SynchedEntityData.defineId(Llama.class, EntityDataSerializers.INT);
    }
 
