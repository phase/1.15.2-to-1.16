--- net/minecraft/world/entity/animal/horse/SkeletonHorse.java
+++ net/minecraft/world/entity/animal/horse/SkeletonHorse.java
@@ -8,11 +8,12 @@
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.AgableMob;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.MobType;
-import net.minecraft.world.entity.monster.SharedMonsterAttributes;
+import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
+import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.item.SpawnEggItem;
 import net.minecraft.world.level.Level;
@@ -24,17 +25,18 @@
 
    public SkeletonHorse(EntityType<? extends SkeletonHorse> var1, Level var2) {
       super(var1, var2);
    }
 
-   protected void registerAttributes() {
-      super.registerAttributes();
-      this.getAttribute(SharedMonsterAttributes.MAX_HEALTH).setBaseValue(15.0D);
-      this.getAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).setBaseValue(0.20000000298023224D);
-      this.getAttribute(JUMP_STRENGTH).setBaseValue(this.generateRandomJumpStrength());
+   public static AttributeSupplier.Builder createAttributes() {
+      return createBaseHorseAttributes().add(Attributes.MAX_HEALTH, 15.0D).add(Attributes.MOVEMENT_SPEED, 0.20000000298023224D);
    }
 
+   protected void randomizeAttributes() {
+      this.getAttribute(Attributes.JUMP_STRENGTH).setBaseValue(this.generateRandomJumpStrength());
+   }
+
    protected void addBehaviourGoals() {
    }
 
    protected SoundEvent getAmbientSound() {
       super.getAmbientSound();
@@ -90,12 +92,12 @@
 
    public MobType getMobType() {
       return MobType.UNDEAD;
    }
 
-   public double getRideHeight() {
-      return super.getRideHeight() - 0.1875D;
+   public double getPassengersRidingOffset() {
+      return super.getPassengersRidingOffset() - 0.1875D;
    }
 
    public void aiStep() {
       super.aiStep();
       if (this.isTrap() && this.trapTime++ >= 18000) {
