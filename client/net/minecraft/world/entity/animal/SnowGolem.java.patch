--- net/minecraft/world/entity/animal/SnowGolem.java
+++ net/minecraft/world/entity/animal/SnowGolem.java
@@ -6,36 +6,42 @@
 import net.minecraft.network.syncher.EntityDataAccessor;
 import net.minecraft.network.syncher.EntityDataSerializers;
 import net.minecraft.network.syncher.SynchedEntityData;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundEvents;
+import net.minecraft.sounds.SoundSource;
 import net.minecraft.util.Mth;
 import net.minecraft.world.InteractionHand;
+import net.minecraft.world.InteractionResult;
 import net.minecraft.world.damagesource.DamageSource;
+import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityDimensions;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.Mob;
 import net.minecraft.world.entity.Pose;
+import net.minecraft.world.entity.Shearable;
+import net.minecraft.world.entity.ai.attributes.AttributeSupplier;
+import net.minecraft.world.entity.ai.attributes.Attributes;
 import net.minecraft.world.entity.ai.goal.LookAtPlayerGoal;
 import net.minecraft.world.entity.ai.goal.RandomLookAroundGoal;
 import net.minecraft.world.entity.ai.goal.RangedAttackGoal;
 import net.minecraft.world.entity.ai.goal.WaterAvoidingRandomStrollGoal;
 import net.minecraft.world.entity.ai.goal.target.NearestAttackableTargetGoal;
 import net.minecraft.world.entity.monster.Enemy;
 import net.minecraft.world.entity.monster.RangedAttackMob;
-import net.minecraft.world.entity.monster.SharedMonsterAttributes;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.entity.projectile.Snowball;
 import net.minecraft.world.item.ItemStack;
 import net.minecraft.world.item.Items;
 import net.minecraft.world.level.GameRules;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.Blocks;
 import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.phys.Vec3;
 
-public class SnowGolem extends AbstractGolem implements RangedAttackMob {
+public class SnowGolem extends AbstractGolem implements Shearable, RangedAttackMob {
    private static final EntityDataAccessor<Byte> DATA_PUMPKIN_ID;
 
    public SnowGolem(EntityType<? extends SnowGolem> var1, Level var2) {
       super(var1, var2);
    }
@@ -48,14 +54,12 @@
       this.targetSelector.addGoal(1, new NearestAttackableTargetGoal(this, Mob.class, 10, true, false, (var0) -> {
          return var0 instanceof Enemy;
       }));
    }
 
-   protected void registerAttributes() {
-      super.registerAttributes();
-      this.getAttribute(SharedMonsterAttributes.MAX_HEALTH).setBaseValue(4.0D);
-      this.getAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).setBaseValue(0.20000000298023224D);
+   public static AttributeSupplier.Builder createAttributes() {
+      return Mob.createMobAttributes().add(Attributes.MAX_HEALTH, 4.0D).add(Attributes.MOVEMENT_SPEED, 0.20000000298023224D);
    }
 
    protected void defineSynchedData() {
       super.defineSynchedData();
       this.entityData.define(DATA_PUMPKIN_ID, (byte)16);
@@ -72,20 +76,20 @@
          this.setPumpkin(var1.getBoolean("Pumpkin"));
       }
 
    }
 
+   public boolean isSensitiveToWater() {
+      return true;
+   }
+
    public void aiStep() {
       super.aiStep();
       if (!this.level.isClientSide) {
          int var1 = Mth.floor(this.getX());
          int var2 = Mth.floor(this.getY());
          int var3 = Mth.floor(this.getZ());
-         if (this.isInWaterRainOrBubble()) {
-            this.hurt(DamageSource.DROWN, 1.0F);
-         }
-
          if (this.level.getBiome(new BlockPos(var1, 0, var3)).getTemperature(new BlockPos(var1, var2, var3)) > 1.0F) {
             this.hurt(DamageSource.ON_FIRE, 1.0F);
          }
 
          if (!this.level.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)) {
@@ -113,34 +117,47 @@
       double var6 = var1.getX() - this.getX();
       double var8 = var4 - var3.getY();
       double var10 = var1.getZ() - this.getZ();
       float var12 = Mth.sqrt(var6 * var6 + var10 * var10) * 0.2F;
       var3.shoot(var6, var8 + (double)var12, var10, 1.6F, 12.0F);
-      this.playSound(SoundEvents.SNOW_GOLEM_SHOOT, 1.0F, 1.0F / (this.getRandom().nextFloat() * 0.4F + 0.8F));
+      this.playSound(SoundEvents.SNOW_GOLEM_SHOOT, 1.0F, 0.4F / (this.getRandom().nextFloat() * 0.4F + 0.8F));
       this.level.addFreshEntity(var3);
    }
 
    protected float getStandingEyeHeight(Pose var1, EntityDimensions var2) {
       return 1.7F;
    }
 
-   protected boolean mobInteract(Player var1, InteractionHand var2) {
+   protected InteractionResult mobInteract(Player var1, InteractionHand var2) {
       ItemStack var3 = var1.getItemInHand(var2);
-      if (var3.getItem() == Items.SHEARS && this.hasPumpkin()) {
+      if (var3.getItem() == Items.SHEARS && this.readyForShearing()) {
+         this.shear(SoundSource.PLAYERS);
          if (!this.level.isClientSide) {
-            this.setPumpkin(false);
             var3.hurtAndBreak(1, var1, (var1x) -> {
                var1x.broadcastBreakEvent(var2);
             });
          }
 
-         return true;
+         return InteractionResult.sidedSuccess(this.level.isClientSide);
       } else {
-         return false;
+         return InteractionResult.PASS;
       }
    }
 
+   public void shear(SoundSource var1) {
+      this.level.playSound((Player)null, (Entity)this, SoundEvents.SNOW_GOLEM_SHEAR, var1, 1.0F, 1.0F);
+      if (!this.level.isClientSide()) {
+         this.setPumpkin(false);
+         this.spawnAtLocation(new ItemStack(Items.CARVED_PUMPKIN), 1.7F);
+      }
+
+   }
+
+   public boolean readyForShearing() {
+      return this.isAlive() && this.hasPumpkin();
+   }
+
    public boolean hasPumpkin() {
       return ((Byte)this.entityData.get(DATA_PUMPKIN_ID) & 16) != 0;
    }
 
    public void setPumpkin(boolean var1) {
@@ -166,9 +183,13 @@
    @Nullable
    protected SoundEvent getDeathSound() {
       return SoundEvents.SNOW_GOLEM_DEATH;
    }
 
+   public Vec3 getLeashOffset() {
+      return new Vec3(0.0D, (double)(0.75F * this.getEyeHeight()), (double)(this.getBbWidth() * 0.4F));
+   }
+
    static {
       DATA_PUMPKIN_ID = SynchedEntityData.defineId(SnowGolem.class, EntityDataSerializers.BYTE);
    }
 }
