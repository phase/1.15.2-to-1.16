--- net/minecraft/world/entity/projectile/ThrownEnderpearl.java
+++ net/minecraft/world/entity/projectile/ThrownEnderpearl.java
@@ -2,10 +2,11 @@
 
 import javax.annotation.Nullable;
 import net.minecraft.advancements.CriteriaTriggers;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.particles.ParticleTypes;
+import net.minecraft.resources.ResourceKey;
 import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.world.damagesource.DamageSource;
 import net.minecraft.world.entity.Entity;
 import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
@@ -15,11 +16,10 @@
 import net.minecraft.world.item.Items;
 import net.minecraft.world.level.GameRules;
 import net.minecraft.world.level.Level;
 import net.minecraft.world.level.block.entity.BlockEntity;
 import net.minecraft.world.level.block.entity.TheEndGatewayBlockEntity;
-import net.minecraft.world.level.dimension.DimensionType;
 import net.minecraft.world.phys.BlockHitResult;
 import net.minecraft.world.phys.EntityHitResult;
 import net.minecraft.world.phys.HitResult;
 
 public class ThrownEnderpearl extends ThrowableItemProjectile {
@@ -40,54 +40,56 @@
 
    protected Item getDefaultItem() {
       return Items.ENDER_PEARL;
    }
 
-   protected void onHit(HitResult var1) {
-      LivingEntity var2 = this.getOwner();
-      if (var1.getType() == HitResult.Type.ENTITY) {
-         Entity var3 = ((EntityHitResult)var1).getEntity();
-         if (var3 == this.originalOwner) {
-            return;
-         }
-
-         var3.hurt(DamageSource.thrown(this, var2), 0.0F);
+   protected void onHitEntity(EntityHitResult var1) {
+      super.onHitEntity(var1);
+      Entity var2 = var1.getEntity();
+      if (var2 != this.originalOwner) {
+         var2.hurt(DamageSource.thrown(this, this.getOwner()), 0.0F);
       }
+   }
 
-      if (var1.getType() == HitResult.Type.BLOCK) {
-         BlockPos var6 = ((BlockHitResult)var1).getBlockPos();
-         BlockEntity var4 = this.level.getBlockEntity(var6);
-         if (var4 instanceof TheEndGatewayBlockEntity) {
-            TheEndGatewayBlockEntity var5 = (TheEndGatewayBlockEntity)var4;
-            if (var2 != null) {
-               if (var2 instanceof ServerPlayer) {
-                  CriteriaTriggers.ENTER_BLOCK.trigger((ServerPlayer)var2, this.level.getBlockState(var6));
-               }
-
-               var5.teleportEntity(var2);
-               this.remove();
-               return;
+   protected void onHitBlock(BlockHitResult var1) {
+      super.onHitBlock(var1);
+      Entity var2 = this.getOwner();
+      BlockPos var3 = var1.getBlockPos();
+      BlockEntity var4 = this.level.getBlockEntity(var3);
+      if (var4 instanceof TheEndGatewayBlockEntity) {
+         TheEndGatewayBlockEntity var5 = (TheEndGatewayBlockEntity)var4;
+         if (var2 != null) {
+            if (var2 instanceof ServerPlayer) {
+               CriteriaTriggers.ENTER_BLOCK.trigger((ServerPlayer)var2, this.level.getBlockState(var3));
             }
 
+            var5.teleportEntity(var2);
+            this.remove();
+         } else {
             var5.teleportEntity(this);
-            return;
          }
       }
 
-      for(int var7 = 0; var7 < 32; ++var7) {
+   }
+
+   protected void onHit(HitResult var1) {
+      super.onHit(var1);
+      Entity var2 = this.getOwner();
+
+      for(int var3 = 0; var3 < 32; ++var3) {
          this.level.addParticle(ParticleTypes.PORTAL, this.getX(), this.getY() + this.random.nextDouble() * 2.0D, this.getZ(), this.random.nextGaussian(), 0.0D, this.random.nextGaussian());
       }
 
-      if (!this.level.isClientSide) {
+      if (!this.level.isClientSide && !this.removed) {
          if (var2 instanceof ServerPlayer) {
-            ServerPlayer var8 = (ServerPlayer)var2;
-            if (var8.connection.getConnection().isConnected() && var8.level == this.level && !var8.isSleeping()) {
+            ServerPlayer var5 = (ServerPlayer)var2;
+            if (var5.connection.getConnection().isConnected() && var5.level == this.level && !var5.isSleeping()) {
                if (this.random.nextFloat() < 0.05F && this.level.getGameRules().getBoolean(GameRules.RULE_DOMOBSPAWNING)) {
-                  Endermite var9 = (Endermite)EntityType.ENDERMITE.create(this.level);
-                  var9.setPlayerSpawned(true);
-                  var9.moveTo(var2.getX(), var2.getY(), var2.getZ(), var2.yRot, var2.xRot);
-                  this.level.addFreshEntity(var9);
+                  Endermite var4 = (Endermite)EntityType.ENDERMITE.create(this.level);
+                  var4.setPlayerSpawned(true);
+                  var4.moveTo(var2.getX(), var2.getY(), var2.getZ(), var2.yRot, var2.xRot);
+                  this.level.addFreshEntity(var4);
                }
 
                if (var2.isPassenger()) {
                   var2.stopRiding();
                }
@@ -105,23 +107,24 @@
       }
 
    }
 
    public void tick() {
-      LivingEntity var1 = this.getOwner();
+      Entity var1 = this.getOwner();
       if (var1 != null && var1 instanceof Player && !var1.isAlive()) {
          this.remove();
       } else {
          super.tick();
       }
 
    }
 
    @Nullable
-   public Entity changeDimension(DimensionType var1) {
-      if (this.owner.dimension != var1) {
-         this.owner = null;
+   public Entity changeDimension(ResourceKey<Level> var1) {
+      Entity var2 = this.getOwner();
+      if (var2 != null && var2.level.dimension() != var1) {
+         this.setOwner((Entity)null);
       }
 
       return super.changeDimension(var1);
    }
 }
