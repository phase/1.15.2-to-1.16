--- net/minecraft/world/inventory/SmithingMenu.java
+++ net/minecraft/world/inventory/SmithingMenu.java
@@ -1,0 +1,62 @@
+package net.minecraft.world.inventory;
+
+import java.util.List;
+import javax.annotation.Nullable;
+import net.minecraft.world.entity.player.Inventory;
+import net.minecraft.world.entity.player.Player;
+import net.minecraft.world.item.ItemStack;
+import net.minecraft.world.item.crafting.RecipeType;
+import net.minecraft.world.item.crafting.UpgradeRecipe;
+import net.minecraft.world.level.Level;
+import net.minecraft.world.level.block.Blocks;
+import net.minecraft.world.level.block.state.BlockState;
+
+public class SmithingMenu extends ItemCombinerMenu {
+   private final Level level;
+   @Nullable
+   private UpgradeRecipe selectedRecipe;
+
+   public SmithingMenu(int var1, Inventory var2) {
+      this(var1, var2, ContainerLevelAccess.NULL);
+   }
+
+   public SmithingMenu(int var1, Inventory var2, ContainerLevelAccess var3) {
+      super(MenuType.SMITHING, var1, var2, var3);
+      this.level = var2.player.level;
+   }
+
+   protected boolean isValidBlock(BlockState var1) {
+      return var1.is(Blocks.SMITHING_TABLE);
+   }
+
+   protected boolean mayPickup(Player var1, boolean var2) {
+      return this.selectedRecipe != null && this.selectedRecipe.matches(this.inputSlots, this.level);
+   }
+
+   protected ItemStack onTake(Player var1, ItemStack var2) {
+      this.shrinkStackInSlot(0);
+      this.shrinkStackInSlot(1);
+      this.access.execute((var0, var1x) -> {
+         var0.levelEvent(1044, var1x, 0);
+      });
+      return var2;
+   }
+
+   private void shrinkStackInSlot(int var1) {
+      ItemStack var2 = this.inputSlots.getItem(var1);
+      var2.shrink(1);
+      this.inputSlots.setItem(var1, var2);
+   }
+
+   public void createResult() {
+      List var1 = this.level.getRecipeManager().getRecipesFor(RecipeType.SMITHING, this.inputSlots, this.level);
+      if (var1.isEmpty()) {
+         this.resultSlots.setItem(0, ItemStack.EMPTY);
+      } else {
+         this.selectedRecipe = (UpgradeRecipe)var1.get(0);
+         ItemStack var2 = this.selectedRecipe.assemble(this.inputSlots);
+         this.resultSlots.setItem(0, var2);
+      }
+
+   }
+}
