--- net/minecraft/world/item/FireChargeItem.java
+++ net/minecraft/world/item/FireChargeItem.java
@@ -1,16 +1,16 @@
 package net.minecraft.world.item;
 
 import net.minecraft.core.BlockPos;
 import net.minecraft.sounds.SoundEvents;
 import net.minecraft.sounds.SoundSource;
+import net.minecraft.tags.BlockTags;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.entity.player.Player;
 import net.minecraft.world.level.Level;
-import net.minecraft.world.level.block.Blocks;
+import net.minecraft.world.level.block.BaseFireBlock;
 import net.minecraft.world.level.block.CampfireBlock;
-import net.minecraft.world.level.block.FireBlock;
 import net.minecraft.world.level.block.state.BlockState;
 
 public class FireChargeItem extends Item {
    public FireChargeItem(Item.Properties var1) {
       super(var1);
@@ -19,28 +19,31 @@
    public InteractionResult useOn(UseOnContext var1) {
       Level var2 = var1.getLevel();
       BlockPos var3 = var1.getClickedPos();
       BlockState var4 = var2.getBlockState(var3);
       boolean var5 = false;
-      if (var4.getBlock() == Blocks.CAMPFIRE) {
+      if (var4.is(BlockTags.CAMPFIRES, (var0) -> {
+         return var0.hasProperty(CampfireBlock.LIT) && var0.hasProperty(CampfireBlock.WATERLOGGED);
+      })) {
          if (!(Boolean)var4.getValue(CampfireBlock.LIT) && !(Boolean)var4.getValue(CampfireBlock.WATERLOGGED)) {
             this.playSound(var2, var3);
             var2.setBlockAndUpdate(var3, (BlockState)var4.setValue(CampfireBlock.LIT, true));
             var5 = true;
          }
       } else {
          var3 = var3.relative(var1.getClickedFace());
-         if (var2.getBlockState(var3).isAir()) {
+         BlockState var6 = BaseFireBlock.getState(var2, var3);
+         if (var2.getBlockState(var3).isAir() && var6.canSurvive(var2, var3)) {
             this.playSound(var2, var3);
-            var2.setBlockAndUpdate(var3, ((FireBlock)Blocks.FIRE).getStateForPlacement(var2, var3));
+            var2.setBlockAndUpdate(var3, var6);
             var5 = true;
          }
       }
 
       if (var5) {
          var1.getItemInHand().shrink(1);
-         return InteractionResult.SUCCESS;
+         return InteractionResult.sidedSuccess(var2.isClientSide);
       } else {
          return InteractionResult.FAIL;
       }
    }
 
