--- net/minecraft/world/item/BottleItem.java
+++ net/minecraft/world/item/BottleItem.java
@@ -30,13 +30,13 @@
       ItemStack var5 = var2.getItemInHand(var3);
       if (!var4.isEmpty()) {
          AreaEffectCloud var8 = (AreaEffectCloud)var4.get(0);
          var8.setRadius(var8.getRadius() - 0.5F);
          var1.playSound((Player)null, var2.getX(), var2.getY(), var2.getZ(), SoundEvents.BOTTLE_FILL_DRAGONBREATH, SoundSource.NEUTRAL, 1.0F, 1.0F);
-         return InteractionResultHolder.success(this.turnBottleIntoItem(var5, var2, new ItemStack(Items.DRAGON_BREATH)));
+         return InteractionResultHolder.sidedSuccess(this.turnBottleIntoItem(var5, var2, new ItemStack(Items.DRAGON_BREATH)), var1.isClientSide());
       } else {
-         HitResult var6 = getPlayerPOVHitResult(var1, var2, ClipContext.Fluid.SOURCE_ONLY);
+         BlockHitResult var6 = getPlayerPOVHitResult(var1, var2, ClipContext.Fluid.SOURCE_ONLY);
          if (var6.getType() == HitResult.Type.MISS) {
             return InteractionResultHolder.pass(var5);
          } else {
             if (var6.getType() == HitResult.Type.BLOCK) {
                BlockPos var7 = ((BlockHitResult)var6).getBlockPos();
@@ -44,28 +44,19 @@
                   return InteractionResultHolder.pass(var5);
                }
 
                if (var1.getFluidState(var7).is(FluidTags.WATER)) {
                   var1.playSound(var2, var2.getX(), var2.getY(), var2.getZ(), SoundEvents.BOTTLE_FILL, SoundSource.NEUTRAL, 1.0F, 1.0F);
-                  return InteractionResultHolder.success(this.turnBottleIntoItem(var5, var2, PotionUtils.setPotion(new ItemStack(Items.POTION), Potions.WATER)));
+                  return InteractionResultHolder.sidedSuccess(this.turnBottleIntoItem(var5, var2, PotionUtils.setPotion(new ItemStack(Items.POTION), Potions.WATER)), var1.isClientSide());
                }
             }
 
             return InteractionResultHolder.pass(var5);
          }
       }
    }
 
    protected ItemStack turnBottleIntoItem(ItemStack var1, Player var2, ItemStack var3) {
-      var1.shrink(1);
       var2.awardStat(Stats.ITEM_USED.get(this));
-      if (var1.isEmpty()) {
-         return var3;
-      } else {
-         if (!var2.inventory.add(var3)) {
-            var2.drop(var3, false);
-         }
-
-         return var1;
-      }
+      return ItemUtils.createFilledResult(var1, var2, var3);
    }
 }
