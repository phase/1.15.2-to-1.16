--- net/minecraft/world/item/Items.java
+++ net/minecraft/world/item/Items.java
@@ -24,17 +24,21 @@
    public static final Item POLISHED_ANDESITE;
    public static final Item GRASS_BLOCK;
    public static final Item DIRT;
    public static final Item COARSE_DIRT;
    public static final Item PODZOL;
+   public static final Item CRIMSON_NYLIUM;
+   public static final Item WARPED_NYLIUM;
    public static final Item COBBLESTONE;
    public static final Item OAK_PLANKS;
    public static final Item SPRUCE_PLANKS;
    public static final Item BIRCH_PLANKS;
    public static final Item JUNGLE_PLANKS;
    public static final Item ACACIA_PLANKS;
    public static final Item DARK_OAK_PLANKS;
+   public static final Item CRIMSON_PLANKS;
+   public static final Item WARPED_PLANKS;
    public static final Item OAK_SAPLING;
    public static final Item SPRUCE_SAPLING;
    public static final Item BIRCH_SAPLING;
    public static final Item JUNGLE_SAPLING;
    public static final Item ACACIA_SAPLING;
@@ -44,34 +48,43 @@
    public static final Item RED_SAND;
    public static final Item GRAVEL;
    public static final Item GOLD_ORE;
    public static final Item IRON_ORE;
    public static final Item COAL_ORE;
+   public static final Item NETHER_GOLD_ORE;
    public static final Item OAK_LOG;
    public static final Item SPRUCE_LOG;
    public static final Item BIRCH_LOG;
    public static final Item JUNGLE_LOG;
    public static final Item ACACIA_LOG;
    public static final Item DARK_OAK_LOG;
+   public static final Item CRIMSON_STEM;
+   public static final Item WARPED_STEM;
    public static final Item STRIPPED_OAK_LOG;
    public static final Item STRIPPED_SPRUCE_LOG;
    public static final Item STRIPPED_BIRCH_LOG;
    public static final Item STRIPPED_JUNGLE_LOG;
    public static final Item STRIPPED_ACACIA_LOG;
    public static final Item STRIPPED_DARK_OAK_LOG;
+   public static final Item STRIPPED_CRIMSON_STEM;
+   public static final Item STRIPPED_WARPED_STEM;
    public static final Item STRIPPED_OAK_WOOD;
    public static final Item STRIPPED_SPRUCE_WOOD;
    public static final Item STRIPPED_BIRCH_WOOD;
    public static final Item STRIPPED_JUNGLE_WOOD;
    public static final Item STRIPPED_ACACIA_WOOD;
    public static final Item STRIPPED_DARK_OAK_WOOD;
+   public static final Item STRIPPED_CRIMSON_HYPHAE;
+   public static final Item STRIPPED_WARPED_HYPHAE;
    public static final Item OAK_WOOD;
    public static final Item SPRUCE_WOOD;
    public static final Item BIRCH_WOOD;
    public static final Item JUNGLE_WOOD;
    public static final Item ACACIA_WOOD;
    public static final Item DARK_OAK_WOOD;
+   public static final Item CRIMSON_HYPHAE;
+   public static final Item WARPED_HYPHAE;
    public static final Item OAK_LEAVES;
    public static final Item SPRUCE_LEAVES;
    public static final Item BIRCH_LEAVES;
    public static final Item JUNGLE_LEAVES;
    public static final Item ACACIA_LEAVES;
@@ -125,18 +138,30 @@
    public static final Item CORNFLOWER;
    public static final Item LILY_OF_THE_VALLEY;
    public static final Item WITHER_ROSE;
    public static final Item BROWN_MUSHROOM;
    public static final Item RED_MUSHROOM;
+   public static final Item CRIMSON_FUNGUS;
+   public static final Item WARPED_FUNGUS;
+   public static final Item CRIMSON_ROOTS;
+   public static final Item WARPED_ROOTS;
+   public static final Item NETHER_SPROUTS;
+   public static final Item WEEPING_VINES;
+   public static final Item TWISTING_VINES;
+   public static final Item SUGAR_CANE;
+   public static final Item KELP;
+   public static final Item BAMBOO;
    public static final Item GOLD_BLOCK;
    public static final Item IRON_BLOCK;
    public static final Item OAK_SLAB;
    public static final Item SPRUCE_SLAB;
    public static final Item BIRCH_SLAB;
    public static final Item JUNGLE_SLAB;
    public static final Item ACACIA_SLAB;
    public static final Item DARK_OAK_SLAB;
+   public static final Item CRIMSON_SLAB;
+   public static final Item WARPED_SLAB;
    public static final Item STONE_SLAB;
    public static final Item SMOOTH_STONE_SLAB;
    public static final Item SANDSTONE_SLAB;
    public static final Item CUT_STANDSTONE_SLAB;
    public static final Item PETRIFIED_OAK_SLAB;
@@ -184,13 +209,15 @@
    public static final Item SPRUCE_PRESSURE_PLATE;
    public static final Item BIRCH_PRESSURE_PLATE;
    public static final Item JUNGLE_PRESSURE_PLATE;
    public static final Item ACACIA_PRESSURE_PLATE;
    public static final Item DARK_OAK_PRESSURE_PLATE;
+   public static final Item CRIMSON_PRESSURE_PLATE;
+   public static final Item WARPED_PRESSURE_PLATE;
+   public static final Item POLISHED_BLACKSTONE_PRESSURE_PLATE;
    public static final Item REDSTONE_ORE;
    public static final Item REDSTONE_TORCH;
-   public static final Item STONE_BUTTON;
    public static final Item SNOW;
    public static final Item ICE;
    public static final Item SNOW_BLOCK;
    public static final Item CACTUS;
    public static final Item CLAY;
@@ -199,22 +226,30 @@
    public static final Item SPRUCE_FENCE;
    public static final Item BIRCH_FENCE;
    public static final Item JUNGLE_FENCE;
    public static final Item ACACIA_FENCE;
    public static final Item DARK_OAK_FENCE;
+   public static final Item CRIMSON_FENCE;
+   public static final Item WARPED_FENCE;
    public static final Item PUMPKIN;
    public static final Item CARVED_PUMPKIN;
    public static final Item NETHERRACK;
    public static final Item SOUL_SAND;
+   public static final Item SOUL_SOIL;
+   public static final Item BASALT;
+   public static final Item POLISHED_BASALT;
+   public static final Item SOUL_TORCH;
    public static final Item GLOWSTONE;
    public static final Item JACK_O_LANTERN;
    public static final Item OAK_TRAPDOOR;
    public static final Item SPRUCE_TRAPDOOR;
    public static final Item BIRCH_TRAPDOOR;
    public static final Item JUNGLE_TRAPDOOR;
    public static final Item ACACIA_TRAPDOOR;
    public static final Item DARK_OAK_TRAPDOOR;
+   public static final Item CRIMSON_TRAPDOOR;
+   public static final Item WARPED_TRAPDOOR;
    public static final Item INFESTED_STONE;
    public static final Item INFESTED_COBBLESTONE;
    public static final Item INFESTED_STONE_BRICKS;
    public static final Item INFESTED_MOSSY_STONE_BRICKS;
    public static final Item INFESTED_CRACKED_STONE_BRICKS;
@@ -225,24 +260,29 @@
    public static final Item CHISELED_STONE_BRICKS;
    public static final Item BROWN_MUSHROOM_BLOCK;
    public static final Item RED_MUSHROOM_BLOCK;
    public static final Item MUSHROOM_STEM;
    public static final Item IRON_BARS;
+   public static final Item CHAIN;
    public static final Item GLASS_PANE;
    public static final Item MELON;
    public static final Item VINE;
    public static final Item OAK_FENCE_GATE;
    public static final Item SPRUCE_FENCE_GATE;
    public static final Item BIRCH_FENCE_GATE;
    public static final Item JUNGLE_FENCE_GATE;
    public static final Item ACACIA_FENCE_GATE;
    public static final Item DARK_OAK_FENCE_GATE;
+   public static final Item CRIMSON_FENCE_GATE;
+   public static final Item WARPED_FENCE_GATE;
    public static final Item BRICK_STAIRS;
    public static final Item STONE_BRICK_STAIRS;
    public static final Item MYCELIUM;
    public static final Item LILY_PAD;
    public static final Item NETHER_BRICKS;
+   public static final Item CRACKED_NETHER_BRICKS;
+   public static final Item CHISELED_NETHER_BRICKS;
    public static final Item NETHER_BRICK_FENCE;
    public static final Item NETHER_BRICK_STAIRS;
    public static final Item ENCHANTING_TABLE;
    public static final Item END_PORTAL_FRAME;
    public static final Item END_STONE;
@@ -255,10 +295,12 @@
    public static final Item TRIPWIRE_HOOK;
    public static final Item EMERALD_BLOCK;
    public static final Item SPRUCE_STAIRS;
    public static final Item BIRCH_STAIRS;
    public static final Item JUNGLE_STAIRS;
+   public static final Item CRIMSON_STAIRS;
+   public static final Item WARPED_STAIRS;
    public static final Item COMMAND_BLOCK;
    public static final Item BEACON;
    public static final Item COBBLESTONE_WALL;
    public static final Item MOSSY_COBBLESTONE_WALL;
    public static final Item BRICK_WALL;
@@ -271,16 +313,23 @@
    public static final Item ANDESITE_WALL;
    public static final Item RED_NETHER_BRICK_WALL;
    public static final Item SANDSTONE_WALL;
    public static final Item END_STONE_BRICK_WALL;
    public static final Item DIORITE_WALL;
+   public static final Item BLACKSTONE_WALL;
+   public static final Item POLISHED_BLACKSTONE_WALL;
+   public static final Item POLISHED_BLACKSTONE_BRICK_WALL;
+   public static final Item STONE_BUTTON;
    public static final Item OAK_BUTTON;
    public static final Item SPRUCE_BUTTON;
    public static final Item BIRCH_BUTTON;
    public static final Item JUNGLE_BUTTON;
    public static final Item ACACIA_BUTTON;
    public static final Item DARK_OAK_BUTTON;
+   public static final Item CRIMSON_BUTTON;
+   public static final Item WARPED_BUTTON;
+   public static final Item POLISHED_BLACKSTONE_BUTTON;
    public static final Item ANVIL;
    public static final Item CHIPPED_ANVIL;
    public static final Item DAMAGED_ANVIL;
    public static final Item TRAPPED_CHEST;
    public static final Item LIGHT_WEIGHTED_PRESSURE_PLATE;
@@ -289,10 +338,11 @@
    public static final Item REDSTONE_BLOCK;
    public static final Item NETHER_QUARTZ_ORE;
    public static final Item HOPPER;
    public static final Item CHISELED_QUARTZ_BLOCK;
    public static final Item QUARTZ_BLOCK;
+   public static final Item QUARTZ_BRICKS;
    public static final Item QUARTZ_PILLAR;
    public static final Item QUARTZ_STAIRS;
    public static final Item ACTIVATOR_RAIL;
    public static final Item DROPPER;
    public static final Item WHITE_TERRACOTTA;
@@ -388,10 +438,11 @@
    public static final Item RED_SANDSTONE_STAIRS;
    public static final Item REPEATING_COMMAND_BLOCK;
    public static final Item CHAIN_COMMAND_BLOCK;
    public static final Item MAGMA_BLOCK;
    public static final Item NETHER_WART_BLOCK;
+   public static final Item WARPED_WART_BLOCK;
    public static final Item RED_NETHER_BRICKS;
    public static final Item BONE_BLOCK;
    public static final Item STRUCTURE_VOID;
    public static final Item OBSERVER;
    public static final Item SHULKER_BOX;
@@ -525,15 +576,16 @@
    public static final Item SPRUCE_DOOR;
    public static final Item BIRCH_DOOR;
    public static final Item JUNGLE_DOOR;
    public static final Item ACACIA_DOOR;
    public static final Item DARK_OAK_DOOR;
+   public static final Item CRIMSON_DOOR;
+   public static final Item WARPED_DOOR;
    public static final Item REPEATER;
    public static final Item COMPARATOR;
    public static final Item STRUCTURE_BLOCK;
    public static final Item JIGSAW;
-   public static final Item COMPOSTER;
    public static final Item TURTLE_HELMET;
    public static final Item SCUTE;
    public static final Item IRON_SHOVEL;
    public static final Item IRON_PICKAXE;
    public static final Item IRON_AXE;
@@ -544,10 +596,12 @@
    public static final Item COAL;
    public static final Item CHARCOAL;
    public static final Item DIAMOND;
    public static final Item IRON_INGOT;
    public static final Item GOLD_INGOT;
+   public static final Item NETHERITE_INGOT;
+   public static final Item NETHERITE_SCRAP;
    public static final Item IRON_SWORD;
    public static final Item WOODEN_SWORD;
    public static final Item WOODEN_SHOVEL;
    public static final Item WOODEN_PICKAXE;
    public static final Item WOODEN_AXE;
@@ -564,18 +618,23 @@
    public static final Item MUSHROOM_STEW;
    public static final Item GOLDEN_SWORD;
    public static final Item GOLDEN_SHOVEL;
    public static final Item GOLDEN_PICKAXE;
    public static final Item GOLDEN_AXE;
+   public static final Item NETHERITE_SWORD;
+   public static final Item NETHERITE_SHOVEL;
+   public static final Item NETHERITE_PICKAXE;
+   public static final Item NETHERITE_AXE;
    public static final Item STRING;
    public static final Item FEATHER;
    public static final Item GUNPOWDER;
    public static final Item WOODEN_HOE;
    public static final Item STONE_HOE;
    public static final Item IRON_HOE;
    public static final Item DIAMOND_HOE;
    public static final Item GOLDEN_HOE;
+   public static final Item NETHERITE_HOE;
    public static final Item WHEAT_SEEDS;
    public static final Item WHEAT;
    public static final Item BREAD;
    public static final Item LEATHER_HELMET;
    public static final Item LEATHER_CHESTPLATE;
@@ -595,10 +654,14 @@
    public static final Item DIAMOND_BOOTS;
    public static final Item GOLDEN_HELMET;
    public static final Item GOLDEN_CHESTPLATE;
    public static final Item GOLDEN_LEGGINGS;
    public static final Item GOLDEN_BOOTS;
+   public static final Item NETHERITE_HELMET;
+   public static final Item NETHERITE_CHESTPLATE;
+   public static final Item NETHERITE_LEGGINGS;
+   public static final Item NETHERITE_BOOTS;
    public static final Item FLINT;
    public static final Item PORKCHOP;
    public static final Item COOKED_PORKCHOP;
    public static final Item PAINTING;
    public static final Item GOLDEN_APPLE;
@@ -607,10 +670,12 @@
    public static final Item SPRUCE_SIGN;
    public static final Item BIRCH_SIGN;
    public static final Item JUNGLE_SIGN;
    public static final Item ACACIA_SIGN;
    public static final Item DARK_OAK_SIGN;
+   public static final Item CRIMSON_SIGN;
+   public static final Item WARPED_SIGN;
    public static final Item BUCKET;
    public static final Item WATER_BUCKET;
    public static final Item LAVA_BUCKET;
    public static final Item MINECART;
    public static final Item SADDLE;
@@ -623,14 +688,11 @@
    public static final Item SALMON_BUCKET;
    public static final Item COD_BUCKET;
    public static final Item TROPICAL_FISH_BUCKET;
    public static final Item BRICK;
    public static final Item CLAY_BALL;
-   public static final Item SUGAR_CANE;
-   public static final Item KELP;
    public static final Item DRIED_KELP_BLOCK;
-   public static final Item BAMBOO;
    public static final Item PAPER;
    public static final Item BOOK;
    public static final Item SLIME_BALL;
    public static final Item CHEST_MINECART;
    public static final Item FURNACE_MINECART;
@@ -728,10 +790,11 @@
    public static final Item ENDERMITE_SPAWN_EGG;
    public static final Item EVOKER_SPAWN_EGG;
    public static final Item FOX_SPAWN_EGG;
    public static final Item GHAST_SPAWN_EGG;
    public static final Item GUARDIAN_SPAWN_EGG;
+   public static final Item HOGLIN_SPAWN_EGG;
    public static final Item HORSE_SPAWN_EGG;
    public static final Item HUSK_SPAWN_EGG;
    public static final Item LLAMA_SPAWN_EGG;
    public static final Item MAGMA_CUBE_SPAWN_EGG;
    public static final Item MOOSHROOM_SPAWN_EGG;
@@ -739,10 +802,11 @@
    public static final Item OCELOT_SPAWN_EGG;
    public static final Item PANDA_SPAWN_EGG;
    public static final Item PARROT_SPAWN_EGG;
    public static final Item PHANTOM_SPAWN_EGG;
    public static final Item PIG_SPAWN_EGG;
+   public static final Item PIGLIN_SPAWN_EGG;
    public static final Item PILLAGER_SPAWN_EGG;
    public static final Item POLAR_BEAR_SPAWN_EGG;
    public static final Item PUFFERFISH_SPAWN_EGG;
    public static final Item RABBIT_SPAWN_EGG;
    public static final Item RAVAGER_SPAWN_EGG;
@@ -754,24 +818,26 @@
    public static final Item SKELETON_HORSE_SPAWN_EGG;
    public static final Item SLIME_SPAWN_EGG;
    public static final Item SPIDER_SPAWN_EGG;
    public static final Item SQUID_SPAWN_EGG;
    public static final Item STRAY_SPAWN_EGG;
+   public static final Item STRIDER_SPAWN_EGG;
    public static final Item TRADER_LLAMA_SPAWN_EGG;
    public static final Item TROPICAL_FISH_SPAWN_EGG;
    public static final Item TURTLE_SPAWN_EGG;
    public static final Item VEX_SPAWN_EGG;
    public static final Item VILLAGER_SPAWN_EGG;
    public static final Item VINDICATOR_SPAWN_EGG;
    public static final Item WANDERING_TRADER_SPAWN_EGG;
    public static final Item WITCH_SPAWN_EGG;
    public static final Item WITHER_SKELETON_SPAWN_EGG;
    public static final Item WOLF_SPAWN_EGG;
+   public static final Item ZOGLIN_SPAWN_EGG;
    public static final Item ZOMBIE_SPAWN_EGG;
    public static final Item ZOMBIE_HORSE_SPAWN_EGG;
-   public static final Item ZOMBIE_PIGMAN_SPAWN_EGG;
    public static final Item ZOMBIE_VILLAGER_SPAWN_EGG;
+   public static final Item ZOMBIFIED_PIGLIN_SPAWN_EGG;
    public static final Item EXPERIENCE_BOTTLE;
    public static final Item FIRE_CHARGE;
    public static final Item WRITABLE_BOOK;
    public static final Item WRITTEN_BOOK;
    public static final Item EMERALD;
@@ -788,10 +854,11 @@
    public static final Item PLAYER_HEAD;
    public static final Item ZOMBIE_HEAD;
    public static final Item CREEPER_HEAD;
    public static final Item DRAGON_HEAD;
    public static final Item CARROT_ON_A_STICK;
+   public static final Item WARPED_FUNGUS_ON_A_STICK;
    public static final Item NETHER_STAR;
    public static final Item PUMPKIN_PIE;
    public static final Item FIREWORK_ROCKET;
    public static final Item FIREWORK_STAR;
    public static final Item ENCHANTED_BOOK;
@@ -865,10 +932,11 @@
    public static final Item MUSIC_DISC_STAL;
    public static final Item MUSIC_DISC_STRAD;
    public static final Item MUSIC_DISC_WARD;
    public static final Item MUSIC_DISC_11;
    public static final Item MUSIC_DISC_WAIT;
+   public static final Item MUSIC_DISC_PIGSTEP;
    public static final Item TRIDENT;
    public static final Item PHANTOM_MEMBRANE;
    public static final Item NAUTILUS_SHELL;
    public static final Item HEART_OF_THE_SEA;
    public static final Item CROSSBOW;
@@ -877,10 +945,12 @@
    public static final Item FLOWER_BANNER_PATTERN;
    public static final Item CREEPER_BANNER_PATTERN;
    public static final Item SKULL_BANNER_PATTERN;
    public static final Item MOJANG_BANNER_PATTERN;
    public static final Item GLOBE_BANNER_PATTER;
+   public static final Item PIGLIN_BANNER_PATTERN;
+   public static final Item COMPOSTER;
    public static final Item BARREL;
    public static final Item SMOKER;
    public static final Item BLAST_FURNACE;
    public static final Item CARTOGRAPHY_TABLE;
    public static final Item FLETCHING_TABLE;
@@ -888,18 +958,39 @@
    public static final Item LECTERN;
    public static final Item SMITHING_TABLE;
    public static final Item STONECUTTER;
    public static final Item BELL;
    public static final Item LANTERN;
+   public static final Item SOUL_LANTERN;
    public static final Item SWEET_BERRIES;
    public static final Item CAMPFIRE;
+   public static final Item SOUL_CAMPFIRE;
+   public static final Item SHROOMLIGHT;
    public static final Item HONEYCOMB;
    public static final Item BEE_NEST;
    public static final Item BEEHIVE;
    public static final Item HONEY_BOTTLE;
    public static final Item HONEY_BLOCK;
    public static final Item HONEYCOMB_BLOCK;
+   public static final Item LODESTONE;
+   public static final Item NETHERITE_BLOCK;
+   public static final Item ANCIENT_DEBRIS;
+   public static final Item TARGET;
+   public static final Item CRYING_OBSIDIAN;
+   public static final Item BLACKSTONE;
+   public static final Item BLACKSTONE_SLAB;
+   public static final Item BLACKSTONE_STAIRS;
+   public static final Item GILDED_BLACKSTONE;
+   public static final Item POLISHED_BLACKSTONE;
+   public static final Item POLISHED_BLACKSTONE_SLAB;
+   public static final Item POLISHED_BLACKSTONE_STAIRS;
+   public static final Item CHISELED_POLISHED_BLACKSTONE;
+   public static final Item POLISHED_BLACKSTONE_BRICKS;
+   public static final Item POLISHED_BLACKSTONE_BRICK_SLAB;
+   public static final Item POLISHED_BLACKSTONE_BRICK_STAIRS;
+   public static final Item CRACKED_POLISHED_BLACKSTONE_BRICKS;
+   public static final Item RESPAWN_ANCHOR;
 
    private static Item registerBlock(Block var0) {
       return registerBlock(new BlockItem(var0, new Item.Properties()));
    }
 
@@ -938,17 +1029,21 @@
       POLISHED_ANDESITE = registerBlock(Blocks.POLISHED_ANDESITE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       GRASS_BLOCK = registerBlock(Blocks.GRASS_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       DIRT = registerBlock(Blocks.DIRT, CreativeModeTab.TAB_BUILDING_BLOCKS);
       COARSE_DIRT = registerBlock(Blocks.COARSE_DIRT, CreativeModeTab.TAB_BUILDING_BLOCKS);
       PODZOL = registerBlock(Blocks.PODZOL, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CRIMSON_NYLIUM = registerBlock(Blocks.CRIMSON_NYLIUM, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WARPED_NYLIUM = registerBlock(Blocks.WARPED_NYLIUM, CreativeModeTab.TAB_BUILDING_BLOCKS);
       COBBLESTONE = registerBlock(Blocks.COBBLESTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       OAK_PLANKS = registerBlock(Blocks.OAK_PLANKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SPRUCE_PLANKS = registerBlock(Blocks.SPRUCE_PLANKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       BIRCH_PLANKS = registerBlock(Blocks.BIRCH_PLANKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       JUNGLE_PLANKS = registerBlock(Blocks.JUNGLE_PLANKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       ACACIA_PLANKS = registerBlock(Blocks.ACACIA_PLANKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       DARK_OAK_PLANKS = registerBlock(Blocks.DARK_OAK_PLANKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CRIMSON_PLANKS = registerBlock(Blocks.CRIMSON_PLANKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WARPED_PLANKS = registerBlock(Blocks.WARPED_PLANKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       OAK_SAPLING = registerBlock(Blocks.OAK_SAPLING, CreativeModeTab.TAB_DECORATIONS);
       SPRUCE_SAPLING = registerBlock(Blocks.SPRUCE_SAPLING, CreativeModeTab.TAB_DECORATIONS);
       BIRCH_SAPLING = registerBlock(Blocks.BIRCH_SAPLING, CreativeModeTab.TAB_DECORATIONS);
       JUNGLE_SAPLING = registerBlock(Blocks.JUNGLE_SAPLING, CreativeModeTab.TAB_DECORATIONS);
       ACACIA_SAPLING = registerBlock(Blocks.ACACIA_SAPLING, CreativeModeTab.TAB_DECORATIONS);
@@ -958,34 +1053,43 @@
       RED_SAND = registerBlock(Blocks.RED_SAND, CreativeModeTab.TAB_BUILDING_BLOCKS);
       GRAVEL = registerBlock(Blocks.GRAVEL, CreativeModeTab.TAB_BUILDING_BLOCKS);
       GOLD_ORE = registerBlock(Blocks.GOLD_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       IRON_ORE = registerBlock(Blocks.IRON_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       COAL_ORE = registerBlock(Blocks.COAL_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      NETHER_GOLD_ORE = registerBlock(Blocks.NETHER_GOLD_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       OAK_LOG = registerBlock(Blocks.OAK_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SPRUCE_LOG = registerBlock(Blocks.SPRUCE_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
       BIRCH_LOG = registerBlock(Blocks.BIRCH_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
       JUNGLE_LOG = registerBlock(Blocks.JUNGLE_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
       ACACIA_LOG = registerBlock(Blocks.ACACIA_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
       DARK_OAK_LOG = registerBlock(Blocks.DARK_OAK_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CRIMSON_STEM = registerBlock(Blocks.CRIMSON_STEM, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WARPED_STEM = registerBlock(Blocks.WARPED_STEM, CreativeModeTab.TAB_BUILDING_BLOCKS);
       STRIPPED_OAK_LOG = registerBlock(Blocks.STRIPPED_OAK_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
       STRIPPED_SPRUCE_LOG = registerBlock(Blocks.STRIPPED_SPRUCE_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
       STRIPPED_BIRCH_LOG = registerBlock(Blocks.STRIPPED_BIRCH_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
       STRIPPED_JUNGLE_LOG = registerBlock(Blocks.STRIPPED_JUNGLE_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
       STRIPPED_ACACIA_LOG = registerBlock(Blocks.STRIPPED_ACACIA_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
       STRIPPED_DARK_OAK_LOG = registerBlock(Blocks.STRIPPED_DARK_OAK_LOG, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      STRIPPED_CRIMSON_STEM = registerBlock(Blocks.STRIPPED_CRIMSON_STEM, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      STRIPPED_WARPED_STEM = registerBlock(Blocks.STRIPPED_WARPED_STEM, CreativeModeTab.TAB_BUILDING_BLOCKS);
       STRIPPED_OAK_WOOD = registerBlock(Blocks.STRIPPED_OAK_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
       STRIPPED_SPRUCE_WOOD = registerBlock(Blocks.STRIPPED_SPRUCE_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
       STRIPPED_BIRCH_WOOD = registerBlock(Blocks.STRIPPED_BIRCH_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
       STRIPPED_JUNGLE_WOOD = registerBlock(Blocks.STRIPPED_JUNGLE_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
       STRIPPED_ACACIA_WOOD = registerBlock(Blocks.STRIPPED_ACACIA_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
       STRIPPED_DARK_OAK_WOOD = registerBlock(Blocks.STRIPPED_DARK_OAK_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      STRIPPED_CRIMSON_HYPHAE = registerBlock(Blocks.STRIPPED_CRIMSON_HYPHAE, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      STRIPPED_WARPED_HYPHAE = registerBlock(Blocks.STRIPPED_WARPED_HYPHAE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       OAK_WOOD = registerBlock(Blocks.OAK_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SPRUCE_WOOD = registerBlock(Blocks.SPRUCE_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
       BIRCH_WOOD = registerBlock(Blocks.BIRCH_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
       JUNGLE_WOOD = registerBlock(Blocks.JUNGLE_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
       ACACIA_WOOD = registerBlock(Blocks.ACACIA_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
       DARK_OAK_WOOD = registerBlock(Blocks.DARK_OAK_WOOD, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CRIMSON_HYPHAE = registerBlock(Blocks.CRIMSON_HYPHAE, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WARPED_HYPHAE = registerBlock(Blocks.WARPED_HYPHAE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       OAK_LEAVES = registerBlock(Blocks.OAK_LEAVES, CreativeModeTab.TAB_DECORATIONS);
       SPRUCE_LEAVES = registerBlock(Blocks.SPRUCE_LEAVES, CreativeModeTab.TAB_DECORATIONS);
       BIRCH_LEAVES = registerBlock(Blocks.BIRCH_LEAVES, CreativeModeTab.TAB_DECORATIONS);
       JUNGLE_LEAVES = registerBlock(Blocks.JUNGLE_LEAVES, CreativeModeTab.TAB_DECORATIONS);
       ACACIA_LEAVES = registerBlock(Blocks.ACACIA_LEAVES, CreativeModeTab.TAB_DECORATIONS);
@@ -1039,18 +1143,30 @@
       CORNFLOWER = registerBlock(Blocks.CORNFLOWER, CreativeModeTab.TAB_DECORATIONS);
       LILY_OF_THE_VALLEY = registerBlock(Blocks.LILY_OF_THE_VALLEY, CreativeModeTab.TAB_DECORATIONS);
       WITHER_ROSE = registerBlock(Blocks.WITHER_ROSE, CreativeModeTab.TAB_DECORATIONS);
       BROWN_MUSHROOM = registerBlock(Blocks.BROWN_MUSHROOM, CreativeModeTab.TAB_DECORATIONS);
       RED_MUSHROOM = registerBlock(Blocks.RED_MUSHROOM, CreativeModeTab.TAB_DECORATIONS);
+      CRIMSON_FUNGUS = registerBlock(Blocks.CRIMSON_FUNGUS, CreativeModeTab.TAB_DECORATIONS);
+      WARPED_FUNGUS = registerBlock(Blocks.WARPED_FUNGUS, CreativeModeTab.TAB_DECORATIONS);
+      CRIMSON_ROOTS = registerBlock(Blocks.CRIMSON_ROOTS, CreativeModeTab.TAB_DECORATIONS);
+      WARPED_ROOTS = registerBlock(Blocks.WARPED_ROOTS, CreativeModeTab.TAB_DECORATIONS);
+      NETHER_SPROUTS = registerBlock(Blocks.NETHER_SPROUTS, CreativeModeTab.TAB_DECORATIONS);
+      WEEPING_VINES = registerBlock(Blocks.WEEPING_VINES, CreativeModeTab.TAB_DECORATIONS);
+      TWISTING_VINES = registerBlock(Blocks.TWISTING_VINES, CreativeModeTab.TAB_DECORATIONS);
+      SUGAR_CANE = registerBlock(Blocks.SUGAR_CANE, CreativeModeTab.TAB_DECORATIONS);
+      KELP = registerBlock(Blocks.KELP, CreativeModeTab.TAB_DECORATIONS);
+      BAMBOO = registerBlock(Blocks.BAMBOO, CreativeModeTab.TAB_DECORATIONS);
       GOLD_BLOCK = registerBlock(Blocks.GOLD_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       IRON_BLOCK = registerBlock(Blocks.IRON_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       OAK_SLAB = registerBlock(Blocks.OAK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SPRUCE_SLAB = registerBlock(Blocks.SPRUCE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       BIRCH_SLAB = registerBlock(Blocks.BIRCH_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       JUNGLE_SLAB = registerBlock(Blocks.JUNGLE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       ACACIA_SLAB = registerBlock(Blocks.ACACIA_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       DARK_OAK_SLAB = registerBlock(Blocks.DARK_OAK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CRIMSON_SLAB = registerBlock(Blocks.CRIMSON_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WARPED_SLAB = registerBlock(Blocks.WARPED_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       STONE_SLAB = registerBlock(Blocks.STONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SMOOTH_STONE_SLAB = registerBlock(Blocks.SMOOTH_STONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SANDSTONE_SLAB = registerBlock(Blocks.SANDSTONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       CUT_STANDSTONE_SLAB = registerBlock(Blocks.CUT_SANDSTONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
       PETRIFIED_OAK_SLAB = registerBlock(Blocks.PETRIFIED_OAK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
@@ -1098,13 +1214,15 @@
       SPRUCE_PRESSURE_PLATE = registerBlock(Blocks.SPRUCE_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
       BIRCH_PRESSURE_PLATE = registerBlock(Blocks.BIRCH_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
       JUNGLE_PRESSURE_PLATE = registerBlock(Blocks.JUNGLE_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
       ACACIA_PRESSURE_PLATE = registerBlock(Blocks.ACACIA_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
       DARK_OAK_PRESSURE_PLATE = registerBlock(Blocks.DARK_OAK_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
+      CRIMSON_PRESSURE_PLATE = registerBlock(Blocks.CRIMSON_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
+      WARPED_PRESSURE_PLATE = registerBlock(Blocks.WARPED_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
+      POLISHED_BLACKSTONE_PRESSURE_PLATE = registerBlock(Blocks.POLISHED_BLACKSTONE_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
       REDSTONE_ORE = registerBlock(Blocks.REDSTONE_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       REDSTONE_TORCH = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.REDSTONE_TORCH, Blocks.REDSTONE_WALL_TORCH, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
-      STONE_BUTTON = registerBlock(Blocks.STONE_BUTTON, CreativeModeTab.TAB_REDSTONE);
       SNOW = registerBlock(Blocks.SNOW, CreativeModeTab.TAB_DECORATIONS);
       ICE = registerBlock(Blocks.ICE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SNOW_BLOCK = registerBlock(Blocks.SNOW_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       CACTUS = registerBlock(Blocks.CACTUS, CreativeModeTab.TAB_DECORATIONS);
       CLAY = registerBlock(Blocks.CLAY, CreativeModeTab.TAB_BUILDING_BLOCKS);
@@ -1113,22 +1231,30 @@
       SPRUCE_FENCE = registerBlock(Blocks.SPRUCE_FENCE, CreativeModeTab.TAB_DECORATIONS);
       BIRCH_FENCE = registerBlock(Blocks.BIRCH_FENCE, CreativeModeTab.TAB_DECORATIONS);
       JUNGLE_FENCE = registerBlock(Blocks.JUNGLE_FENCE, CreativeModeTab.TAB_DECORATIONS);
       ACACIA_FENCE = registerBlock(Blocks.ACACIA_FENCE, CreativeModeTab.TAB_DECORATIONS);
       DARK_OAK_FENCE = registerBlock(Blocks.DARK_OAK_FENCE, CreativeModeTab.TAB_DECORATIONS);
+      CRIMSON_FENCE = registerBlock(Blocks.CRIMSON_FENCE, CreativeModeTab.TAB_DECORATIONS);
+      WARPED_FENCE = registerBlock(Blocks.WARPED_FENCE, CreativeModeTab.TAB_DECORATIONS);
       PUMPKIN = registerBlock(Blocks.PUMPKIN, CreativeModeTab.TAB_BUILDING_BLOCKS);
       CARVED_PUMPKIN = registerBlock(Blocks.CARVED_PUMPKIN, CreativeModeTab.TAB_BUILDING_BLOCKS);
       NETHERRACK = registerBlock(Blocks.NETHERRACK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SOUL_SAND = registerBlock(Blocks.SOUL_SAND, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      SOUL_SOIL = registerBlock(Blocks.SOUL_SOIL, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      BASALT = registerBlock(Blocks.BASALT, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      POLISHED_BASALT = registerBlock(Blocks.POLISHED_BASALT, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      SOUL_TORCH = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.SOUL_TORCH, Blocks.SOUL_WALL_TORCH, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
       GLOWSTONE = registerBlock(Blocks.GLOWSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       JACK_O_LANTERN = registerBlock(Blocks.JACK_O_LANTERN, CreativeModeTab.TAB_BUILDING_BLOCKS);
       OAK_TRAPDOOR = registerBlock(Blocks.OAK_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
       SPRUCE_TRAPDOOR = registerBlock(Blocks.SPRUCE_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
       BIRCH_TRAPDOOR = registerBlock(Blocks.BIRCH_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
       JUNGLE_TRAPDOOR = registerBlock(Blocks.JUNGLE_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
       ACACIA_TRAPDOOR = registerBlock(Blocks.ACACIA_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
       DARK_OAK_TRAPDOOR = registerBlock(Blocks.DARK_OAK_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
+      CRIMSON_TRAPDOOR = registerBlock(Blocks.CRIMSON_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
+      WARPED_TRAPDOOR = registerBlock(Blocks.WARPED_TRAPDOOR, CreativeModeTab.TAB_REDSTONE);
       INFESTED_STONE = registerBlock(Blocks.INFESTED_STONE, CreativeModeTab.TAB_DECORATIONS);
       INFESTED_COBBLESTONE = registerBlock(Blocks.INFESTED_COBBLESTONE, CreativeModeTab.TAB_DECORATIONS);
       INFESTED_STONE_BRICKS = registerBlock(Blocks.INFESTED_STONE_BRICKS, CreativeModeTab.TAB_DECORATIONS);
       INFESTED_MOSSY_STONE_BRICKS = registerBlock(Blocks.INFESTED_MOSSY_STONE_BRICKS, CreativeModeTab.TAB_DECORATIONS);
       INFESTED_CRACKED_STONE_BRICKS = registerBlock(Blocks.INFESTED_CRACKED_STONE_BRICKS, CreativeModeTab.TAB_DECORATIONS);
@@ -1139,24 +1265,29 @@
       CHISELED_STONE_BRICKS = registerBlock(Blocks.CHISELED_STONE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       BROWN_MUSHROOM_BLOCK = registerBlock(Blocks.BROWN_MUSHROOM_BLOCK, CreativeModeTab.TAB_DECORATIONS);
       RED_MUSHROOM_BLOCK = registerBlock(Blocks.RED_MUSHROOM_BLOCK, CreativeModeTab.TAB_DECORATIONS);
       MUSHROOM_STEM = registerBlock(Blocks.MUSHROOM_STEM, CreativeModeTab.TAB_DECORATIONS);
       IRON_BARS = registerBlock(Blocks.IRON_BARS, CreativeModeTab.TAB_DECORATIONS);
+      CHAIN = registerBlock(Blocks.CHAIN, CreativeModeTab.TAB_DECORATIONS);
       GLASS_PANE = registerBlock(Blocks.GLASS_PANE, CreativeModeTab.TAB_DECORATIONS);
       MELON = registerBlock(Blocks.MELON, CreativeModeTab.TAB_BUILDING_BLOCKS);
       VINE = registerBlock(Blocks.VINE, CreativeModeTab.TAB_DECORATIONS);
       OAK_FENCE_GATE = registerBlock(Blocks.OAK_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
       SPRUCE_FENCE_GATE = registerBlock(Blocks.SPRUCE_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
       BIRCH_FENCE_GATE = registerBlock(Blocks.BIRCH_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
       JUNGLE_FENCE_GATE = registerBlock(Blocks.JUNGLE_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
       ACACIA_FENCE_GATE = registerBlock(Blocks.ACACIA_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
       DARK_OAK_FENCE_GATE = registerBlock(Blocks.DARK_OAK_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
+      CRIMSON_FENCE_GATE = registerBlock(Blocks.CRIMSON_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
+      WARPED_FENCE_GATE = registerBlock(Blocks.WARPED_FENCE_GATE, CreativeModeTab.TAB_REDSTONE);
       BRICK_STAIRS = registerBlock(Blocks.BRICK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       STONE_BRICK_STAIRS = registerBlock(Blocks.STONE_BRICK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       MYCELIUM = registerBlock(Blocks.MYCELIUM, CreativeModeTab.TAB_BUILDING_BLOCKS);
       LILY_PAD = registerBlock((BlockItem)(new WaterLilyBlockItem(Blocks.LILY_PAD, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS))));
       NETHER_BRICKS = registerBlock(Blocks.NETHER_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CRACKED_NETHER_BRICKS = registerBlock(Blocks.CRACKED_NETHER_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CHISELED_NETHER_BRICKS = registerBlock(Blocks.CHISELED_NETHER_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       NETHER_BRICK_FENCE = registerBlock(Blocks.NETHER_BRICK_FENCE, CreativeModeTab.TAB_DECORATIONS);
       NETHER_BRICK_STAIRS = registerBlock(Blocks.NETHER_BRICK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       ENCHANTING_TABLE = registerBlock(Blocks.ENCHANTING_TABLE, CreativeModeTab.TAB_DECORATIONS);
       END_PORTAL_FRAME = registerBlock(Blocks.END_PORTAL_FRAME, CreativeModeTab.TAB_DECORATIONS);
       END_STONE = registerBlock(Blocks.END_STONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
@@ -1169,10 +1300,12 @@
       TRIPWIRE_HOOK = registerBlock(Blocks.TRIPWIRE_HOOK, CreativeModeTab.TAB_REDSTONE);
       EMERALD_BLOCK = registerBlock(Blocks.EMERALD_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       SPRUCE_STAIRS = registerBlock(Blocks.SPRUCE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       BIRCH_STAIRS = registerBlock(Blocks.BIRCH_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       JUNGLE_STAIRS = registerBlock(Blocks.JUNGLE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CRIMSON_STAIRS = registerBlock(Blocks.CRIMSON_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WARPED_STAIRS = registerBlock(Blocks.WARPED_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       COMMAND_BLOCK = registerBlock((BlockItem)(new GameMasterBlockItem(Blocks.COMMAND_BLOCK, (new Item.Properties()).rarity(Rarity.EPIC))));
       BEACON = registerBlock(new BlockItem(Blocks.BEACON, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE)));
       COBBLESTONE_WALL = registerBlock(Blocks.COBBLESTONE_WALL, CreativeModeTab.TAB_DECORATIONS);
       MOSSY_COBBLESTONE_WALL = registerBlock(Blocks.MOSSY_COBBLESTONE_WALL, CreativeModeTab.TAB_DECORATIONS);
       BRICK_WALL = registerBlock(Blocks.BRICK_WALL, CreativeModeTab.TAB_DECORATIONS);
@@ -1185,16 +1318,23 @@
       ANDESITE_WALL = registerBlock(Blocks.ANDESITE_WALL, CreativeModeTab.TAB_DECORATIONS);
       RED_NETHER_BRICK_WALL = registerBlock(Blocks.RED_NETHER_BRICK_WALL, CreativeModeTab.TAB_DECORATIONS);
       SANDSTONE_WALL = registerBlock(Blocks.SANDSTONE_WALL, CreativeModeTab.TAB_DECORATIONS);
       END_STONE_BRICK_WALL = registerBlock(Blocks.END_STONE_BRICK_WALL, CreativeModeTab.TAB_DECORATIONS);
       DIORITE_WALL = registerBlock(Blocks.DIORITE_WALL, CreativeModeTab.TAB_DECORATIONS);
+      BLACKSTONE_WALL = registerBlock(Blocks.BLACKSTONE_WALL, CreativeModeTab.TAB_DECORATIONS);
+      POLISHED_BLACKSTONE_WALL = registerBlock(Blocks.POLISHED_BLACKSTONE_WALL, CreativeModeTab.TAB_DECORATIONS);
+      POLISHED_BLACKSTONE_BRICK_WALL = registerBlock(Blocks.POLISHED_BLACKSTONE_BRICK_WALL, CreativeModeTab.TAB_DECORATIONS);
+      STONE_BUTTON = registerBlock(Blocks.STONE_BUTTON, CreativeModeTab.TAB_REDSTONE);
       OAK_BUTTON = registerBlock(Blocks.OAK_BUTTON, CreativeModeTab.TAB_REDSTONE);
       SPRUCE_BUTTON = registerBlock(Blocks.SPRUCE_BUTTON, CreativeModeTab.TAB_REDSTONE);
       BIRCH_BUTTON = registerBlock(Blocks.BIRCH_BUTTON, CreativeModeTab.TAB_REDSTONE);
       JUNGLE_BUTTON = registerBlock(Blocks.JUNGLE_BUTTON, CreativeModeTab.TAB_REDSTONE);
       ACACIA_BUTTON = registerBlock(Blocks.ACACIA_BUTTON, CreativeModeTab.TAB_REDSTONE);
       DARK_OAK_BUTTON = registerBlock(Blocks.DARK_OAK_BUTTON, CreativeModeTab.TAB_REDSTONE);
+      CRIMSON_BUTTON = registerBlock(Blocks.CRIMSON_BUTTON, CreativeModeTab.TAB_REDSTONE);
+      WARPED_BUTTON = registerBlock(Blocks.WARPED_BUTTON, CreativeModeTab.TAB_REDSTONE);
+      POLISHED_BLACKSTONE_BUTTON = registerBlock(Blocks.POLISHED_BLACKSTONE_BUTTON, CreativeModeTab.TAB_REDSTONE);
       ANVIL = registerBlock(Blocks.ANVIL, CreativeModeTab.TAB_DECORATIONS);
       CHIPPED_ANVIL = registerBlock(Blocks.CHIPPED_ANVIL, CreativeModeTab.TAB_DECORATIONS);
       DAMAGED_ANVIL = registerBlock(Blocks.DAMAGED_ANVIL, CreativeModeTab.TAB_DECORATIONS);
       TRAPPED_CHEST = registerBlock(Blocks.TRAPPED_CHEST, CreativeModeTab.TAB_REDSTONE);
       LIGHT_WEIGHTED_PRESSURE_PLATE = registerBlock(Blocks.LIGHT_WEIGHTED_PRESSURE_PLATE, CreativeModeTab.TAB_REDSTONE);
@@ -1203,10 +1343,11 @@
       REDSTONE_BLOCK = registerBlock(Blocks.REDSTONE_BLOCK, CreativeModeTab.TAB_REDSTONE);
       NETHER_QUARTZ_ORE = registerBlock(Blocks.NETHER_QUARTZ_ORE, CreativeModeTab.TAB_BUILDING_BLOCKS);
       HOPPER = registerBlock(Blocks.HOPPER, CreativeModeTab.TAB_REDSTONE);
       CHISELED_QUARTZ_BLOCK = registerBlock(Blocks.CHISELED_QUARTZ_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       QUARTZ_BLOCK = registerBlock(Blocks.QUARTZ_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      QUARTZ_BRICKS = registerBlock(Blocks.QUARTZ_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       QUARTZ_PILLAR = registerBlock(Blocks.QUARTZ_PILLAR, CreativeModeTab.TAB_BUILDING_BLOCKS);
       QUARTZ_STAIRS = registerBlock(Blocks.QUARTZ_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       ACTIVATOR_RAIL = registerBlock(Blocks.ACTIVATOR_RAIL, CreativeModeTab.TAB_TRANSPORTATION);
       DROPPER = registerBlock(Blocks.DROPPER, CreativeModeTab.TAB_REDSTONE);
       WHITE_TERRACOTTA = registerBlock(Blocks.WHITE_TERRACOTTA, CreativeModeTab.TAB_BUILDING_BLOCKS);
@@ -1302,10 +1443,11 @@
       RED_SANDSTONE_STAIRS = registerBlock(Blocks.RED_SANDSTONE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       REPEATING_COMMAND_BLOCK = registerBlock((BlockItem)(new GameMasterBlockItem(Blocks.REPEATING_COMMAND_BLOCK, (new Item.Properties()).rarity(Rarity.EPIC))));
       CHAIN_COMMAND_BLOCK = registerBlock((BlockItem)(new GameMasterBlockItem(Blocks.CHAIN_COMMAND_BLOCK, (new Item.Properties()).rarity(Rarity.EPIC))));
       MAGMA_BLOCK = registerBlock(Blocks.MAGMA_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       NETHER_WART_BLOCK = registerBlock(Blocks.NETHER_WART_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      WARPED_WART_BLOCK = registerBlock(Blocks.WARPED_WART_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       RED_NETHER_BRICKS = registerBlock(Blocks.RED_NETHER_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
       BONE_BLOCK = registerBlock(Blocks.BONE_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
       STRUCTURE_VOID = registerBlock(Blocks.STRUCTURE_VOID);
       OBSERVER = registerBlock(Blocks.OBSERVER, CreativeModeTab.TAB_REDSTONE);
       SHULKER_BOX = registerBlock(new BlockItem(Blocks.SHULKER_BOX, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_DECORATIONS)));
@@ -1439,15 +1581,16 @@
       SPRUCE_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.SPRUCE_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
       BIRCH_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.BIRCH_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
       JUNGLE_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.JUNGLE_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
       ACACIA_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.ACACIA_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
       DARK_OAK_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.DARK_OAK_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
+      CRIMSON_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.CRIMSON_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
+      WARPED_DOOR = registerBlock((BlockItem)(new DoubleHighBlockItem(Blocks.WARPED_DOOR, (new Item.Properties()).tab(CreativeModeTab.TAB_REDSTONE))));
       REPEATER = registerBlock(Blocks.REPEATER, CreativeModeTab.TAB_REDSTONE);
       COMPARATOR = registerBlock(Blocks.COMPARATOR, CreativeModeTab.TAB_REDSTONE);
       STRUCTURE_BLOCK = registerBlock((BlockItem)(new GameMasterBlockItem(Blocks.STRUCTURE_BLOCK, (new Item.Properties()).rarity(Rarity.EPIC))));
       JIGSAW = registerBlock((BlockItem)(new GameMasterBlockItem(Blocks.JIGSAW, (new Item.Properties()).rarity(Rarity.EPIC))));
-      COMPOSTER = registerBlock(Blocks.COMPOSTER, CreativeModeTab.TAB_MISC);
       TURTLE_HELMET = registerItem((String)"turtle_helmet", new ArmorItem(ArmorMaterials.TURTLE, EquipmentSlot.HEAD, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
       SCUTE = registerItem("scute", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       IRON_SHOVEL = registerItem((String)"iron_shovel", new ShovelItem(Tiers.IRON, 1.5F, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
       IRON_PICKAXE = registerItem((String)"iron_pickaxe", new PickaxeItem(Tiers.IRON, 1, -2.8F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
       IRON_AXE = registerItem((String)"iron_axe", new AxeItem(Tiers.IRON, 6.0F, -3.1F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
@@ -1458,10 +1601,12 @@
       COAL = registerItem("coal", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       CHARCOAL = registerItem("charcoal", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       DIAMOND = registerItem("diamond", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       IRON_INGOT = registerItem("iron_ingot", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       GOLD_INGOT = registerItem("gold_ingot", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
+      NETHERITE_INGOT = registerItem("netherite_ingot", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS).fireResistant()));
+      NETHERITE_SCRAP = registerItem("netherite_scrap", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS).fireResistant()));
       IRON_SWORD = registerItem((String)"iron_sword", new SwordItem(Tiers.IRON, 3, -2.4F, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
       WOODEN_SWORD = registerItem((String)"wooden_sword", new SwordItem(Tiers.WOOD, 3, -2.4F, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
       WOODEN_SHOVEL = registerItem((String)"wooden_shovel", new ShovelItem(Tiers.WOOD, 1.5F, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
       WOODEN_PICKAXE = registerItem((String)"wooden_pickaxe", new PickaxeItem(Tiers.WOOD, 1, -2.8F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
       WOODEN_AXE = registerItem((String)"wooden_axe", new AxeItem(Tiers.WOOD, 6.0F, -3.2F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
@@ -1478,18 +1623,23 @@
       MUSHROOM_STEW = registerItem((String)"mushroom_stew", new BowlFoodItem((new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_FOOD).food(Foods.MUSHROOM_STEW)));
       GOLDEN_SWORD = registerItem((String)"golden_sword", new SwordItem(Tiers.GOLD, 3, -2.4F, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
       GOLDEN_SHOVEL = registerItem((String)"golden_shovel", new ShovelItem(Tiers.GOLD, 1.5F, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
       GOLDEN_PICKAXE = registerItem((String)"golden_pickaxe", new PickaxeItem(Tiers.GOLD, 1, -2.8F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
       GOLDEN_AXE = registerItem((String)"golden_axe", new AxeItem(Tiers.GOLD, 6.0F, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
+      NETHERITE_SWORD = registerItem((String)"netherite_sword", new SwordItem(Tiers.NETHERITE, 3, -2.4F, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT).fireResistant()));
+      NETHERITE_SHOVEL = registerItem((String)"netherite_shovel", new ShovelItem(Tiers.NETHERITE, 1.5F, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS).fireResistant()));
+      NETHERITE_PICKAXE = registerItem((String)"netherite_pickaxe", new PickaxeItem(Tiers.NETHERITE, 1, -2.8F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS).fireResistant()));
+      NETHERITE_AXE = registerItem((String)"netherite_axe", new AxeItem(Tiers.NETHERITE, 5.0F, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS).fireResistant()));
       STRING = registerItem((String)"string", new ItemNameBlockItem(Blocks.TRIPWIRE, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       FEATHER = registerItem("feather", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       GUNPOWDER = registerItem("gunpowder", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
-      WOODEN_HOE = registerItem((String)"wooden_hoe", new HoeItem(Tiers.WOOD, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
-      STONE_HOE = registerItem((String)"stone_hoe", new HoeItem(Tiers.STONE, -2.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
-      IRON_HOE = registerItem((String)"iron_hoe", new HoeItem(Tiers.IRON, -1.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
-      DIAMOND_HOE = registerItem((String)"diamond_hoe", new HoeItem(Tiers.DIAMOND, 0.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
-      GOLDEN_HOE = registerItem((String)"golden_hoe", new HoeItem(Tiers.GOLD, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
+      WOODEN_HOE = registerItem((String)"wooden_hoe", new HoeItem(Tiers.WOOD, 0, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
+      STONE_HOE = registerItem((String)"stone_hoe", new HoeItem(Tiers.STONE, -1, -2.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
+      IRON_HOE = registerItem((String)"iron_hoe", new HoeItem(Tiers.IRON, -2, -1.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
+      DIAMOND_HOE = registerItem((String)"diamond_hoe", new HoeItem(Tiers.DIAMOND, -3, 0.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
+      GOLDEN_HOE = registerItem((String)"golden_hoe", new HoeItem(Tiers.GOLD, 0, -3.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
+      NETHERITE_HOE = registerItem((String)"netherite_hoe", new HoeItem(Tiers.NETHERITE, -4, 0.0F, (new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS).fireResistant()));
       WHEAT_SEEDS = registerItem((String)"wheat_seeds", new ItemNameBlockItem(Blocks.WHEAT, (new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       WHEAT = registerItem("wheat", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       BREAD = registerItem("bread", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.BREAD)));
       LEATHER_HELMET = registerItem((String)"leather_helmet", new DyeableArmorItem(ArmorMaterials.LEATHER, EquipmentSlot.HEAD, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
       LEATHER_CHESTPLATE = registerItem((String)"leather_chestplate", new DyeableArmorItem(ArmorMaterials.LEATHER, EquipmentSlot.CHEST, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
@@ -1509,10 +1659,14 @@
       DIAMOND_BOOTS = registerItem((String)"diamond_boots", new ArmorItem(ArmorMaterials.DIAMOND, EquipmentSlot.FEET, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
       GOLDEN_HELMET = registerItem((String)"golden_helmet", new ArmorItem(ArmorMaterials.GOLD, EquipmentSlot.HEAD, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
       GOLDEN_CHESTPLATE = registerItem((String)"golden_chestplate", new ArmorItem(ArmorMaterials.GOLD, EquipmentSlot.CHEST, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
       GOLDEN_LEGGINGS = registerItem((String)"golden_leggings", new ArmorItem(ArmorMaterials.GOLD, EquipmentSlot.LEGS, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
       GOLDEN_BOOTS = registerItem((String)"golden_boots", new ArmorItem(ArmorMaterials.GOLD, EquipmentSlot.FEET, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT)));
+      NETHERITE_HELMET = registerItem((String)"netherite_helmet", new ArmorItem(ArmorMaterials.NETHERITE, EquipmentSlot.HEAD, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT).fireResistant()));
+      NETHERITE_CHESTPLATE = registerItem((String)"netherite_chestplate", new ArmorItem(ArmorMaterials.NETHERITE, EquipmentSlot.CHEST, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT).fireResistant()));
+      NETHERITE_LEGGINGS = registerItem((String)"netherite_leggings", new ArmorItem(ArmorMaterials.NETHERITE, EquipmentSlot.LEGS, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT).fireResistant()));
+      NETHERITE_BOOTS = registerItem((String)"netherite_boots", new ArmorItem(ArmorMaterials.NETHERITE, EquipmentSlot.FEET, (new Item.Properties()).tab(CreativeModeTab.TAB_COMBAT).fireResistant()));
       FLINT = registerItem("flint", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       PORKCHOP = registerItem("porkchop", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.PORKCHOP)));
       COOKED_PORKCHOP = registerItem("cooked_porkchop", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.COOKED_PORKCHOP)));
       PAINTING = registerItem((String)"painting", new HangingEntityItem(EntityType.PAINTING, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS)));
       GOLDEN_APPLE = registerItem("golden_apple", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).rarity(Rarity.RARE).food(Foods.GOLDEN_APPLE)));
@@ -1521,10 +1675,12 @@
       SPRUCE_SIGN = registerItem((String)"spruce_sign", new SignItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS), Blocks.SPRUCE_SIGN, Blocks.SPRUCE_WALL_SIGN));
       BIRCH_SIGN = registerItem((String)"birch_sign", new SignItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS), Blocks.BIRCH_SIGN, Blocks.BIRCH_WALL_SIGN));
       JUNGLE_SIGN = registerItem((String)"jungle_sign", new SignItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS), Blocks.JUNGLE_SIGN, Blocks.JUNGLE_WALL_SIGN));
       ACACIA_SIGN = registerItem((String)"acacia_sign", new SignItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS), Blocks.ACACIA_SIGN, Blocks.ACACIA_WALL_SIGN));
       DARK_OAK_SIGN = registerItem((String)"dark_oak_sign", new SignItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS), Blocks.DARK_OAK_SIGN, Blocks.DARK_OAK_WALL_SIGN));
+      CRIMSON_SIGN = registerItem((String)"crimson_sign", new SignItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS), Blocks.CRIMSON_SIGN, Blocks.CRIMSON_WALL_SIGN));
+      WARPED_SIGN = registerItem((String)"warped_sign", new SignItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_DECORATIONS), Blocks.WARPED_SIGN, Blocks.WARPED_WALL_SIGN));
       BUCKET = registerItem((String)"bucket", new BucketItem(Fluids.EMPTY, (new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_MISC)));
       WATER_BUCKET = registerItem((String)"water_bucket", new BucketItem(Fluids.WATER, (new Item.Properties()).craftRemainder(BUCKET).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
       LAVA_BUCKET = registerItem((String)"lava_bucket", new BucketItem(Fluids.LAVA, (new Item.Properties()).craftRemainder(BUCKET).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
       MINECART = registerItem((String)"minecart", new MinecartItem(AbstractMinecart.Type.RIDEABLE, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
       SADDLE = registerItem((String)"saddle", new SaddleItem((new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
@@ -1537,23 +1693,20 @@
       SALMON_BUCKET = registerItem((String)"salmon_bucket", new FishBucketItem(EntityType.SALMON, Fluids.WATER, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
       COD_BUCKET = registerItem((String)"cod_bucket", new FishBucketItem(EntityType.COD, Fluids.WATER, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
       TROPICAL_FISH_BUCKET = registerItem((String)"tropical_fish_bucket", new FishBucketItem(EntityType.TROPICAL_FISH, Fluids.WATER, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
       BRICK = registerItem("brick", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       CLAY_BALL = registerItem("clay_ball", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
-      SUGAR_CANE = registerBlock(Blocks.SUGAR_CANE, CreativeModeTab.TAB_MISC);
-      KELP = registerBlock(Blocks.KELP, CreativeModeTab.TAB_MISC);
       DRIED_KELP_BLOCK = registerBlock(Blocks.DRIED_KELP_BLOCK, CreativeModeTab.TAB_BUILDING_BLOCKS);
-      BAMBOO = registerBlock(Blocks.BAMBOO, CreativeModeTab.TAB_MATERIALS);
       PAPER = registerItem("paper", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       BOOK = registerItem((String)"book", new BookItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       SLIME_BALL = registerItem("slime_ball", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       CHEST_MINECART = registerItem((String)"chest_minecart", new MinecartItem(AbstractMinecart.Type.CHEST, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
       FURNACE_MINECART = registerItem((String)"furnace_minecart", new MinecartItem(AbstractMinecart.Type.FURNACE, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_TRANSPORTATION)));
       EGG = registerItem((String)"egg", new EggItem((new Item.Properties()).stacksTo(16).tab(CreativeModeTab.TAB_MATERIALS)));
       COMPASS = registerItem((String)"compass", new CompassItem((new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
       FISHING_ROD = registerItem((String)"fishing_rod", new FishingRodItem((new Item.Properties()).durability(64).tab(CreativeModeTab.TAB_TOOLS)));
-      CLOCK = registerItem((String)"clock", new ClockItem((new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
+      CLOCK = registerItem("clock", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_TOOLS)));
       GLOWSTONE_DUST = registerItem("glowstone_dust", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       COD = registerItem("cod", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.COD)));
       SALMON = registerItem("salmon", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.SALMON)));
       TROPICAL_FISH = registerItem("tropical_fish", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.TROPICAL_FISH)));
       PUFFERFISH = registerItem("pufferfish", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.PUFFERFISH)));
@@ -1642,10 +1795,11 @@
       ENDERMITE_SPAWN_EGG = registerItem((String)"endermite_spawn_egg", new SpawnEggItem(EntityType.ENDERMITE, 1447446, 7237230, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       EVOKER_SPAWN_EGG = registerItem((String)"evoker_spawn_egg", new SpawnEggItem(EntityType.EVOKER, 9804699, 1973274, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       FOX_SPAWN_EGG = registerItem((String)"fox_spawn_egg", new SpawnEggItem(EntityType.FOX, 14005919, 13396256, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       GHAST_SPAWN_EGG = registerItem((String)"ghast_spawn_egg", new SpawnEggItem(EntityType.GHAST, 16382457, 12369084, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       GUARDIAN_SPAWN_EGG = registerItem((String)"guardian_spawn_egg", new SpawnEggItem(EntityType.GUARDIAN, 5931634, 15826224, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
+      HOGLIN_SPAWN_EGG = registerItem((String)"hoglin_spawn_egg", new SpawnEggItem(EntityType.HOGLIN, 13004373, 6251620, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       HORSE_SPAWN_EGG = registerItem((String)"horse_spawn_egg", new SpawnEggItem(EntityType.HORSE, 12623485, 15656192, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       HUSK_SPAWN_EGG = registerItem((String)"husk_spawn_egg", new SpawnEggItem(EntityType.HUSK, 7958625, 15125652, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       LLAMA_SPAWN_EGG = registerItem((String)"llama_spawn_egg", new SpawnEggItem(EntityType.LLAMA, 12623485, 10051392, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       MAGMA_CUBE_SPAWN_EGG = registerItem((String)"magma_cube_spawn_egg", new SpawnEggItem(EntityType.MAGMA_CUBE, 3407872, 16579584, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       MOOSHROOM_SPAWN_EGG = registerItem((String)"mooshroom_spawn_egg", new SpawnEggItem(EntityType.MOOSHROOM, 10489616, 12040119, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
@@ -1653,10 +1807,11 @@
       OCELOT_SPAWN_EGG = registerItem((String)"ocelot_spawn_egg", new SpawnEggItem(EntityType.OCELOT, 15720061, 5653556, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       PANDA_SPAWN_EGG = registerItem((String)"panda_spawn_egg", new SpawnEggItem(EntityType.PANDA, 15198183, 1776418, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       PARROT_SPAWN_EGG = registerItem((String)"parrot_spawn_egg", new SpawnEggItem(EntityType.PARROT, 894731, 16711680, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       PHANTOM_SPAWN_EGG = registerItem((String)"phantom_spawn_egg", new SpawnEggItem(EntityType.PHANTOM, 4411786, 8978176, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       PIG_SPAWN_EGG = registerItem((String)"pig_spawn_egg", new SpawnEggItem(EntityType.PIG, 15771042, 14377823, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
+      PIGLIN_SPAWN_EGG = registerItem((String)"piglin_spawn_egg", new SpawnEggItem(EntityType.PIGLIN, 10051392, 16380836, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       PILLAGER_SPAWN_EGG = registerItem((String)"pillager_spawn_egg", new SpawnEggItem(EntityType.PILLAGER, 5451574, 9804699, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       POLAR_BEAR_SPAWN_EGG = registerItem((String)"polar_bear_spawn_egg", new SpawnEggItem(EntityType.POLAR_BEAR, 15921906, 9803152, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       PUFFERFISH_SPAWN_EGG = registerItem((String)"pufferfish_spawn_egg", new SpawnEggItem(EntityType.PUFFERFISH, 16167425, 3654642, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       RABBIT_SPAWN_EGG = registerItem((String)"rabbit_spawn_egg", new SpawnEggItem(EntityType.RABBIT, 10051392, 7555121, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       RAVAGER_SPAWN_EGG = registerItem((String)"ravager_spawn_egg", new SpawnEggItem(EntityType.RAVAGER, 7697520, 5984329, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
@@ -1668,24 +1823,26 @@
       SKELETON_HORSE_SPAWN_EGG = registerItem((String)"skeleton_horse_spawn_egg", new SpawnEggItem(EntityType.SKELETON_HORSE, 6842447, 15066584, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       SLIME_SPAWN_EGG = registerItem((String)"slime_spawn_egg", new SpawnEggItem(EntityType.SLIME, 5349438, 8306542, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       SPIDER_SPAWN_EGG = registerItem((String)"spider_spawn_egg", new SpawnEggItem(EntityType.SPIDER, 3419431, 11013646, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       SQUID_SPAWN_EGG = registerItem((String)"squid_spawn_egg", new SpawnEggItem(EntityType.SQUID, 2243405, 7375001, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       STRAY_SPAWN_EGG = registerItem((String)"stray_spawn_egg", new SpawnEggItem(EntityType.STRAY, 6387319, 14543594, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
+      STRIDER_SPAWN_EGG = registerItem((String)"strider_spawn_egg", new SpawnEggItem(EntityType.STRIDER, 10236982, 5065037, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       TRADER_LLAMA_SPAWN_EGG = registerItem((String)"trader_llama_spawn_egg", new SpawnEggItem(EntityType.TRADER_LLAMA, 15377456, 4547222, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       TROPICAL_FISH_SPAWN_EGG = registerItem((String)"tropical_fish_spawn_egg", new SpawnEggItem(EntityType.TROPICAL_FISH, 15690005, 16775663, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       TURTLE_SPAWN_EGG = registerItem((String)"turtle_spawn_egg", new SpawnEggItem(EntityType.TURTLE, 15198183, 44975, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       VEX_SPAWN_EGG = registerItem((String)"vex_spawn_egg", new SpawnEggItem(EntityType.VEX, 8032420, 15265265, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       VILLAGER_SPAWN_EGG = registerItem((String)"villager_spawn_egg", new SpawnEggItem(EntityType.VILLAGER, 5651507, 12422002, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       VINDICATOR_SPAWN_EGG = registerItem((String)"vindicator_spawn_egg", new SpawnEggItem(EntityType.VINDICATOR, 9804699, 2580065, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       WANDERING_TRADER_SPAWN_EGG = registerItem((String)"wandering_trader_spawn_egg", new SpawnEggItem(EntityType.WANDERING_TRADER, 4547222, 15377456, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       WITCH_SPAWN_EGG = registerItem((String)"witch_spawn_egg", new SpawnEggItem(EntityType.WITCH, 3407872, 5349438, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       WITHER_SKELETON_SPAWN_EGG = registerItem((String)"wither_skeleton_spawn_egg", new SpawnEggItem(EntityType.WITHER_SKELETON, 1315860, 4672845, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       WOLF_SPAWN_EGG = registerItem((String)"wolf_spawn_egg", new SpawnEggItem(EntityType.WOLF, 14144467, 13545366, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
+      ZOGLIN_SPAWN_EGG = registerItem((String)"zoglin_spawn_egg", new SpawnEggItem(EntityType.ZOGLIN, 13004373, 15132390, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       ZOMBIE_SPAWN_EGG = registerItem((String)"zombie_spawn_egg", new SpawnEggItem(EntityType.ZOMBIE, 44975, 7969893, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       ZOMBIE_HORSE_SPAWN_EGG = registerItem((String)"zombie_horse_spawn_egg", new SpawnEggItem(EntityType.ZOMBIE_HORSE, 3232308, 9945732, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
-      ZOMBIE_PIGMAN_SPAWN_EGG = registerItem((String)"zombie_pigman_spawn_egg", new SpawnEggItem(EntityType.ZOMBIE_PIGMAN, 15373203, 5009705, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       ZOMBIE_VILLAGER_SPAWN_EGG = registerItem((String)"zombie_villager_spawn_egg", new SpawnEggItem(EntityType.ZOMBIE_VILLAGER, 5651507, 7969893, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
+      ZOMBIFIED_PIGLIN_SPAWN_EGG = registerItem((String)"zombified_piglin_spawn_egg", new SpawnEggItem(EntityType.ZOMBIFIED_PIGLIN, 15373203, 5009705, (new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       EXPERIENCE_BOTTLE = registerItem((String)"experience_bottle", new ExperienceBottleItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.UNCOMMON)));
       FIRE_CHARGE = registerItem((String)"fire_charge", new FireChargeItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       WRITABLE_BOOK = registerItem((String)"writable_book", new WritableBookItem((new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
       WRITTEN_BOOK = registerItem((String)"written_book", new WrittenBookItem((new Item.Properties()).stacksTo(16)));
       EMERALD = registerItem("emerald", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
@@ -1701,11 +1858,12 @@
       WITHER_SKELETON_SKULL = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.WITHER_SKELETON_SKULL, Blocks.WITHER_SKELETON_WALL_SKULL, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS).rarity(Rarity.UNCOMMON))));
       PLAYER_HEAD = registerBlock((BlockItem)(new PlayerHeadItem(Blocks.PLAYER_HEAD, Blocks.PLAYER_WALL_HEAD, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS).rarity(Rarity.UNCOMMON))));
       ZOMBIE_HEAD = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.ZOMBIE_HEAD, Blocks.ZOMBIE_WALL_HEAD, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS).rarity(Rarity.UNCOMMON))));
       CREEPER_HEAD = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.CREEPER_HEAD, Blocks.CREEPER_WALL_HEAD, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS).rarity(Rarity.UNCOMMON))));
       DRAGON_HEAD = registerBlock((BlockItem)(new StandingAndWallBlockItem(Blocks.DRAGON_HEAD, Blocks.DRAGON_WALL_HEAD, (new Item.Properties()).tab(CreativeModeTab.TAB_DECORATIONS).rarity(Rarity.UNCOMMON))));
-      CARROT_ON_A_STICK = registerItem((String)"carrot_on_a_stick", new CarrotOnAStickItem((new Item.Properties()).durability(25).tab(CreativeModeTab.TAB_TRANSPORTATION)));
+      CARROT_ON_A_STICK = registerItem((String)"carrot_on_a_stick", new FoodOnAStickItem((new Item.Properties()).durability(25).tab(CreativeModeTab.TAB_TRANSPORTATION), EntityType.PIG, 7));
+      WARPED_FUNGUS_ON_A_STICK = registerItem((String)"warped_fungus_on_a_stick", new FoodOnAStickItem((new Item.Properties()).durability(100).tab(CreativeModeTab.TAB_TRANSPORTATION), EntityType.STRIDER, 1));
       NETHER_STAR = registerItem((String)"nether_star", new SimpleFoiledItem((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS).rarity(Rarity.UNCOMMON)));
       PUMPKIN_PIE = registerItem("pumpkin_pie", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.PUMPKIN_PIE)));
       FIREWORK_ROCKET = registerItem((String)"firework_rocket", new FireworkRocketItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       FIREWORK_STAR = registerItem((String)"firework_star", new FireworkStarItem((new Item.Properties()).tab(CreativeModeTab.TAB_MISC)));
       ENCHANTED_BOOK = registerItem((String)"enchanted_book", new EnchantedBookItem((new Item.Properties()).stacksTo(1).rarity(Rarity.UNCOMMON)));
@@ -1779,10 +1937,11 @@
       MUSIC_DISC_STAL = registerItem((String)"music_disc_stal", new RecordItem(8, SoundEvents.MUSIC_DISC_STAL, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE)));
       MUSIC_DISC_STRAD = registerItem((String)"music_disc_strad", new RecordItem(9, SoundEvents.MUSIC_DISC_STRAD, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE)));
       MUSIC_DISC_WARD = registerItem((String)"music_disc_ward", new RecordItem(10, SoundEvents.MUSIC_DISC_WARD, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE)));
       MUSIC_DISC_11 = registerItem((String)"music_disc_11", new RecordItem(11, SoundEvents.MUSIC_DISC_11, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE)));
       MUSIC_DISC_WAIT = registerItem((String)"music_disc_wait", new RecordItem(12, SoundEvents.MUSIC_DISC_WAIT, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE)));
+      MUSIC_DISC_PIGSTEP = registerItem((String)"music_disc_pigstep", new RecordItem(13, SoundEvents.MUSIC_DISC_PIGSTEP, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.RARE)));
       TRIDENT = registerItem((String)"trident", new TridentItem((new Item.Properties()).durability(250).tab(CreativeModeTab.TAB_COMBAT)));
       PHANTOM_MEMBRANE = registerItem("phantom_membrane", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_BREWING)));
       NAUTILUS_SHELL = registerItem("nautilus_shell", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       HEART_OF_THE_SEA = registerItem("heart_of_the_sea", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS).rarity(Rarity.UNCOMMON)));
       CROSSBOW = registerItem((String)"crossbow", new CrossbowItem((new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_COMBAT).durability(326)));
@@ -1791,10 +1950,12 @@
       FLOWER_BANNER_PATTERN = registerItem((String)"flower_banner_pattern", new BannerPatternItem(BannerPattern.FLOWER, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
       CREEPER_BANNER_PATTERN = registerItem((String)"creeper_banner_pattern", new BannerPatternItem(BannerPattern.CREEPER, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.UNCOMMON)));
       SKULL_BANNER_PATTERN = registerItem((String)"skull_banner_pattern", new BannerPatternItem(BannerPattern.SKULL, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.UNCOMMON)));
       MOJANG_BANNER_PATTERN = registerItem((String)"mojang_banner_pattern", new BannerPatternItem(BannerPattern.MOJANG, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC).rarity(Rarity.EPIC)));
       GLOBE_BANNER_PATTER = registerItem((String)"globe_banner_pattern", new BannerPatternItem(BannerPattern.GLOBE, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
+      PIGLIN_BANNER_PATTERN = registerItem((String)"piglin_banner_pattern", new BannerPatternItem(BannerPattern.PIGLIN, (new Item.Properties()).stacksTo(1).tab(CreativeModeTab.TAB_MISC)));
+      COMPOSTER = registerBlock(Blocks.COMPOSTER, CreativeModeTab.TAB_DECORATIONS);
       BARREL = registerBlock(Blocks.BARREL, CreativeModeTab.TAB_DECORATIONS);
       SMOKER = registerBlock(Blocks.SMOKER, CreativeModeTab.TAB_DECORATIONS);
       BLAST_FURNACE = registerBlock(Blocks.BLAST_FURNACE, CreativeModeTab.TAB_DECORATIONS);
       CARTOGRAPHY_TABLE = registerBlock(Blocks.CARTOGRAPHY_TABLE, CreativeModeTab.TAB_DECORATIONS);
       FLETCHING_TABLE = registerBlock(Blocks.FLETCHING_TABLE, CreativeModeTab.TAB_DECORATIONS);
@@ -1802,15 +1963,36 @@
       LECTERN = registerBlock(Blocks.LECTERN, CreativeModeTab.TAB_REDSTONE);
       SMITHING_TABLE = registerBlock(Blocks.SMITHING_TABLE, CreativeModeTab.TAB_DECORATIONS);
       STONECUTTER = registerBlock(Blocks.STONECUTTER, CreativeModeTab.TAB_DECORATIONS);
       BELL = registerBlock(Blocks.BELL, CreativeModeTab.TAB_DECORATIONS);
       LANTERN = registerBlock(Blocks.LANTERN, CreativeModeTab.TAB_DECORATIONS);
+      SOUL_LANTERN = registerBlock(Blocks.SOUL_LANTERN, CreativeModeTab.TAB_DECORATIONS);
       SWEET_BERRIES = registerItem((String)"sweet_berries", new ItemNameBlockItem(Blocks.SWEET_BERRY_BUSH, (new Item.Properties()).tab(CreativeModeTab.TAB_FOOD).food(Foods.SWEET_BERRIES)));
       CAMPFIRE = registerBlock(Blocks.CAMPFIRE, CreativeModeTab.TAB_DECORATIONS);
+      SOUL_CAMPFIRE = registerBlock(Blocks.SOUL_CAMPFIRE, CreativeModeTab.TAB_DECORATIONS);
+      SHROOMLIGHT = registerBlock(Blocks.SHROOMLIGHT, CreativeModeTab.TAB_DECORATIONS);
       HONEYCOMB = registerItem("honeycomb", new Item((new Item.Properties()).tab(CreativeModeTab.TAB_MATERIALS)));
       BEE_NEST = registerBlock(Blocks.BEE_NEST, CreativeModeTab.TAB_DECORATIONS);
       BEEHIVE = registerBlock(Blocks.BEEHIVE, CreativeModeTab.TAB_DECORATIONS);
       HONEY_BOTTLE = registerItem((String)"honey_bottle", new HoneyBottleItem((new Item.Properties()).craftRemainder(GLASS_BOTTLE).food(Foods.HONEY_BOTTLE).tab(CreativeModeTab.TAB_FOOD).stacksTo(16)));
       HONEY_BLOCK = registerBlock(Blocks.HONEY_BLOCK, CreativeModeTab.TAB_DECORATIONS);
       HONEYCOMB_BLOCK = registerBlock(Blocks.HONEYCOMB_BLOCK, CreativeModeTab.TAB_DECORATIONS);
+      LODESTONE = registerBlock(Blocks.LODESTONE, CreativeModeTab.TAB_DECORATIONS);
+      NETHERITE_BLOCK = registerBlock(new BlockItem(Blocks.NETHERITE_BLOCK, (new Item.Properties()).tab(CreativeModeTab.TAB_BUILDING_BLOCKS).fireResistant()));
+      ANCIENT_DEBRIS = registerBlock(new BlockItem(Blocks.ANCIENT_DEBRIS, (new Item.Properties()).tab(CreativeModeTab.TAB_BUILDING_BLOCKS).fireResistant()));
+      TARGET = registerBlock(Blocks.TARGET, CreativeModeTab.TAB_REDSTONE);
+      CRYING_OBSIDIAN = registerBlock(Blocks.CRYING_OBSIDIAN, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      BLACKSTONE = registerBlock(Blocks.BLACKSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      BLACKSTONE_SLAB = registerBlock(Blocks.BLACKSTONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      BLACKSTONE_STAIRS = registerBlock(Blocks.BLACKSTONE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      GILDED_BLACKSTONE = registerBlock(Blocks.GILDED_BLACKSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      POLISHED_BLACKSTONE = registerBlock(Blocks.POLISHED_BLACKSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      POLISHED_BLACKSTONE_SLAB = registerBlock(Blocks.POLISHED_BLACKSTONE_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      POLISHED_BLACKSTONE_STAIRS = registerBlock(Blocks.POLISHED_BLACKSTONE_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CHISELED_POLISHED_BLACKSTONE = registerBlock(Blocks.CHISELED_POLISHED_BLACKSTONE, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      POLISHED_BLACKSTONE_BRICKS = registerBlock(Blocks.POLISHED_BLACKSTONE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      POLISHED_BLACKSTONE_BRICK_SLAB = registerBlock(Blocks.POLISHED_BLACKSTONE_BRICK_SLAB, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      POLISHED_BLACKSTONE_BRICK_STAIRS = registerBlock(Blocks.POLISHED_BLACKSTONE_BRICK_STAIRS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      CRACKED_POLISHED_BLACKSTONE_BRICKS = registerBlock(Blocks.CRACKED_POLISHED_BLACKSTONE_BRICKS, CreativeModeTab.TAB_BUILDING_BLOCKS);
+      RESPAWN_ANCHOR = registerBlock(Blocks.RESPAWN_ANCHOR, CreativeModeTab.TAB_DECORATIONS);
    }
 }
