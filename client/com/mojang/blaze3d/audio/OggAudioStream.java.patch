--- com/mojang/blaze3d/audio/OggAudioStream.java
+++ com/mojang/blaze3d/audio/OggAudioStream.java
@@ -5,11 +5,10 @@
 import java.io.InputStream;
 import java.nio.ByteBuffer;
 import java.nio.FloatBuffer;
 import java.nio.IntBuffer;
 import java.util.List;
-import javax.annotation.Nullable;
 import javax.sound.sampled.AudioFormat;
 import net.minecraft.client.sounds.AudioStream;
 import net.minecraft.util.Mth;
 import org.lwjgl.BufferUtils;
 import org.lwjgl.PointerBuffer;
@@ -148,17 +147,17 @@
                         this.convertMono(var11.getFloatBuffer(0, var9), var1);
                         var12 = true;
                         return var12;
                      }
 
-                     if (var10 != 2) {
-                        throw new IllegalStateException("Invalid number of channels: " + var10);
+                     if (var10 == 2) {
+                        this.convertStereo(var11.getFloatBuffer(0, var9), var11.getFloatBuffer(1, var9), var1);
+                        var12 = true;
+                        return var12;
                      }
 
-                     this.convertStereo(var11.getFloatBuffer(0, var9), var11.getFloatBuffer(1, var9), var1);
-                     var12 = true;
-                     return var12;
+                     throw new IllegalStateException("Invalid number of channels: " + var10);
                   }
                }
             }
          } catch (Throwable var23) {
             var3 = var23;
@@ -207,11 +206,10 @@
 
    public AudioFormat getFormat() {
       return this.audioFormat;
    }
 
-   @Nullable
    public ByteBuffer read(int var1) throws IOException {
       OggAudioStream.OutputConcat var2 = new OggAudioStream.OutputConcat(var1 + 8192);
 
       while(this.readFrame(var2) && var2.byteCount < var1) {
       }
