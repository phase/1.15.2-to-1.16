--- com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen.java
+++ com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen.java
@@ -1,125 +1,112 @@
 package com.mojang.realmsclient.gui.screens;
 
-import com.google.common.collect.Lists;
+import com.mojang.blaze3d.vertex.PoseStack;
 import com.mojang.realmsclient.dto.Backup;
-import java.util.Iterator;
-import java.util.List;
 import java.util.Locale;
-import java.util.Map.Entry;
-import net.minecraft.realms.Realms;
-import net.minecraft.realms.RealmsButton;
+import net.minecraft.client.Minecraft;
+import net.minecraft.client.gui.Font;
+import net.minecraft.client.gui.components.Button;
+import net.minecraft.client.gui.components.ObjectSelectionList;
+import net.minecraft.client.gui.screens.Screen;
+import net.minecraft.network.chat.CommonComponents;
+import net.minecraft.network.chat.Component;
+import net.minecraft.network.chat.TextComponent;
 import net.minecraft.realms.RealmsScreen;
-import net.minecraft.realms.RealmsSimpleScrolledSelectionList;
-import net.minecraft.realms.Tezzelator;
 
 public class RealmsBackupInfoScreen extends RealmsScreen {
-   private final RealmsScreen lastScreen;
-   private final int BUTTON_BACK_ID = 0;
+   private final Screen lastScreen;
    private final Backup backup;
-   private final List<String> keys = Lists.newArrayList();
    private RealmsBackupInfoScreen.BackupInfoList backupInfoList;
-   String[] difficulties = new String[]{getLocalizedString("options.difficulty.peaceful"), getLocalizedString("options.difficulty.easy"), getLocalizedString("options.difficulty.normal"), getLocalizedString("options.difficulty.hard")};
-   String[] gameModes = new String[]{getLocalizedString("selectWorld.gameMode.survival"), getLocalizedString("selectWorld.gameMode.creative"), getLocalizedString("selectWorld.gameMode.adventure")};
 
-   public RealmsBackupInfoScreen(RealmsScreen var1, Backup var2) {
+   public RealmsBackupInfoScreen(Screen var1, Backup var2) {
       this.lastScreen = var1;
       this.backup = var2;
-      if (var2.changeList != null) {
-         Iterator var3 = var2.changeList.entrySet().iterator();
-
-         while(var3.hasNext()) {
-            Entry var4 = (Entry)var3.next();
-            this.keys.add(var4.getKey());
-         }
-      }
-
    }
 
    public void tick() {
    }
 
    public void init() {
-      this.setKeyboardHandlerSendRepeatsToGui(true);
-      this.buttonsAdd(new RealmsButton(0, this.width() / 2 - 100, this.height() / 4 + 120 + 24, getLocalizedString("gui.back")) {
-         public void onPress() {
-            Realms.setScreen(RealmsBackupInfoScreen.this.lastScreen);
-         }
-      });
-      this.backupInfoList = new RealmsBackupInfoScreen.BackupInfoList();
+      this.minecraft.keyboardHandler.setSendRepeatsToGui(true);
+      this.addButton(new Button(this.width / 2 - 100, this.height / 4 + 120 + 24, 200, 20, CommonComponents.GUI_BACK, (var1) -> {
+         this.minecraft.setScreen(this.lastScreen);
+      }));
+      this.backupInfoList = new RealmsBackupInfoScreen.BackupInfoList(this.minecraft);
       this.addWidget(this.backupInfoList);
-      this.focusOn(this.backupInfoList);
+      this.magicalSpecialHackyFocus(this.backupInfoList);
    }
 
    public void removed() {
-      this.setKeyboardHandlerSendRepeatsToGui(false);
+      this.minecraft.keyboardHandler.setSendRepeatsToGui(false);
    }
 
    public boolean keyPressed(int var1, int var2, int var3) {
       if (var1 == 256) {
-         Realms.setScreen(this.lastScreen);
+         this.minecraft.setScreen(this.lastScreen);
          return true;
       } else {
          return super.keyPressed(var1, var2, var3);
       }
    }
 
-   public void render(int var1, int var2, float var3) {
-      this.renderBackground();
-      this.drawCenteredString("Changes from last backup", this.width() / 2, 10, 16777215);
-      this.backupInfoList.render(var1, var2, var3);
-      super.render(var1, var2, var3);
+   public void render(PoseStack var1, int var2, int var3, float var4) {
+      this.renderBackground(var1);
+      this.drawCenteredString(var1, this.font, "Changes from last backup", this.width / 2, 10, 16777215);
+      this.backupInfoList.render(var1, var2, var3, var4);
+      super.render(var1, var2, var3, var4);
    }
 
-   private String checkForSpecificMetadata(String var1, String var2) {
+   private Component checkForSpecificMetadata(String var1, String var2) {
       String var3 = var1.toLowerCase(Locale.ROOT);
       if (var3.contains("game") && var3.contains("mode")) {
          return this.gameModeMetadata(var2);
       } else {
-         return var3.contains("game") && var3.contains("difficulty") ? this.gameDifficultyMetadata(var2) : var2;
+         return (Component)(var3.contains("game") && var3.contains("difficulty") ? this.gameDifficultyMetadata(var2) : new TextComponent(var2));
       }
    }
 
-   private String gameDifficultyMetadata(String var1) {
+   private Component gameDifficultyMetadata(String var1) {
       try {
-         return this.difficulties[Integer.parseInt(var1)];
+         return RealmsSlotOptionsScreen.DIFFICULTIES[Integer.parseInt(var1)];
       } catch (Exception var3) {
-         return "UNKNOWN";
+         return new TextComponent("UNKNOWN");
       }
    }
 
-   private String gameModeMetadata(String var1) {
+   private Component gameModeMetadata(String var1) {
       try {
-         return this.gameModes[Integer.parseInt(var1)];
+         return RealmsSlotOptionsScreen.GAME_MODES[Integer.parseInt(var1)];
       } catch (Exception var3) {
-         return "UNKNOWN";
+         return new TextComponent("UNKNOWN");
       }
    }
 
-   class BackupInfoList extends RealmsSimpleScrolledSelectionList {
-      public BackupInfoList() {
-         super(RealmsBackupInfoScreen.this.width(), RealmsBackupInfoScreen.this.height(), 32, RealmsBackupInfoScreen.this.height() - 64, 36);
-      }
+   class BackupInfoList extends ObjectSelectionList<RealmsBackupInfoScreen.BackupInfoListEntry> {
+      public BackupInfoList(Minecraft var2) {
+         super(var2, RealmsBackupInfoScreen.this.width, RealmsBackupInfoScreen.this.height, 32, RealmsBackupInfoScreen.this.height - 64, 36);
+         this.setRenderSelection(false);
+         if (RealmsBackupInfoScreen.this.backup.changeList != null) {
+            RealmsBackupInfoScreen.this.backup.changeList.forEach((var1x, var2x) -> {
+               this.addEntry(RealmsBackupInfoScreen.this.new BackupInfoListEntry(var1x, var2x));
+            });
+         }
 
-      public int getItemCount() {
-         return RealmsBackupInfoScreen.this.backup.changeList.size();
       }
+   }
 
-      public boolean isSelectedItem(int var1) {
-         return false;
-      }
+   class BackupInfoListEntry extends ObjectSelectionList.Entry<RealmsBackupInfoScreen.BackupInfoListEntry> {
+      private final String key;
+      private final String value;
 
-      public int getMaxPosition() {
-         return this.getItemCount() * 36;
+      public BackupInfoListEntry(String var2, String var3) {
+         this.key = var2;
+         this.value = var3;
       }
 
-      public void renderBackground() {
+      public void render(PoseStack var1, int var2, int var3, int var4, int var5, int var6, int var7, int var8, boolean var9, float var10) {
+         Font var11 = RealmsBackupInfoScreen.this.minecraft.font;
+         RealmsBackupInfoScreen.this.drawString(var1, var11, this.key, var4, var3, 10526880);
+         RealmsBackupInfoScreen.this.drawString(var1, var11, RealmsBackupInfoScreen.this.checkForSpecificMetadata(this.key, this.value), var4, var3 + 12, 16777215);
       }
-
-      public void renderItem(int var1, int var2, int var3, int var4, Tezzelator var5, int var6, int var7) {
-         String var8 = (String)RealmsBackupInfoScreen.this.keys.get(var1);
-         RealmsBackupInfoScreen.this.drawString(var8, this.width() / 2 - 40, var3, 10526880);
-         String var9 = (String)RealmsBackupInfoScreen.this.backup.changeList.get(var8);
-         RealmsBackupInfoScreen.this.drawString(RealmsBackupInfoScreen.this.checkForSpecificMetadata(var8, var9), this.width() / 2 - 40, var3 + 12, 16777215);
-      }
    }
 }
