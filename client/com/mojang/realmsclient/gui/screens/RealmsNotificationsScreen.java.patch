--- com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen.java
+++ com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen.java
@@ -1,141 +1,137 @@
 package com.mojang.realmsclient.gui.screens;
 
 import com.mojang.blaze3d.systems.RenderSystem;
+import com.mojang.blaze3d.vertex.PoseStack;
 import com.mojang.realmsclient.client.RealmsClient;
 import com.mojang.realmsclient.exception.RealmsServiceException;
 import com.mojang.realmsclient.gui.RealmsDataFetcher;
-import java.io.IOException;
-import java.util.Arrays;
-import java.util.List;
-import net.minecraft.realms.Realms;
+import net.minecraft.Util;
+import net.minecraft.client.gui.GuiComponent;
+import net.minecraft.client.gui.screens.TitleScreen;
 import net.minecraft.realms.RealmsScreen;
+import net.minecraft.resources.ResourceLocation;
 
 public class RealmsNotificationsScreen extends RealmsScreen {
-   private static final RealmsDataFetcher realmsDataFetcher = new RealmsDataFetcher();
+   private static final ResourceLocation INVITE_ICON_LOCATION = new ResourceLocation("realms", "textures/gui/realms/invite_icon.png");
+   private static final ResourceLocation TRIAL_ICON_LOCATION = new ResourceLocation("realms", "textures/gui/realms/trial_icon.png");
+   private static final ResourceLocation NEWS_ICON_LOCATION = new ResourceLocation("realms", "textures/gui/realms/news_notification_mainscreen.png");
+   private static final RealmsDataFetcher REALMS_DATA_FETCHER = new RealmsDataFetcher();
    private volatile int numberOfPendingInvites;
    private static boolean checkedMcoAvailability;
    private static boolean trialAvailable;
    private static boolean validClient;
    private static boolean hasUnreadNews;
-   private static final List<RealmsDataFetcher.Task> tasks;
 
-   public RealmsNotificationsScreen(RealmsScreen var1) {
+   public RealmsNotificationsScreen() {
    }
 
    public void init() {
       this.checkIfMcoEnabled();
-      this.setKeyboardHandlerSendRepeatsToGui(true);
+      this.minecraft.keyboardHandler.setSendRepeatsToGui(true);
    }
 
    public void tick() {
-      if ((!Realms.getRealmsNotificationsEnabled() || !Realms.inTitleScreen() || !validClient) && !realmsDataFetcher.isStopped()) {
-         realmsDataFetcher.stop();
-      } else if (validClient && Realms.getRealmsNotificationsEnabled()) {
-         realmsDataFetcher.initWithSpecificTaskList(tasks);
-         if (realmsDataFetcher.isFetchedSinceLastTry(RealmsDataFetcher.Task.PENDING_INVITE)) {
-            this.numberOfPendingInvites = realmsDataFetcher.getPendingInvitesCount();
+      if ((!this.getRealmsNotificationsEnabled() || !this.inTitleScreen() || !validClient) && !REALMS_DATA_FETCHER.isStopped()) {
+         REALMS_DATA_FETCHER.stop();
+      } else if (validClient && this.getRealmsNotificationsEnabled()) {
+         REALMS_DATA_FETCHER.initWithSpecificTaskList();
+         if (REALMS_DATA_FETCHER.isFetchedSinceLastTry(RealmsDataFetcher.Task.PENDING_INVITE)) {
+            this.numberOfPendingInvites = REALMS_DATA_FETCHER.getPendingInvitesCount();
          }
 
-         if (realmsDataFetcher.isFetchedSinceLastTry(RealmsDataFetcher.Task.TRIAL_AVAILABLE)) {
-            trialAvailable = realmsDataFetcher.isTrialAvailable();
+         if (REALMS_DATA_FETCHER.isFetchedSinceLastTry(RealmsDataFetcher.Task.TRIAL_AVAILABLE)) {
+            trialAvailable = REALMS_DATA_FETCHER.isTrialAvailable();
          }
 
-         if (realmsDataFetcher.isFetchedSinceLastTry(RealmsDataFetcher.Task.UNREAD_NEWS)) {
-            hasUnreadNews = realmsDataFetcher.hasUnreadNews();
+         if (REALMS_DATA_FETCHER.isFetchedSinceLastTry(RealmsDataFetcher.Task.UNREAD_NEWS)) {
+            hasUnreadNews = REALMS_DATA_FETCHER.hasUnreadNews();
          }
 
-         realmsDataFetcher.markClean();
+         REALMS_DATA_FETCHER.markClean();
       }
    }
 
+   private boolean getRealmsNotificationsEnabled() {
+      return this.minecraft.options.realmsNotifications;
+   }
+
+   private boolean inTitleScreen() {
+      return this.minecraft.screen instanceof TitleScreen;
+   }
+
    private void checkIfMcoEnabled() {
       if (!checkedMcoAvailability) {
          checkedMcoAvailability = true;
          (new Thread("Realms Notification Availability checker #1") {
             public void run() {
-               RealmsClient var1 = RealmsClient.createRealmsClient();
+               RealmsClient var1 = RealmsClient.create();
 
                try {
                   RealmsClient.CompatibleVersionResponse var2 = var1.clientCompatible();
-                  if (!var2.equals(RealmsClient.CompatibleVersionResponse.COMPATIBLE)) {
+                  if (var2 != RealmsClient.CompatibleVersionResponse.COMPATIBLE) {
                      return;
                   }
                } catch (RealmsServiceException var3) {
                   if (var3.httpResultCode != 401) {
                      RealmsNotificationsScreen.checkedMcoAvailability = false;
                   }
 
                   return;
-               } catch (IOException var4) {
-                  RealmsNotificationsScreen.checkedMcoAvailability = false;
-                  return;
                }
 
                RealmsNotificationsScreen.validClient = true;
             }
          }).start();
       }
 
    }
 
-   public void render(int var1, int var2, float var3) {
+   public void render(PoseStack var1, int var2, int var3, float var4) {
       if (validClient) {
-         this.drawIcons(var1, var2);
+         this.drawIcons(var1, var2, var3);
       }
 
-      super.render(var1, var2, var3);
+      super.render(var1, var2, var3, var4);
    }
 
-   public boolean mouseClicked(double var1, double var3, int var5) {
-      return super.mouseClicked(var1, var3, var5);
-   }
-
-   private void drawIcons(int var1, int var2) {
-      int var3 = this.numberOfPendingInvites;
-      boolean var4 = true;
-      int var5 = this.height() / 4 + 48;
-      int var6 = this.width() / 2 + 80;
-      int var7 = var5 + 48 + 2;
-      int var8 = 0;
+   private void drawIcons(PoseStack var1, int var2, int var3) {
+      int var4 = this.numberOfPendingInvites;
+      boolean var5 = true;
+      int var6 = this.height / 4 + 48;
+      int var7 = this.width / 2 + 80;
+      int var8 = var6 + 48 + 2;
+      int var9 = 0;
       if (hasUnreadNews) {
-         RealmsScreen.bind("realms:textures/gui/realms/news_notification_mainscreen.png");
+         this.minecraft.getTextureManager().bind(NEWS_ICON_LOCATION);
          RenderSystem.color4f(1.0F, 1.0F, 1.0F, 1.0F);
          RenderSystem.pushMatrix();
          RenderSystem.scalef(0.4F, 0.4F, 0.4F);
-         RealmsScreen.blit((int)((double)(var6 + 2 - var8) * 2.5D), (int)((double)var7 * 2.5D), 0.0F, 0.0F, 40, 40, 40, 40);
+         GuiComponent.blit(var1, (int)((double)(var7 + 2 - var9) * 2.5D), (int)((double)var8 * 2.5D), 0.0F, 0.0F, 40, 40, 40, 40);
          RenderSystem.popMatrix();
-         var8 += 14;
+         var9 += 14;
       }
 
-      if (var3 != 0) {
-         RealmsScreen.bind("realms:textures/gui/realms/invite_icon.png");
+      if (var4 != 0) {
+         this.minecraft.getTextureManager().bind(INVITE_ICON_LOCATION);
          RenderSystem.color4f(1.0F, 1.0F, 1.0F, 1.0F);
-         RenderSystem.pushMatrix();
-         RealmsScreen.blit(var6 - var8, var7 - 6, 0.0F, 0.0F, 15, 25, 31, 25);
-         RenderSystem.popMatrix();
-         var8 += 16;
+         GuiComponent.blit(var1, var7 - var9, var8 - 6, 0.0F, 0.0F, 15, 25, 31, 25);
+         var9 += 16;
       }
 
       if (trialAvailable) {
-         RealmsScreen.bind("realms:textures/gui/realms/trial_icon.png");
+         this.minecraft.getTextureManager().bind(TRIAL_ICON_LOCATION);
          RenderSystem.color4f(1.0F, 1.0F, 1.0F, 1.0F);
-         RenderSystem.pushMatrix();
-         byte var9 = 0;
-         if ((System.currentTimeMillis() / 800L & 1L) == 1L) {
-            var9 = 8;
+         byte var10 = 0;
+         if ((Util.getMillis() / 800L & 1L) == 1L) {
+            var10 = 8;
          }
 
-         RealmsScreen.blit(var6 + 4 - var8, var7 + 4, 0.0F, (float)var9, 8, 8, 8, 16);
-         RenderSystem.popMatrix();
+         GuiComponent.blit(var1, var7 + 4 - var9, var8 + 4, 0.0F, (float)var10, 8, 8, 8, 16);
       }
 
    }
 
    public void removed() {
-      realmsDataFetcher.stop();
+      REALMS_DATA_FETCHER.stop();
    }
-
-   static {
-      tasks = Arrays.asList(RealmsDataFetcher.Task.PENDING_INVITE, RealmsDataFetcher.Task.TRIAL_AVAILABLE, RealmsDataFetcher.Task.UNREAD_NEWS);
-   }
 }
