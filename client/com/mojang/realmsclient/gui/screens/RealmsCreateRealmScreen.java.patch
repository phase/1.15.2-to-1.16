--- com/mojang/realmsclient/gui/screens/RealmsCreateRealmScreen.java
+++ com/mojang/realmsclient/gui/screens/RealmsCreateRealmScreen.java
@@ -1,22 +1,25 @@
 package com.mojang.realmsclient.gui.screens;
 
+import com.mojang.blaze3d.vertex.PoseStack;
 import com.mojang.realmsclient.RealmsMainScreen;
 import com.mojang.realmsclient.dto.RealmsServer;
-import com.mojang.realmsclient.util.RealmsTasks;
-import net.minecraft.realms.Realms;
-import net.minecraft.realms.RealmsButton;
-import net.minecraft.realms.RealmsEditBox;
+import com.mojang.realmsclient.util.task.WorldCreationTask;
+import net.minecraft.client.gui.components.Button;
+import net.minecraft.client.gui.components.EditBox;
+import net.minecraft.client.resources.language.I18n;
+import net.minecraft.network.chat.CommonComponents;
+import net.minecraft.network.chat.TranslatableComponent;
 import net.minecraft.realms.RealmsLabel;
 import net.minecraft.realms.RealmsScreen;
 
 public class RealmsCreateRealmScreen extends RealmsScreen {
    private final RealmsServer server;
    private final RealmsMainScreen lastScreen;
-   private RealmsEditBox nameBox;
-   private RealmsEditBox descriptionBox;
-   private RealmsButton createButton;
+   private EditBox nameBox;
+   private EditBox descriptionBox;
+   private Button createButton;
    private RealmsLabel createRealmLabel;
 
    public RealmsCreateRealmScreen(RealmsServer var1, RealmsMainScreen var2) {
       this.server = var1;
       this.lastScreen = var2;
@@ -32,79 +35,77 @@
       }
 
    }
 
    public void init() {
-      this.setKeyboardHandlerSendRepeatsToGui(true);
-      this.buttonsAdd(this.createButton = new RealmsButton(0, this.width() / 2 - 100, this.height() / 4 + 120 + 17, 97, 20, getLocalizedString("mco.create.world")) {
-         public void onPress() {
-            RealmsCreateRealmScreen.this.createWorld();
-         }
-      });
-      this.buttonsAdd(new RealmsButton(1, this.width() / 2 + 5, this.height() / 4 + 120 + 17, 95, 20, getLocalizedString("gui.cancel")) {
-         public void onPress() {
-            Realms.setScreen(RealmsCreateRealmScreen.this.lastScreen);
-         }
-      });
-      this.createButton.active(false);
-      this.nameBox = this.newEditBox(3, this.width() / 2 - 100, 65, 200, 20, getLocalizedString("mco.configure.world.name"));
+      this.minecraft.keyboardHandler.setSendRepeatsToGui(true);
+      this.createButton = (Button)this.addButton(new Button(this.width / 2 - 100, this.height / 4 + 120 + 17, 97, 20, new TranslatableComponent("mco.create.world"), (var1) -> {
+         this.createWorld();
+      }));
+      this.addButton(new Button(this.width / 2 + 5, this.height / 4 + 120 + 17, 95, 20, CommonComponents.GUI_CANCEL, (var1) -> {
+         this.minecraft.setScreen(this.lastScreen);
+      }));
+      this.createButton.active = false;
+      this.nameBox = new EditBox(this.minecraft.font, this.width / 2 - 100, 65, 200, 20, (EditBox)null, new TranslatableComponent("mco.configure.world.name"));
       this.addWidget(this.nameBox);
-      this.focusOn(this.nameBox);
-      this.descriptionBox = this.newEditBox(4, this.width() / 2 - 100, 115, 200, 20, getLocalizedString("mco.configure.world.description"));
+      this.setInitialFocus(this.nameBox);
+      this.descriptionBox = new EditBox(this.minecraft.font, this.width / 2 - 100, 115, 200, 20, (EditBox)null, new TranslatableComponent("mco.configure.world.description"));
       this.addWidget(this.descriptionBox);
-      this.createRealmLabel = new RealmsLabel(getLocalizedString("mco.selectServer.create"), this.width() / 2, 11, 16777215);
+      this.createRealmLabel = new RealmsLabel(new TranslatableComponent("mco.selectServer.create"), this.width / 2, 11, 16777215);
       this.addWidget(this.createRealmLabel);
       this.narrateLabels();
    }
 
    public void removed() {
-      this.setKeyboardHandlerSendRepeatsToGui(false);
+      this.minecraft.keyboardHandler.setSendRepeatsToGui(false);
    }
 
    public boolean charTyped(char var1, int var2) {
-      this.createButton.active(this.valid());
-      return false;
+      boolean var3 = super.charTyped(var1, var2);
+      this.createButton.active = this.valid();
+      return var3;
    }
 
    public boolean keyPressed(int var1, int var2, int var3) {
-      switch(var1) {
-      case 256:
-         Realms.setScreen(this.lastScreen);
+      if (var1 == 256) {
+         this.minecraft.setScreen(this.lastScreen);
          return true;
-      default:
-         this.createButton.active(this.valid());
-         return false;
+      } else {
+         boolean var4 = super.keyPressed(var1, var2, var3);
+         this.createButton.active = this.valid();
+         return var4;
       }
    }
 
    private void createWorld() {
       if (this.valid()) {
-         RealmsResetWorldScreen var1 = new RealmsResetWorldScreen(this.lastScreen, this.server, this.lastScreen.newScreen(), getLocalizedString("mco.selectServer.create"), getLocalizedString("mco.create.world.subtitle"), 10526880, getLocalizedString("mco.create.world.skip"));
-         var1.setResetTitle(getLocalizedString("mco.create.world.reset.title"));
-         RealmsTasks.WorldCreationTask var2 = new RealmsTasks.WorldCreationTask(this.server.id, this.nameBox.getValue(), this.descriptionBox.getValue(), var1);
-         RealmsLongRunningMcoTaskScreen var3 = new RealmsLongRunningMcoTaskScreen(this.lastScreen, var2);
-         var3.start();
-         Realms.setScreen(var3);
+         RealmsResetWorldScreen var1 = new RealmsResetWorldScreen(this.lastScreen, this.server, new TranslatableComponent("mco.selectServer.create"), new TranslatableComponent("mco.create.world.subtitle"), 10526880, new TranslatableComponent("mco.create.world.skip"), () -> {
+            this.minecraft.setScreen(this.lastScreen.newScreen());
+         }, () -> {
+            this.minecraft.setScreen(this.lastScreen.newScreen());
+         });
+         var1.setResetTitle(I18n.get("mco.create.world.reset.title"));
+         this.minecraft.setScreen(new RealmsLongRunningMcoTaskScreen(this.lastScreen, new WorldCreationTask(this.server.id, this.nameBox.getValue(), this.descriptionBox.getValue(), var1)));
       }
 
    }
 
    private boolean valid() {
-      return this.nameBox.getValue() != null && !this.nameBox.getValue().trim().isEmpty();
+      return !this.nameBox.getValue().trim().isEmpty();
    }
 
-   public void render(int var1, int var2, float var3) {
-      this.renderBackground();
-      this.createRealmLabel.render(this);
-      this.drawString(getLocalizedString("mco.configure.world.name"), this.width() / 2 - 100, 52, 10526880);
-      this.drawString(getLocalizedString("mco.configure.world.description"), this.width() / 2 - 100, 102, 10526880);
+   public void render(PoseStack var1, int var2, int var3, float var4) {
+      this.renderBackground(var1);
+      this.createRealmLabel.render(this, var1);
+      this.font.draw(var1, I18n.get("mco.configure.world.name"), (float)(this.width / 2 - 100), 52.0F, 10526880);
+      this.font.draw(var1, I18n.get("mco.configure.world.description"), (float)(this.width / 2 - 100), 102.0F, 10526880);
       if (this.nameBox != null) {
-         this.nameBox.render(var1, var2, var3);
+         this.nameBox.render(var1, var2, var3, var4);
       }
 
       if (this.descriptionBox != null) {
-         this.descriptionBox.render(var1, var2, var3);
+         this.descriptionBox.render(var1, var2, var3, var4);
       }
 
-      super.render(var1, var2, var3);
+      super.render(var1, var2, var3, var4);
    }
 }
