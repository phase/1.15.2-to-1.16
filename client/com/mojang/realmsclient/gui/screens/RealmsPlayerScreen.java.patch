--- com/mojang/realmsclient/gui/screens/RealmsPlayerScreen.java
+++ com/mojang/realmsclient/gui/screens/RealmsPlayerScreen.java
@@ -1,38 +1,50 @@
 package com.mojang.realmsclient.gui.screens;
 
 import com.mojang.blaze3d.systems.RenderSystem;
+import com.mojang.blaze3d.vertex.BufferBuilder;
+import com.mojang.blaze3d.vertex.DefaultVertexFormat;
+import com.mojang.blaze3d.vertex.PoseStack;
+import com.mojang.blaze3d.vertex.Tesselator;
 import com.mojang.realmsclient.client.RealmsClient;
 import com.mojang.realmsclient.dto.Ops;
 import com.mojang.realmsclient.dto.PlayerInfo;
 import com.mojang.realmsclient.dto.RealmsServer;
 import com.mojang.realmsclient.exception.RealmsServiceException;
-import com.mojang.realmsclient.gui.RealmsConstants;
 import com.mojang.realmsclient.util.RealmsTextureManager;
 import java.util.Iterator;
-import net.minecraft.realms.RealmListEntry;
-import net.minecraft.realms.Realms;
-import net.minecraft.realms.RealmsButton;
-import net.minecraft.realms.RealmsDefaultVertexFormat;
+import javax.annotation.Nullable;
+import net.minecraft.client.gui.GuiComponent;
+import net.minecraft.client.gui.components.Button;
+import net.minecraft.client.gui.components.ObjectSelectionList;
+import net.minecraft.client.resources.language.I18n;
+import net.minecraft.network.chat.CommonComponents;
+import net.minecraft.network.chat.TextComponent;
+import net.minecraft.network.chat.TranslatableComponent;
+import net.minecraft.realms.NarrationHelper;
 import net.minecraft.realms.RealmsLabel;
 import net.minecraft.realms.RealmsObjectSelectionList;
 import net.minecraft.realms.RealmsScreen;
-import net.minecraft.realms.Tezzelator;
+import net.minecraft.resources.ResourceLocation;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
 public class RealmsPlayerScreen extends RealmsScreen {
    private static final Logger LOGGER = LogManager.getLogger();
+   private static final ResourceLocation OP_ICON_LOCATION = new ResourceLocation("realms", "textures/gui/realms/op_icon.png");
+   private static final ResourceLocation USER_ICON_LOCATION = new ResourceLocation("realms", "textures/gui/realms/user_icon.png");
+   private static final ResourceLocation CROSS_ICON_LOCATION = new ResourceLocation("realms", "textures/gui/realms/cross_player_icon.png");
+   private static final ResourceLocation OPTIONS_BACKGROUND = new ResourceLocation("minecraft", "textures/gui/options_background.png");
    private String toolTip;
    private final RealmsConfigureWorldScreen lastScreen;
    private final RealmsServer serverData;
    private RealmsPlayerScreen.InvitedObjectSelectionList invitedObjectSelectionList;
-   private int column1_x;
-   private int column_width;
-   private int column2_x;
-   private RealmsButton removeButton;
-   private RealmsButton opdeopButton;
+   private int column1X;
+   private int columnWidth;
+   private int column2X;
+   private Button removeButton;
+   private Button opdeopButton;
    private int selectedInvitedIndex = -1;
    private String selectedInvited;
    private int player = -1;
    private boolean stateChanged;
    private RealmsLabel titleLabel;
@@ -40,70 +52,58 @@
    public RealmsPlayerScreen(RealmsConfigureWorldScreen var1, RealmsServer var2) {
       this.lastScreen = var1;
       this.serverData = var2;
    }
 
-   public void tick() {
-      super.tick();
-   }
-
    public void init() {
-      this.column1_x = this.width() / 2 - 160;
-      this.column_width = 150;
-      this.column2_x = this.width() / 2 + 12;
-      this.setKeyboardHandlerSendRepeatsToGui(true);
-      this.buttonsAdd(new RealmsButton(1, this.column2_x, RealmsConstants.row(1), this.column_width + 10, 20, getLocalizedString("mco.configure.world.buttons.invite")) {
-         public void onPress() {
-            Realms.setScreen(new RealmsInviteScreen(RealmsPlayerScreen.this.lastScreen, RealmsPlayerScreen.this, RealmsPlayerScreen.this.serverData));
-         }
-      });
-      this.buttonsAdd(this.removeButton = new RealmsButton(4, this.column2_x, RealmsConstants.row(7), this.column_width + 10, 20, getLocalizedString("mco.configure.world.invites.remove.tooltip")) {
-         public void onPress() {
-            RealmsPlayerScreen.this.uninvite(RealmsPlayerScreen.this.player);
-         }
-      });
-      this.buttonsAdd(this.opdeopButton = new RealmsButton(5, this.column2_x, RealmsConstants.row(9), this.column_width + 10, 20, getLocalizedString("mco.configure.world.invites.ops.tooltip")) {
-         public void onPress() {
-            if (((PlayerInfo)RealmsPlayerScreen.this.serverData.players.get(RealmsPlayerScreen.this.player)).isOperator()) {
-               RealmsPlayerScreen.this.deop(RealmsPlayerScreen.this.player);
-            } else {
-               RealmsPlayerScreen.this.op(RealmsPlayerScreen.this.player);
-            }
-
-         }
-      });
-      this.buttonsAdd(new RealmsButton(0, this.column2_x + this.column_width / 2 + 2, RealmsConstants.row(12), this.column_width / 2 + 10 - 2, 20, getLocalizedString("gui.back")) {
-         public void onPress() {
-            RealmsPlayerScreen.this.backButtonClicked();
-         }
-      });
+      this.column1X = this.width / 2 - 160;
+      this.columnWidth = 150;
+      this.column2X = this.width / 2 + 12;
+      this.minecraft.keyboardHandler.setSendRepeatsToGui(true);
       this.invitedObjectSelectionList = new RealmsPlayerScreen.InvitedObjectSelectionList();
-      this.invitedObjectSelectionList.setLeftPos(this.column1_x);
+      this.invitedObjectSelectionList.setLeftPos(this.column1X);
       this.addWidget(this.invitedObjectSelectionList);
       Iterator var1 = this.serverData.players.iterator();
 
       while(var1.hasNext()) {
          PlayerInfo var2 = (PlayerInfo)var1.next();
          this.invitedObjectSelectionList.addEntry(var2);
       }
 
-      this.addWidget(this.titleLabel = new RealmsLabel(getLocalizedString("mco.configure.world.players.title"), this.width() / 2, 17, 16777215));
+      this.addButton(new Button(this.column2X, row(1), this.columnWidth + 10, 20, new TranslatableComponent("mco.configure.world.buttons.invite"), (var1x) -> {
+         this.minecraft.setScreen(new RealmsInviteScreen(this.lastScreen, this, this.serverData));
+      }));
+      this.removeButton = (Button)this.addButton(new Button(this.column2X, row(7), this.columnWidth + 10, 20, new TranslatableComponent("mco.configure.world.invites.remove.tooltip"), (var1x) -> {
+         this.uninvite(this.player);
+      }));
+      this.opdeopButton = (Button)this.addButton(new Button(this.column2X, row(9), this.columnWidth + 10, 20, new TranslatableComponent("mco.configure.world.invites.ops.tooltip"), (var1x) -> {
+         if (((PlayerInfo)this.serverData.players.get(this.player)).isOperator()) {
+            this.deop(this.player);
+         } else {
+            this.op(this.player);
+         }
+
+      }));
+      this.addButton(new Button(this.column2X + this.columnWidth / 2 + 2, row(12), this.columnWidth / 2 + 10 - 2, 20, CommonComponents.GUI_BACK, (var1x) -> {
+         this.backButtonClicked();
+      }));
+      this.titleLabel = (RealmsLabel)this.addWidget(new RealmsLabel(new TranslatableComponent("mco.configure.world.players.title"), this.width / 2, 17, 16777215));
       this.narrateLabels();
       this.updateButtonStates();
    }
 
    private void updateButtonStates() {
-      this.removeButton.setVisible(this.shouldRemoveAndOpdeopButtonBeVisible(this.player));
-      this.opdeopButton.setVisible(this.shouldRemoveAndOpdeopButtonBeVisible(this.player));
+      this.removeButton.visible = this.shouldRemoveAndOpdeopButtonBeVisible(this.player);
+      this.opdeopButton.visible = this.shouldRemoveAndOpdeopButtonBeVisible(this.player);
    }
 
    private boolean shouldRemoveAndOpdeopButtonBeVisible(int var1) {
       return var1 != -1;
    }
 
    public void removed() {
-      this.setKeyboardHandlerSendRepeatsToGui(false);
+      this.minecraft.keyboardHandler.setSendRepeatsToGui(false);
    }
 
    public boolean keyPressed(int var1, int var2, int var3) {
       if (var1 == 256) {
          this.backButtonClicked();
@@ -113,20 +113,20 @@
       }
    }
 
    private void backButtonClicked() {
       if (this.stateChanged) {
-         Realms.setScreen(this.lastScreen.getNewScreen());
+         this.minecraft.setScreen(this.lastScreen.getNewScreen());
       } else {
-         Realms.setScreen(this.lastScreen);
+         this.minecraft.setScreen(this.lastScreen);
       }
 
    }
 
    private void op(int var1) {
       this.updateButtonStates();
-      RealmsClient var2 = RealmsClient.createRealmsClient();
+      RealmsClient var2 = RealmsClient.create();
       String var3 = ((PlayerInfo)this.serverData.players.get(var1)).getUuid();
 
       try {
          this.updateOps(var2.op(this.serverData.id, var3));
       } catch (RealmsServiceException var5) {
@@ -135,11 +135,11 @@
 
    }
 
    private void deop(int var1) {
       this.updateButtonStates();
-      RealmsClient var2 = RealmsClient.createRealmsClient();
+      RealmsClient var2 = RealmsClient.create();
       String var3 = ((PlayerInfo)this.serverData.players.get(var1)).getUuid();
 
       try {
          this.updateOps(var2.deop(this.serverData.id, var3));
       } catch (RealmsServiceException var5) {
@@ -162,201 +162,194 @@
       this.updateButtonStates();
       if (var1 >= 0 && var1 < this.serverData.players.size()) {
          PlayerInfo var2 = (PlayerInfo)this.serverData.players.get(var1);
          this.selectedInvited = var2.getUuid();
          this.selectedInvitedIndex = var1;
-         RealmsConfirmScreen var3 = new RealmsConfirmScreen(this, "Question", getLocalizedString("mco.configure.world.uninvite.question") + " '" + var2.getName() + "' ?", 2);
-         Realms.setScreen(var3);
-      }
+         RealmsConfirmScreen var3 = new RealmsConfirmScreen((var1x) -> {
+            if (var1x) {
+               RealmsClient var2 = RealmsClient.create();
 
-   }
+               try {
+                  var2.uninvite(this.serverData.id, this.selectedInvited);
+               } catch (RealmsServiceException var4) {
+                  LOGGER.error("Couldn't uninvite user");
+               }
 
-   public void confirmResult(boolean var1, int var2) {
-      if (var2 == 2) {
-         if (var1) {
-            RealmsClient var3 = RealmsClient.createRealmsClient();
-
-            try {
-               var3.uninvite(this.serverData.id, this.selectedInvited);
-            } catch (RealmsServiceException var5) {
-               LOGGER.error("Couldn't uninvite user");
+               this.deleteFromInvitedList(this.selectedInvitedIndex);
+               this.player = -1;
+               this.updateButtonStates();
             }
 
-            this.deleteFromInvitedList(this.selectedInvitedIndex);
-            this.player = -1;
-            this.updateButtonStates();
-         }
-
-         this.stateChanged = true;
-         Realms.setScreen(this);
+            this.stateChanged = true;
+            this.minecraft.setScreen(this);
+         }, new TextComponent("Question"), (new TranslatableComponent("mco.configure.world.uninvite.question")).append(" '").append(var2.getName()).append("' ?"));
+         this.minecraft.setScreen(var3);
       }
 
    }
 
    private void deleteFromInvitedList(int var1) {
       this.serverData.players.remove(var1);
    }
 
-   public void render(int var1, int var2, float var3) {
+   public void render(PoseStack var1, int var2, int var3, float var4) {
       this.toolTip = null;
-      this.renderBackground();
+      this.renderBackground(var1);
       if (this.invitedObjectSelectionList != null) {
-         this.invitedObjectSelectionList.render(var1, var2, var3);
+         this.invitedObjectSelectionList.render(var1, var2, var3, var4);
       }
 
-      int var4 = RealmsConstants.row(12) + 20;
-      Tezzelator var5 = Tezzelator.instance;
-      bind("textures/gui/options_background.png");
+      int var5 = row(12) + 20;
+      Tesselator var6 = Tesselator.getInstance();
+      BufferBuilder var7 = var6.getBuilder();
+      this.minecraft.getTextureManager().bind(OPTIONS_BACKGROUND);
       RenderSystem.color4f(1.0F, 1.0F, 1.0F, 1.0F);
-      float var6 = 32.0F;
-      var5.begin(7, RealmsDefaultVertexFormat.POSITION_TEX_COLOR);
-      var5.vertex(0.0D, (double)this.height(), 0.0D).tex(0.0F, (float)(this.height() - var4) / 32.0F + 0.0F).color(64, 64, 64, 255).endVertex();
-      var5.vertex((double)this.width(), (double)this.height(), 0.0D).tex((float)this.width() / 32.0F, (float)(this.height() - var4) / 32.0F + 0.0F).color(64, 64, 64, 255).endVertex();
-      var5.vertex((double)this.width(), (double)var4, 0.0D).tex((float)this.width() / 32.0F, 0.0F).color(64, 64, 64, 255).endVertex();
-      var5.vertex(0.0D, (double)var4, 0.0D).tex(0.0F, 0.0F).color(64, 64, 64, 255).endVertex();
-      var5.end();
-      this.titleLabel.render(this);
+      float var8 = 32.0F;
+      var7.begin(7, DefaultVertexFormat.POSITION_TEX_COLOR);
+      var7.vertex(0.0D, (double)this.height, 0.0D).uv(0.0F, (float)(this.height - var5) / 32.0F + 0.0F).color(64, 64, 64, 255).endVertex();
+      var7.vertex((double)this.width, (double)this.height, 0.0D).uv((float)this.width / 32.0F, (float)(this.height - var5) / 32.0F + 0.0F).color(64, 64, 64, 255).endVertex();
+      var7.vertex((double)this.width, (double)var5, 0.0D).uv((float)this.width / 32.0F, 0.0F).color(64, 64, 64, 255).endVertex();
+      var7.vertex(0.0D, (double)var5, 0.0D).uv(0.0F, 0.0F).color(64, 64, 64, 255).endVertex();
+      var6.end();
+      this.titleLabel.render(this, var1);
       if (this.serverData != null && this.serverData.players != null) {
-         this.drawString(getLocalizedString("mco.configure.world.invited") + " (" + this.serverData.players.size() + ")", this.column1_x, RealmsConstants.row(0), 10526880);
+         this.font.draw(var1, I18n.get("mco.configure.world.invited") + " (" + this.serverData.players.size() + ")", (float)this.column1X, (float)row(0), 10526880);
       } else {
-         this.drawString(getLocalizedString("mco.configure.world.invited"), this.column1_x, RealmsConstants.row(0), 10526880);
+         this.font.draw(var1, I18n.get("mco.configure.world.invited"), (float)this.column1X, (float)row(0), 10526880);
       }
 
-      super.render(var1, var2, var3);
+      super.render(var1, var2, var3, var4);
       if (this.serverData != null) {
          if (this.toolTip != null) {
-            this.renderMousehoverTooltip(this.toolTip, var1, var2);
+            this.renderMousehoverTooltip(var1, this.toolTip, var2, var3);
          }
 
       }
    }
 
-   protected void renderMousehoverTooltip(String var1, int var2, int var3) {
-      if (var1 != null) {
-         int var4 = var2 + 12;
-         int var5 = var3 - 12;
-         int var6 = this.fontWidth(var1);
-         this.fillGradient(var4 - 3, var5 - 3, var4 + var6 + 3, var5 + 8 + 3, -1073741824, -1073741824);
-         this.fontDrawShadow(var1, var4, var5, 16777215);
+   protected void renderMousehoverTooltip(PoseStack var1, String var2, int var3, int var4) {
+      if (var2 != null) {
+         int var5 = var3 + 12;
+         int var6 = var4 - 12;
+         int var7 = this.font.width(var2);
+         this.fillGradient(var1, var5 - 3, var6 - 3, var5 + var7 + 3, var6 + 8 + 3, -1073741824, -1073741824);
+         this.font.drawShadow(var1, var2, (float)var5, (float)var6, 16777215);
       }
    }
 
-   private void drawRemoveIcon(int var1, int var2, int var3, int var4) {
-      boolean var5 = var3 >= var1 && var3 <= var1 + 9 && var4 >= var2 && var4 <= var2 + 9 && var4 < RealmsConstants.row(12) + 20 && var4 > RealmsConstants.row(1);
-      bind("realms:textures/gui/realms/cross_player_icon.png");
+   private void drawRemoveIcon(PoseStack var1, int var2, int var3, int var4, int var5) {
+      boolean var6 = var4 >= var2 && var4 <= var2 + 9 && var5 >= var3 && var5 <= var3 + 9 && var5 < row(12) + 20 && var5 > row(1);
+      this.minecraft.getTextureManager().bind(CROSS_ICON_LOCATION);
       RenderSystem.color4f(1.0F, 1.0F, 1.0F, 1.0F);
-      RenderSystem.pushMatrix();
-      RealmsScreen.blit(var1, var2, 0.0F, var5 ? 7.0F : 0.0F, 8, 7, 8, 14);
-      RenderSystem.popMatrix();
-      if (var5) {
-         this.toolTip = getLocalizedString("mco.configure.world.invites.remove.tooltip");
+      float var7 = var6 ? 7.0F : 0.0F;
+      GuiComponent.blit(var1, var2, var3, 0.0F, var7, 8, 7, 8, 14);
+      if (var6) {
+         this.toolTip = I18n.get("mco.configure.world.invites.remove.tooltip");
       }
 
    }
 
-   private void drawOpped(int var1, int var2, int var3, int var4) {
-      boolean var5 = var3 >= var1 && var3 <= var1 + 9 && var4 >= var2 && var4 <= var2 + 9 && var4 < RealmsConstants.row(12) + 20 && var4 > RealmsConstants.row(1);
-      bind("realms:textures/gui/realms/op_icon.png");
+   private void drawOpped(PoseStack var1, int var2, int var3, int var4, int var5) {
+      boolean var6 = var4 >= var2 && var4 <= var2 + 9 && var5 >= var3 && var5 <= var3 + 9 && var5 < row(12) + 20 && var5 > row(1);
+      this.minecraft.getTextureManager().bind(OP_ICON_LOCATION);
       RenderSystem.color4f(1.0F, 1.0F, 1.0F, 1.0F);
-      RenderSystem.pushMatrix();
-      RealmsScreen.blit(var1, var2, 0.0F, var5 ? 8.0F : 0.0F, 8, 8, 8, 16);
-      RenderSystem.popMatrix();
-      if (var5) {
-         this.toolTip = getLocalizedString("mco.configure.world.invites.ops.tooltip");
+      float var7 = var6 ? 8.0F : 0.0F;
+      GuiComponent.blit(var1, var2, var3, 0.0F, var7, 8, 8, 8, 16);
+      if (var6) {
+         this.toolTip = I18n.get("mco.configure.world.invites.ops.tooltip");
       }
 
    }
 
-   private void drawNormal(int var1, int var2, int var3, int var4) {
-      boolean var5 = var3 >= var1 && var3 <= var1 + 9 && var4 >= var2 && var4 <= var2 + 9 && var4 < RealmsConstants.row(12) + 20 && var4 > RealmsConstants.row(1);
-      bind("realms:textures/gui/realms/user_icon.png");
+   private void drawNormal(PoseStack var1, int var2, int var3, int var4, int var5) {
+      boolean var6 = var4 >= var2 && var4 <= var2 + 9 && var5 >= var3 && var5 <= var3 + 9 && var5 < row(12) + 20 && var5 > row(1);
+      this.minecraft.getTextureManager().bind(USER_ICON_LOCATION);
       RenderSystem.color4f(1.0F, 1.0F, 1.0F, 1.0F);
-      RenderSystem.pushMatrix();
-      RealmsScreen.blit(var1, var2, 0.0F, var5 ? 8.0F : 0.0F, 8, 8, 8, 16);
-      RenderSystem.popMatrix();
-      if (var5) {
-         this.toolTip = getLocalizedString("mco.configure.world.invites.normal.tooltip");
+      float var7 = var6 ? 8.0F : 0.0F;
+      GuiComponent.blit(var1, var2, var3, 0.0F, var7, 8, 8, 8, 16);
+      if (var6) {
+         this.toolTip = I18n.get("mco.configure.world.invites.normal.tooltip");
       }
 
    }
 
-   class InvitedObjectSelectionListEntry extends RealmListEntry {
-      final PlayerInfo mPlayerInfo;
+   class Entry extends ObjectSelectionList.Entry<RealmsPlayerScreen.Entry> {
+      private final PlayerInfo playerInfo;
 
-      public InvitedObjectSelectionListEntry(PlayerInfo var2) {
-         this.mPlayerInfo = var2;
+      public Entry(PlayerInfo var2) {
+         this.playerInfo = var2;
       }
 
-      public void render(int var1, int var2, int var3, int var4, int var5, int var6, int var7, boolean var8, float var9) {
-         this.renderInvitedItem(this.mPlayerInfo, var3, var2, var6, var7);
+      public void render(PoseStack var1, int var2, int var3, int var4, int var5, int var6, int var7, int var8, boolean var9, float var10) {
+         this.renderInvitedItem(var1, this.playerInfo, var4, var3, var7, var8);
       }
 
-      private void renderInvitedItem(PlayerInfo var1, int var2, int var3, int var4, int var5) {
-         int var6;
-         if (!var1.getAccepted()) {
-            var6 = 10526880;
-         } else if (var1.getOnline()) {
-            var6 = 8388479;
+      private void renderInvitedItem(PoseStack var1, PlayerInfo var2, int var3, int var4, int var5, int var6) {
+         int var7;
+         if (!var2.getAccepted()) {
+            var7 = 10526880;
+         } else if (var2.getOnline()) {
+            var7 = 8388479;
          } else {
-            var6 = 16777215;
+            var7 = 16777215;
          }
 
-         RealmsPlayerScreen.this.drawString(var1.getName(), RealmsPlayerScreen.this.column1_x + 3 + 12, var3 + 1, var6);
-         if (var1.isOperator()) {
-            RealmsPlayerScreen.this.drawOpped(RealmsPlayerScreen.this.column1_x + RealmsPlayerScreen.this.column_width - 10, var3 + 1, var4, var5);
+         RealmsPlayerScreen.this.font.draw(var1, var2.getName(), (float)(RealmsPlayerScreen.this.column1X + 3 + 12), (float)(var4 + 1), var7);
+         if (var2.isOperator()) {
+            RealmsPlayerScreen.this.drawOpped(var1, RealmsPlayerScreen.this.column1X + RealmsPlayerScreen.this.columnWidth - 10, var4 + 1, var5, var6);
          } else {
-            RealmsPlayerScreen.this.drawNormal(RealmsPlayerScreen.this.column1_x + RealmsPlayerScreen.this.column_width - 10, var3 + 1, var4, var5);
+            RealmsPlayerScreen.this.drawNormal(var1, RealmsPlayerScreen.this.column1X + RealmsPlayerScreen.this.columnWidth - 10, var4 + 1, var5, var6);
          }
 
-         RealmsPlayerScreen.this.drawRemoveIcon(RealmsPlayerScreen.this.column1_x + RealmsPlayerScreen.this.column_width - 22, var3 + 2, var4, var5);
-         RealmsPlayerScreen.this.drawString(RealmsScreen.getLocalizedString("mco.configure.world.activityfeed.disabled"), RealmsPlayerScreen.this.column2_x, RealmsConstants.row(5), 10526880);
-         RealmsTextureManager.withBoundFace(var1.getUuid(), () -> {
+         RealmsPlayerScreen.this.drawRemoveIcon(var1, RealmsPlayerScreen.this.column1X + RealmsPlayerScreen.this.columnWidth - 22, var4 + 2, var5, var6);
+         RealmsPlayerScreen.this.font.draw(var1, I18n.get("mco.configure.world.activityfeed.disabled"), (float)RealmsPlayerScreen.this.column2X, (float)RealmsPlayerScreen.row(5), 10526880);
+         RealmsTextureManager.withBoundFace(var2.getUuid(), () -> {
             RenderSystem.color4f(1.0F, 1.0F, 1.0F, 1.0F);
-            RealmsScreen.blit(RealmsPlayerScreen.this.column1_x + 2 + 2, var3 + 1, 8.0F, 8.0F, 8, 8, 8, 8, 64, 64);
-            RealmsScreen.blit(RealmsPlayerScreen.this.column1_x + 2 + 2, var3 + 1, 40.0F, 8.0F, 8, 8, 8, 8, 64, 64);
+            GuiComponent.blit(var1, RealmsPlayerScreen.this.column1X + 2 + 2, var4 + 1, 8, 8, 8.0F, 8.0F, 8, 8, 64, 64);
+            GuiComponent.blit(var1, RealmsPlayerScreen.this.column1X + 2 + 2, var4 + 1, 8, 8, 40.0F, 8.0F, 8, 8, 64, 64);
          });
       }
    }
 
-   class InvitedObjectSelectionList extends RealmsObjectSelectionList {
+   class InvitedObjectSelectionList extends RealmsObjectSelectionList<RealmsPlayerScreen.Entry> {
       public InvitedObjectSelectionList() {
-         super(RealmsPlayerScreen.this.column_width + 10, RealmsConstants.row(12) + 20, RealmsConstants.row(1), RealmsConstants.row(12) + 20, 13);
+         super(RealmsPlayerScreen.this.columnWidth + 10, RealmsPlayerScreen.row(12) + 20, RealmsPlayerScreen.row(1), RealmsPlayerScreen.row(12) + 20, 13);
       }
 
       public void addEntry(PlayerInfo var1) {
-         this.addEntry(RealmsPlayerScreen.this.new InvitedObjectSelectionListEntry(var1));
+         this.addEntry(RealmsPlayerScreen.this.new Entry(var1));
       }
 
       public int getRowWidth() {
-         return (int)((double)this.width() * 1.0D);
+         return (int)((double)this.width * 1.0D);
       }
 
       public boolean isFocused() {
-         return RealmsPlayerScreen.this.isFocused(this);
+         return RealmsPlayerScreen.this.getFocused() == this;
       }
 
       public boolean mouseClicked(double var1, double var3, int var5) {
-         if (var5 == 0 && var1 < (double)this.getScrollbarPosition() && var3 >= (double)this.y0() && var3 <= (double)this.y1()) {
-            int var6 = RealmsPlayerScreen.this.column1_x;
-            int var7 = RealmsPlayerScreen.this.column1_x + RealmsPlayerScreen.this.column_width;
-            int var8 = (int)Math.floor(var3 - (double)this.y0()) - this.headerHeight() + this.getScroll() - 4;
-            int var9 = var8 / this.itemHeight();
+         if (var5 == 0 && var1 < (double)this.getScrollbarPosition() && var3 >= (double)this.y0 && var3 <= (double)this.y1) {
+            int var6 = RealmsPlayerScreen.this.column1X;
+            int var7 = RealmsPlayerScreen.this.column1X + RealmsPlayerScreen.this.columnWidth;
+            int var8 = (int)Math.floor(var3 - (double)this.y0) - this.headerHeight + (int)this.getScrollAmount() - 4;
+            int var9 = var8 / this.itemHeight;
             if (var1 >= (double)var6 && var1 <= (double)var7 && var9 >= 0 && var8 >= 0 && var9 < this.getItemCount()) {
                this.selectItem(var9);
-               this.itemClicked(var8, var9, var1, var3, this.width());
+               this.itemClicked(var8, var9, var1, var3, this.width);
             }
 
             return true;
          } else {
             return super.mouseClicked(var1, var3, var5);
          }
       }
 
       public void itemClicked(int var1, int var2, double var3, double var5, int var7) {
          if (var2 >= 0 && var2 <= RealmsPlayerScreen.this.serverData.players.size() && RealmsPlayerScreen.this.toolTip != null) {
-            if (!RealmsPlayerScreen.this.toolTip.equals(RealmsScreen.getLocalizedString("mco.configure.world.invites.ops.tooltip")) && !RealmsPlayerScreen.this.toolTip.equals(RealmsScreen.getLocalizedString("mco.configure.world.invites.normal.tooltip"))) {
-               if (RealmsPlayerScreen.this.toolTip.equals(RealmsScreen.getLocalizedString("mco.configure.world.invites.remove.tooltip"))) {
+            if (!RealmsPlayerScreen.this.toolTip.equals(I18n.get("mco.configure.world.invites.ops.tooltip")) && !RealmsPlayerScreen.this.toolTip.equals(I18n.get("mco.configure.world.invites.normal.tooltip"))) {
+               if (RealmsPlayerScreen.this.toolTip.equals(I18n.get("mco.configure.world.invites.remove.tooltip"))) {
                   RealmsPlayerScreen.this.uninvite(var2);
                }
             } else if (((PlayerInfo)RealmsPlayerScreen.this.serverData.players.get(var2)).isOperator()) {
                RealmsPlayerScreen.this.deop(var2);
             } else {
@@ -365,33 +358,35 @@
 
          }
       }
 
       public void selectItem(int var1) {
-         this.setSelected(var1);
+         this.setSelectedItem(var1);
          if (var1 != -1) {
-            Realms.narrateNow(RealmsScreen.getLocalizedString("narrator.select", ((PlayerInfo)RealmsPlayerScreen.this.serverData.players.get(var1)).getName()));
+            NarrationHelper.now(I18n.get("narrator.select", ((PlayerInfo)RealmsPlayerScreen.this.serverData.players.get(var1)).getName()));
          }
 
          this.selectInviteListItem(var1);
       }
 
       public void selectInviteListItem(int var1) {
          RealmsPlayerScreen.this.player = var1;
          RealmsPlayerScreen.this.updateButtonStates();
       }
 
-      public void renderBackground() {
-         RealmsPlayerScreen.this.renderBackground();
+      public void setSelected(@Nullable RealmsPlayerScreen.Entry var1) {
+         super.setSelected(var1);
+         RealmsPlayerScreen.this.player = this.children().indexOf(var1);
+         RealmsPlayerScreen.this.updateButtonStates();
       }
 
-      public int getScrollbarPosition() {
-         return RealmsPlayerScreen.this.column1_x + this.width() - 5;
+      public void renderBackground(PoseStack var1) {
+         RealmsPlayerScreen.this.renderBackground(var1);
       }
 
-      public int getItemCount() {
-         return RealmsPlayerScreen.this.serverData == null ? 1 : RealmsPlayerScreen.this.serverData.players.size();
+      public int getScrollbarPosition() {
+         return RealmsPlayerScreen.this.column1X + this.width - 5;
       }
 
       public int getMaxPosition() {
          return this.getItemCount() * 13;
       }
