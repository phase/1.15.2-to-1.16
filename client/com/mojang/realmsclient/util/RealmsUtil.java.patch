--- com/mojang/realmsclient/util/RealmsUtil.java
+++ com/mojang/realmsclient/util/RealmsUtil.java
@@ -8,66 +8,67 @@
 import com.mojang.authlib.minecraft.MinecraftProfileTexture;
 import com.mojang.authlib.minecraft.MinecraftSessionService;
 import com.mojang.authlib.minecraft.MinecraftProfileTexture.Type;
 import com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService;
 import com.mojang.util.UUIDTypeAdapter;
+import java.util.Date;
 import java.util.Map;
 import java.util.UUID;
 import java.util.concurrent.TimeUnit;
-import net.minecraft.realms.Realms;
+import net.minecraft.client.Minecraft;
 
 public class RealmsUtil {
-   private static final YggdrasilAuthenticationService authenticationService = new YggdrasilAuthenticationService(Realms.getProxy(), UUID.randomUUID().toString());
-   private static final MinecraftSessionService sessionService;
+   private static final YggdrasilAuthenticationService AUTHENTICATION_SERVICE = new YggdrasilAuthenticationService(Minecraft.getInstance().getProxy(), UUID.randomUUID().toString());
+   private static final MinecraftSessionService SESSION_SERVICE;
    public static LoadingCache<String, GameProfile> gameProfileCache;
 
    public static String uuidToName(String var0) throws Exception {
       GameProfile var1 = (GameProfile)gameProfileCache.get(var0);
       return var1.getName();
    }
 
    public static Map<Type, MinecraftProfileTexture> getTextures(String var0) {
       try {
          GameProfile var1 = (GameProfile)gameProfileCache.get(var0);
-         return sessionService.getTextures(var1, false);
+         return SESSION_SERVICE.getTextures(var1, false);
       } catch (Exception var2) {
          return Maps.newHashMap();
       }
    }
 
-   public static void browseTo(String var0) {
-      Realms.openUri(var0);
-   }
-
-   public static String convertToAgePresentation(Long var0) {
+   public static String convertToAgePresentation(long var0) {
       if (var0 < 0L) {
          return "right now";
       } else {
-         long var1 = var0 / 1000L;
-         if (var1 < 60L) {
-            return (var1 == 1L ? "1 second" : var1 + " seconds") + " ago";
+         long var2 = var0 / 1000L;
+         if (var2 < 60L) {
+            return (var2 == 1L ? "1 second" : var2 + " seconds") + " ago";
          } else {
-            long var3;
-            if (var1 < 3600L) {
-               var3 = var1 / 60L;
-               return (var3 == 1L ? "1 minute" : var3 + " minutes") + " ago";
-            } else if (var1 < 86400L) {
-               var3 = var1 / 3600L;
-               return (var3 == 1L ? "1 hour" : var3 + " hours") + " ago";
+            long var4;
+            if (var2 < 3600L) {
+               var4 = var2 / 60L;
+               return (var4 == 1L ? "1 minute" : var4 + " minutes") + " ago";
+            } else if (var2 < 86400L) {
+               var4 = var2 / 3600L;
+               return (var4 == 1L ? "1 hour" : var4 + " hours") + " ago";
             } else {
-               var3 = var1 / 86400L;
-               return (var3 == 1L ? "1 day" : var3 + " days") + " ago";
+               var4 = var2 / 86400L;
+               return (var4 == 1L ? "1 day" : var4 + " days") + " ago";
             }
          }
       }
    }
 
+   public static String convertToAgePresentationFromInstant(Date var0) {
+      return convertToAgePresentation(System.currentTimeMillis() - var0.getTime());
+   }
+
    static {
-      sessionService = authenticationService.createMinecraftSessionService();
+      SESSION_SERVICE = AUTHENTICATION_SERVICE.createMinecraftSessionService();
       gameProfileCache = CacheBuilder.newBuilder().expireAfterWrite(60L, TimeUnit.MINUTES).build(new CacheLoader<String, GameProfile>() {
          public GameProfile load(String var1) throws Exception {
-            GameProfile var2 = RealmsUtil.sessionService.fillProfileProperties(new GameProfile(UUIDTypeAdapter.fromString(var1), (String)null), false);
+            GameProfile var2 = RealmsUtil.SESSION_SERVICE.fillProfileProperties(new GameProfile(UUIDTypeAdapter.fromString(var1), (String)null), false);
             if (var2 == null) {
                throw new Exception("Couldn't get profile");
             } else {
                return var2;
             }
